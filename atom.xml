<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WangYangYang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangyangyangisme.github.io/"/>
  <updated>2020-05-23T04:20:04.092Z</updated>
  <id>http://wangyangyangisme.github.io/</id>
  
  <author>
    <name>Wang YangYang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一文详解微服务架构</title>
    <link href="http://wangyangyangisme.github.io/2020/05/23/microservice-%E4%B8%80%E6%96%87%E8%AF%A6%E8%A7%A3%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    <id>http://wangyangyangisme.github.io/2020/05/23/microservice-一文详解微服务架构/</id>
    <published>2020-05-23T03:38:36.000Z</published>
    <updated>2020-05-23T04:20:04.092Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一文详解微服务架构"><a href="#一文详解微服务架构" class="headerlink" title="一文详解微服务架构"></a>一文详解微服务架构</h1><blockquote><p>原文：<a href="https://www.cnblogs.com/skabyy/p/11396571.html" target="_blank" rel="noopener">https://www.cnblogs.com/skabyy/p/11396571.html</a></p></blockquote><p>本文将介绍微服务架构和相关的组件，介绍他们是什么以及为什么要使用微服务架构和这些组件。本文侧重于简明地表达微服务架构的全局图景，因此不会涉及具体如何使用组件等细节。</p><p>要理解微服务，首先要先理解不是微服务的那些。通常跟微服务相对的是单体应用，即将所有功能都打包成在一个独立单元的应用程序。从单体应用到微服务并不是一蹴而就的，这是一个逐渐演变的过程。本文将以一个网上超市应用为例来说明这一过程。</p><h2 id="最初的需求"><a href="#最初的需求" class="headerlink" title="最初的需求"></a>最初的需求</h2><p>几年前，小明和小皮一起创业做网上超市。小明负责程序开发，小皮负责其他事宜。当时互联网还不发达，网上超市还是蓝海。只要功能实现了就能随便赚钱。所以他们的需求很简单，只需要一个网站挂在公网，用户能够在这个网站上浏览商品、购买商品；另外还需一个管理后台，可以管理商品、用户、以及订单数据。</p><p>我们整理一下功能清单：</p><ul><li>网站<ul><li>用户注册、登录功能</li><li>商品展示</li><li>下单</li></ul></li><li>管理后台<ul><li>用户管理</li><li>商品管理</li><li>订单管理</li></ul></li></ul><p>由于需求简单，小明左手右手一个慢动作，网站就做好了。管理后台出于安全考虑，不和网站做在一起，小明右手左手慢动作重播，管理网站也做好了。总体架构图如下：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture1.png"></p><p>小明挥一挥手，找了家云服务部署上去，网站就上线了。上线后好评如潮，深受各类肥宅喜爱。小明小皮美滋滋地开始躺着收钱。</p><h2 id="随着业务发展……"><a href="#随着业务发展……" class="headerlink" title="随着业务发展……"></a>随着业务发展……</h2><p>好景不长，没过几天，各类网上超市紧跟着拔地而起，对小明小皮造成了强烈的冲击。</p><p>在竞争的压力下，小明小皮决定开展一些营销手段：</p><ul><li>开展促销活动。比如元旦全场打折，春节买二送一，情人节狗粮优惠券等等。</li><li>拓展渠道，新增移动端营销。除了网站外，还需要开发移动端APP，微信小程序等。</li><li>精准营销。利用历史数据对用户进行分析，提供个性化服务。</li><li>……</li></ul><p>这些活动都需要程序开发的支持。小明拉了同学小红加入团队。小红负责数据分析以及移动端相关开发。小明负责促销活动相关功能的开发。</p><p>因为开发任务比较紧迫，小明小红没有好好规划整个系统的架构，随便拍了拍脑袋，决定把促销管理和数据分析放在管理后台里，微信和移动端APP另外搭建。通宵了几天后，新功能和新应用基本完工。这时架构图如下：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture2.png"></p><p>这一阶段存在很多不合理的地方：</p><ul><li>网站和移动端应用有很多相同业务逻辑的重复代码。</li><li>数据有时候通过数据库共享，有时候通过接口调用传输。接口调用关系杂乱。</li><li>单个应用为了给其他应用提供接口，渐渐地越改越大，包含了很多本来就不属于它的逻辑。应用边界模糊，功能归属混乱。</li><li>管理后台在一开始的设计中保障级别较低。加入数据分析和促销管理相关功能后出现性能瓶颈，影响了其他应用。</li><li>数据库表结构被多个应用依赖，无法重构和优化。</li><li>所有应用都在一个数据库上操作，数据库出现性能瓶颈。特别是数据分析跑起来的时候，数据库性能急剧下降。</li><li>开发、测试、部署、维护愈发困难。即使只改动一个小功能，也需要整个应用一起发布。有时候发布会不小心带上了一些未经测试的代码，或者修改了一个功能后，另一个意想不到的地方出错了。为了减轻发布可能产生的问题的影响和线上业务停顿的影响，所有应用都要在凌晨三四点执行发布。发布后为了验证应用正常运行，还得盯到第二天白天的用户高峰期……</li><li>团队出现推诿扯皮现象。关于一些公用的功能应该建设在哪个应用上的问题常常要争论很久，最后要么干脆各做各的，或者随便放个地方但是都不维护。</li></ul><p>尽管有着诸多问题，但也不能否认这一阶段的成果：快速地根据业务变化建设了系统。不过<strong>紧迫且繁重的任务容易使人陷入局部、短浅的思维方式，从而做出妥协式的决策</strong>。在这种架构中，每个人都只关注在自己的一亩三分地，缺乏全局的、长远的设计。长此以往，系统建设将会越来越困难，甚至陷入不断推翻、重建的循环。</p><h2 id="是时候做出改变了"><a href="#是时候做出改变了" class="headerlink" title="是时候做出改变了"></a>是时候做出改变了</h2><p>幸好小明和小红是有追求有理想的好青年。意识到问题后，小明和小红从琐碎的业务需求中腾出了一部分精力，开始梳理整体架构，针对问题准备着手改造。</p><blockquote><p>要做改造，首先你需要有足够的精力和资源。如果你的需求方（业务人员、项目经理、上司等）很强势地一心追求需求进度，以致于你无法挪出额外的精力和资源的话，那么你可能无法做任何事……</p></blockquote><p>在编程的世界中，最重要的便是<strong>抽象能力</strong>。微服务改造的过程实际上也是个抽象的过程。小明和小红整理了网上超市的业务逻辑，抽象出公用的业务能力，做成几个公共服务：</p><ul><li>用户服务</li><li>商品服务</li><li>促销服务</li><li>订单服务</li><li>数据分析服务</li></ul><p>各个应用后台只需从这些服务获取所需的数据，从而删去了大量冗余的代码，就剩个轻薄的控制层和前端。这一阶段的架构如下：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture3.png"></p><p>这个阶段只是将服务分开了，数据库依然是共用的，所以一些烟囱式系统的缺点仍然存在：</p><ol><li>数据库成为性能瓶颈，并且有单点故障的风险。</li><li>数据管理趋向混乱。即使一开始有良好的模块化设计，随着时间推移，总会有一个服务直接从数据库取另一个服务的数据的现象。</li><li>数据库表结构可能被多个服务依赖，牵一发而动全身，很难调整。</li></ol><p>如果一直保持共用数据库的模式，则整个架构会越来越僵化，失去了微服务架构的意义。因此小明和小红一鼓作气，把数据库也拆分了。所有持久化层相互隔离，由各个服务自己负责。另外，为了提高系统的实时性，加入了消息队列机制。架构如下：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture4.png"></p><p>完全拆分后各个服务可以采用异构的技术。比如数据分析服务可以使用数据仓库作为持久化层，以便于高效地做一些统计计算；商品服务和促销服务访问频率比较大，因此加入了缓存机制等。</p><blockquote><p>还有一种抽象出公共逻辑的方法是把这些公共逻辑做成公共的框架库。这种方法可以减少服务调用的性能损耗。但是这种方法的管理成本非常高昂，很难保证所有应用版本的一致性。</p></blockquote><blockquote><p>数据库拆分也有一些问题和挑战：比如说跨库级联的需求，通过服务查询数据颗粒度的粗细问题等。但是这些问题可以通过合理的设计来解决。总体来说，数据库拆分是一个利大于弊的。</p></blockquote><p>微服务架构还有一个技术外的好处，它使整个系统的分工更加明确，责任更加清晰，每个人专心负责为其他人提供更好的服务。在单体应用的时代，公共的业务功能经常没有明确的归属。最后要么各做各的，每个人都重新实现了一遍；要么是随机一个人（一般是能力比较强或者比较热心的人）做到他负责的应用里面。在后者的情况下，这个人在负责自己应用之外，还要额外负责给别人提供这些公共的功能——而这个功能本来是无人负责的，仅仅因为他能力较强/比较热心，就莫名地背锅（这种情况还被美其名曰能者多劳）。结果最后大家都不愿意提供公共的功能。长此以往，团队里的人渐渐变得各自为政，不再关心全局的架构设计。</p><p>从这个角度上看，使用微服务架构同时也需要组织结构做相应的调整。所以说做微服务改造需要管理者的支持。</p><p>改造完成后，小明和小红分清楚各自的锅。两人十分满意，一切就像是麦克斯韦方程组一样漂亮完美。</p><p>然而……</p><h2 id="没有银弹"><a href="#没有银弹" class="headerlink" title="没有银弹"></a>没有银弹</h2><p>春天来了，万物复苏，又到了一年一度的购物狂欢节。眼看着日订单数量蹭蹭地上涨，小皮小明小红喜笑颜开。可惜好景不长，乐极生悲，突然嘣的一下，系统挂了。</p><p>以往单体应用，排查问题通常是看一下日志，研究错误信息和调用堆栈。而<strong>微服务架构整个应用分散成多个服务，定位故障点非常困难</strong>。小明一个台机器一台机器地查看日志，一个服务一个服务地手工调用。经过十几分钟的查找，小明终于定位到故障点：促销服务由于接收的请求量太大而停止响应了。其他服务都直接或间接地会调用促销服务，于是也跟着宕机了。<strong>在微服务架构中，一个服务故障可能会产生雪崩效用，导致整个系统故障</strong>。其实在节前，小明和小红是有做过请求量评估的。按照预计，服务器资源是足以支持节日的请求量的，所以肯定是哪里出了问题。不过形势紧急，随着每一分每一秒流逝的都是白花花的银子，因此小明也没时间排查问题，当机立断在云上新建了几台虚拟机，然后一台一台地部署新的促销服务节点。几分钟的操作后，系统总算是勉强恢复正常了。整个故障时间内估计损失了几十万的销售额，三人的心在滴血……</p><p>事后，小明简单写了个日志分析工具（量太大了，文本编辑器几乎打不开，打开了肉眼也看不过来），统计了促销服务的访问日志，发现在故障期间，商品服务由于代码问题，在某些场景下会对促销服务发起大量请求。这个问题并不复杂，小明手指抖一抖，修复了这个价值几十万的Bug。</p><p>问题是解决了，但谁也无法保证不会再发生类似的其他问题。微服务架构虽然逻辑设计上看是完美的，但就像积木搭建的华丽宫殿一样，经不起风吹草动。微服务架构虽然解决了旧问题，也引入了新的问题：</p><ul><li>微服务架构整个应用分散成多个服务，定位故障点非常困难。</li><li>稳定性下降。服务数量变多导致其中一个服务出现故障的概率增大，并且一个服务故障可能导致整个系统挂掉。事实上，在大访问量的生产场景下，故障总是会出现的。</li><li>服务数量非常多，部署、管理的工作量很大。</li><li>开发方面：如何保证各个服务在持续开发的情况下仍然保持协同合作。</li><li>测试方面：服务拆分后，几乎所有功能都会涉及多个服务。原本单个程序的测试变为服务间调用的测试。测试变得更加复杂。</li></ul><p>小明小红痛定思痛，决心好好解决这些问题。对故障的处理一般从两方面入手，一方面尽量减少故障发生的概率，另一方面降低故障造成的影响。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture5.png"></p><h2 id="监控-发现故障的征兆"><a href="#监控-发现故障的征兆" class="headerlink" title="监控 - 发现故障的征兆"></a>监控 - 发现故障的征兆</h2><p>在高并发分布式的场景下，故障经常是突然间就雪崩式爆发。所以必须建立完善的监控体系，尽可能发现故障的征兆。</p><p>微服务架构中组件繁多，各个组件所需要监控的指标不同。比如Redis缓存一般监控占用内存值、网络流量，数据库监控连接数、磁盘空间，业务服务监控并发数、响应延迟、错误率等。因此如果做一个大而全的监控系统来监控各个组件是不大现实的，而且扩展性会很差。一般的做法是让各个组件提供报告自己当前状态的接口（metrics接口），这个接口输出的数据格式应该是一致的。然后部署一个指标采集器组件，定时从这些接口获取并保持组件状态，同时提供查询服务。最后还需要一个UI，从指标采集器查询各项指标，绘制监控界面或者根据阈值发出告警。</p><p>大部分组件都不需要自己动手开发，网络上有开源组件。小明下载了RedisExporter和MySQLExporter，这两个组件分别提供了Redis缓存和MySQL数据库的指标接口。微服务则根据各个服务的业务逻辑实现自定义的指标接口。然后小明采用Prometheus作为指标采集器，Grafana配置监控界面和邮件告警。这样一套微服务监控系统就搭建起来了：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture6.jpg"></p><h2 id="定位问题-链路跟踪"><a href="#定位问题-链路跟踪" class="headerlink" title="定位问题 - 链路跟踪"></a>定位问题 - 链路跟踪</h2><p>在微服务架构下，一个用户的请求往往涉及多个内部服务调用。为了方便定位问题，需要能够记录每个用户请求时，微服务内部产生了多少服务调用，及其调用关系。这个叫做链路跟踪。</p><p>我们用一个Istio文档里的链路跟踪例子来看看效果：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture7.png"></p><blockquote><p>图片来自<a href="https://istio.io/zh/docs/tasks/telemetry/distributed-tracing/zipkin/" target="_blank" rel="noopener">Istio文档</a></p></blockquote><p>从图中可以看到，这是一个用户访问productpage页面的请求。在请求过程中，productpage服务顺序调用了details和reviews服务的接口。而reviews服务在响应过程中又调用了ratings的接口。整个链路跟踪的记录是一棵树：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture8.png"></p><p>要实现链路跟踪，每次服务调用会在HTTP的HEADERS中记录至少记录四项数据：</p><ul><li>traceId：traceId标识一个用户请求的调用链路。具有相同traceId的调用属于同一条链路。</li><li>spanId：标识一次服务调用的ID，即链路跟踪的节点ID。</li><li>parentId：父节点的spanId。</li><li>requestTime &amp; responseTime：请求时间和响应时间。</li></ul><p>另外，还需要调用日志收集与存储的组件，以及展示链路调用的UI组件。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture9.png"></p><p>以上只是一个极简的说明，关于链路跟踪的理论依据可详见Google的<a href="http://bigbully.github.io/Dapper-translation/" target="_blank" rel="noopener">Dapper</a></p><p>了解了理论基础后，小明选用了Dapper的一个开源实现Zipkin。然后手指一抖，写了个HTTP请求的拦截器，在每次HTTP请求时生成这些数据注入到HEADERS，同时异步发送调用日志到Zipkin的日志收集器中。这里额外提一下，HTTP请求的拦截器，可以在微服务的代码中实现，也可以使用一个网络代理组件来实现（不过这样子每个微服务都需要加一层代理）。</p><p>链路跟踪只能定位到哪个服务出现问题，不能提供具体的错误信息。查找具体的错误信息的能力则需要由日志分析组件来提供。</p><h2 id="分析问题-日志分析"><a href="#分析问题-日志分析" class="headerlink" title="分析问题 - 日志分析"></a>分析问题 - 日志分析</h2><p>日志分析组件应该在微服务兴起之前就被广泛使用了。即使单体应用架构，当访问数变大、或服务器规模增多时，日志文件的大小会膨胀到难以用文本编辑器进行访问，更糟的是它们分散在多台服务器上面。排查一个问题，需要登录到各台服务器去获取日志文件，一个一个地查找（而且打开、查找都很慢）想要的日志信息。</p><p>因此，在应用规模变大时，我们需要一个日志的“<strong>搜索引擎</strong>”。以便于能准确的找到想要的日志。另外，数据源一侧还需要收集日志的组件和展示结果的UI组件：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture10.png"></p><p>小明调查了一下，使用了大名鼎鼎地ELK日志分析组件。ELK是Elasticsearch、Logstash和Kibana三个组件的缩写。</p><ul><li>Elasticsearch：搜索引擎，同时也是日志的存储。</li><li>Logstash：日志采集器，它接收日志输入，对日志进行一些预处理，然后输出到Elasticsearch。</li><li>Kibana：UI组件，通过Elasticsearch的API查找数据并展示给用户。</li></ul><p>最后还有一个小问题是如何将日志发送到Logstash。一种方案是在日志输出的时候直接调用Logstash接口将日志发送过去。这样一来又（咦，为啥要用“又”）要修改代码……于是小明选用了另一种方案：日志仍然输出到文件，每个服务里再部署个Agent扫描日志文件然后输出给Logstash。</p><h2 id="网关-权限控制，服务治理"><a href="#网关-权限控制，服务治理" class="headerlink" title="网关 - 权限控制，服务治理"></a>网关 - 权限控制，服务治理</h2><p>拆分成微服务后，出现大量的服务，大量的接口，使得整个调用关系乱糟糟的。经常在开发过程中，写着写着，忽然想不起某个数据应该调用哪个服务。或者写歪了，调用了不该调用的服务，本来一个只读的功能结果修改了数据……</p><p>为了应对这些情况，微服务的调用需要一个把关的东西，也就是网关。在调用者和被调用者中间加一层网关，每次调用时进行权限校验。另外，网关也可以作为一个提供服务接口文档的平台。</p><p>使用网关有一个问题就是要决定在多大粒度上使用：最粗粒度的方案是整个微服务一个网关，微服务外部通过网关访问微服务，微服务内部则直接调用；最细粒度则是所有调用，不管是微服务内部调用或者来自外部的调用，都必须通过网关。折中的方案是按照业务领域将微服务分成几个区，区内直接调用，区间通过网关调用。</p><p>由于整个网上超市的服务数量还不算特别多，小明采用的最粗粒度的方案：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture11.png"></p><h2 id="服务注册于发现-动态扩容"><a href="#服务注册于发现-动态扩容" class="headerlink" title="服务注册于发现 - 动态扩容"></a>服务注册于发现 - 动态扩容</h2><p>前面的组件，都是旨在降低故障发生的可能性。然而故障总是会发生的，所以另一个需要研究的是如何降低故障产生的影响。</p><p>最粗暴的（也是最常用的）故障处理策略就是冗余。一般来说，一个服务都会部署多个实例，这样一来能够分担压力提高性能，二来即使一个实例挂了其他实例还能响应。</p><p>冗余的一个问题是使用几个冗余？这个问题在时间轴上并没有一个切确的答案。根据服务功能、时间段的不同，需要不同数量的实例。比如在平日里，可能4个实例已经够用；而在促销活动时，流量大增，可能需要40个实例。因此冗余数量并不是一个固定的值，而是根据需要实时调整的。</p><p>一般来说新增实例的操作为：</p><ol><li>部署新实例</li><li>将新实例注册到负载均衡或DNS上</li></ol><p>操作只有两步，但如果注册到负载均衡或DNS的操作为人工操作的话，那事情就不简单了。想想新增40个实例后，要手工输入40个IP的感觉……</p><p>解决这个问题的方案是服务自动注册与发现。首先，需要部署一个服务发现服务，它提供所有已注册服务的地址信息的服务。DNS也算是一种服务发现服务。然后各个应用服务在启动时自动将自己注册到服务发现服务上。并且应用服务启动后会实时（定期）从服务发现服务同步各个应用服务的地址列表到本地。服务发现服务也会定期检查应用服务的健康状态，去掉不健康的实例地址。这样新增实例时只需要部署新实例，实例下线时直接关停服务即可，服务发现会自动检查服务实例的增减。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture12.png"></p><p>服务发现还会跟客户端负载均衡配合使用。由于应用服务已经同步服务地址列表在本地了，所以访问微服务时，可以自己决定负载策略。甚至可以在服务注册时加入一些元数据（服务版本等信息），客户端负载则根据这些元数据进行流量控制，实现A/B测试、蓝绿发布等功能。</p><p>服务发现有很多组件可以选择，比如说Zookeeper 、Eureka、Consul、Etcd等。不过小明觉得自己水平不错，想炫技，于是基于Redis自己写了一个……</p><h2 id="熔断、服务降级、限流"><a href="#熔断、服务降级、限流" class="headerlink" title="熔断、服务降级、限流"></a>熔断、服务降级、限流</h2><h3 id="熔断"><a href="#熔断" class="headerlink" title="熔断"></a>熔断</h3><p>当一个服务因为各种原因停止响应时，调用方通常会等待一段时间，然后超时或者收到错误返回。如果调用链路比较长，可能会导致请求堆积，整条链路占用大量资源一直在等待下游响应。所以当多次访问一个服务失败时，应熔断，标记该服务已停止工作，直接返回错误。直至该服务恢复正常后再重新建立连接。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture13.png"></p><blockquote><p>图片来自《<a href="https://book.douban.com/subject/26772677/" target="_blank" rel="noopener">微服务设计</a>》</p></blockquote><h3 id="服务降级"><a href="#服务降级" class="headerlink" title="服务降级"></a>服务降级</h3><p>当下游服务停止工作后，如果该服务并非核心业务，则上游服务应该降级，以保证核心业务不中断。比如网上超市下单界面有一个推荐商品凑单的功能，当推荐模块挂了后，下单功能不能一起挂掉，只需要暂时关闭推荐功能即可。</p><h3 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h3><p>一个服务挂掉后，上游服务或者用户一般会习惯性地重试访问。这导致一旦服务恢复正常，很可能因为瞬间网络流量过大又立刻挂掉，在棺材里重复着仰卧起坐。因此服务需要能够自我保护——限流。限流策略有很多，最简单的比如当单位时间内请求数过多时，丢弃多余的请求。另外，也可以考虑分区限流。仅拒绝来自产生大量请求的服务的请求。例如商品服务和订单服务都需要访问促销服务，商品服务由于代码问题发起了大量请求，促销服务则只限制来自商品服务的请求，来自订单服务的请求则正常响应。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture14.png"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>微服务架构下，测试分为三个层次：</p><ol><li>端到端测试：覆盖整个系统，一般在用户界面机型测试。</li><li>服务测试：针对服务接口进行测试。</li><li>单元测试：针对代码单元进行测试。</li></ol><p>三种测试从上到下实施的容易程度递增，但是测试效果递减。端到端测试最费时费力，但是通过测试后我们对系统最有信心。单元测试最容易实施，效率也最高，但是测试后不能保证整个系统没有问题。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture15.png"></p><p>由于端到端测试实施难度较大，一般只对核心功能做端到端测试。一旦端到端测试失败，则需要将其分解到单元测试：则分析失败原因，然后编写单元测试来重现这个问题，这样未来我们便可以更快地捕获同样的错误。</p><p>服务测试的难度在于服务会经常依赖一些其他服务。这个问题可以通过Mock Server解决：</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture16.png"></p><p>单元测试大家都很熟悉了。我们一般会编写大量的单元测试（包括回归测试）尽量覆盖所有代码。</p><h2 id="微服务框架"><a href="#微服务框架" class="headerlink" title="微服务框架"></a>微服务框架</h2><p>指标接口、链路跟踪注入、日志引流、服务注册发现、路由规则等组件以及熔断、限流等功能都需要在应用服务上添加一些对接代码。如果让每个应用服务自己实现是非常耗时耗力的。基于DRY的原则，小明开发了一套微服务框架，将与各个组件对接的代码和另外一些公共代码抽离到框架中，所有的应用服务都统一使用这套框架进行开发。</p><p>使用微服务框架可以实现很多自定义的功能。甚至可以将程序调用堆栈信息注入到链路跟踪，实现代码级别的链路跟踪。或者输出线程池、连接池的状态信息，实时监控服务底层状态。</p><p>使用统一的微服务框架有一个比较严重的问题：框架更新成本很高。每次框架升级，都需要所有应用服务配合升级。当然，一般会使用兼容方案，留出一段并行时间等待所有应用服务升级。但是如果应用服务非常多时，升级时间可能会非常漫长。并且有一些很稳定几乎不更新的应用服务，其负责人可能会拒绝升级……因此，使用统一微服务框架需要完善的版本管理方法和开发管理规范。</p><h2 id="另一条路-Service-Mesh"><a href="#另一条路-Service-Mesh" class="headerlink" title="另一条路 - Service Mesh"></a>另一条路 - Service Mesh</h2><p>另一种抽象公共代码的方法是直接将这些代码抽象到一个反向代理组件。每个服务都额外部署这个代理组件，所有出站入站的流量都通过该组件进行处理和转发。这个组件被称为Sidecar。</p><blockquote><p>Sidecar不会产生额外网络成本。Sidecar会和微服务节点部署在同一台主机上并且共用相同的虚拟网卡。所以sidecar和微服务节点的通信实际上都只是通过内存拷贝实现的。</p></blockquote><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture17.png"></p><blockquote><p>图片来自：<a href="http://philcalcado.com/2017/08/03/pattern_service_mesh.html" target="_blank" rel="noopener">Pattern: Service Mesh</a></p></blockquote><p>Sidecar只负责网络通信。还需要有个组件来统一管理所有sidecar的配置。在Service Mesh中，负责网络通信的部分叫数据平面（data plane），负责配置管理的部分叫控制平面（control plane）。数据平面和控制平面构成了Service Mesh的基本架构。</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/microserive/solutionmicroservicearchitecture18.png"></p><blockquote><p>图片来自：<a href="http://philcalcado.com/2017/08/03/pattern_service_mesh.html" target="_blank" rel="noopener">Pattern: Service Mesh</a></p></blockquote><p>Sevice Mesh相比于微服务框架的优点在于它不侵入代码，升级和维护更方便。它经常被诟病的则是性能问题。即使回环网络不会产生实际的网络请求，但仍然有内存拷贝的额外成本。另外有一些集中式的流量处理也会影响性能。</p><h2 id="结束、也是开始"><a href="#结束、也是开始" class="headerlink" title="结束、也是开始"></a>结束、也是开始</h2><p>微服务不是架构演变的终点。往细走还有Serverless、FaaS等方向。另一方面也有人在唱合久必分分久必合，重新发现单体架构……</p><p>不管怎样，微服务架构的改造暂时告一段落了。小明满足地摸了摸日益光滑的脑袋，打算这个周末休息一下约小红喝杯咖啡。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一文详解微服务架构&quot;&gt;&lt;a href=&quot;#一文详解微服务架构&quot; class=&quot;headerlink&quot; title=&quot;一文详解微服务架构&quot;&gt;&lt;/a&gt;一文详解微服务架构&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://www.cnblo
      
    
    </summary>
    
    
      <category term="microservice" scheme="http://wangyangyangisme.github.io/categories/microservice/"/>
    
    
  </entry>
  
  <entry>
    <title>Go使用反射导出Excel</title>
    <link href="http://wangyangyangisme.github.io/2020/05/19/golang-Go%E4%BD%BF%E7%94%A8%E5%8F%8D%E5%B0%84%E5%AF%BC%E5%87%BA%20Excel/"/>
    <id>http://wangyangyangisme.github.io/2020/05/19/golang-Go使用反射导出 Excel/</id>
    <published>2020-05-19T06:38:36.000Z</published>
    <updated>2020-05-19T06:38:51.335Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"github.com/360EntSecGroup-Skylar/excelize"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> users []*UserInfo</span><br><span class="line">users = <span class="built_in">append</span>(users, &amp;UserInfo&#123;</span><br><span class="line">Name: <span class="string">"小明"</span>,</span><br><span class="line">Age:  <span class="number">11</span>,</span><br><span class="line">Mobile: <span class="string">"15392262003"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">users = <span class="built_in">append</span>(users, &amp;UserInfo&#123;</span><br><span class="line">Name: <span class="string">"小华"</span>,</span><br><span class="line">Age:  <span class="number">12</span>,</span><br><span class="line">Mobile:<span class="string">"15369965887"</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 反射写</span></span><br><span class="line">RefactorWrite(users)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`xlsx:"A-姓名"`</span></span><br><span class="line">Age  <span class="keyword">int32</span>  <span class="string">`xlsx:"B-年龄"`</span></span><br><span class="line">Mobile <span class="keyword">string</span> <span class="string">`xlsx:"C-手机号"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RefactorWrite</span><span class="params">(users []*UserInfo)</span></span> &#123;</span><br><span class="line">xlsx := excelize.NewFile()</span><br><span class="line">index := xlsx.NewSheet(<span class="string">"Sheet1"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, t := <span class="keyword">range</span> users &#123;</span><br><span class="line">d := reflect.TypeOf(t).Elem()</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; d.NumField(); j++ &#123;</span><br><span class="line"><span class="comment">// 设置表头</span></span><br><span class="line"><span class="keyword">if</span> i == <span class="number">0</span> &#123;</span><br><span class="line">column := strings.Split(d.Field(j).Tag.Get(<span class="string">"xlsx"</span>), <span class="string">"-"</span>)[<span class="number">0</span>]</span><br><span class="line">name := strings.Split(d.Field(j).Tag.Get(<span class="string">"xlsx"</span>), <span class="string">"-"</span>)[<span class="number">1</span>]</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">1</span>), name)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置内容</span></span><br><span class="line">column := strings.Split(d.Field(j).Tag.Get(<span class="string">"xlsx"</span>), <span class="string">"-"</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">switch</span> d.Field(j).Type.String() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"string"</span>:</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">2</span>), reflect.ValueOf(t).Elem().Field(j).String())</span><br><span class="line"><span class="keyword">case</span> <span class="string">"int32"</span>:</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">2</span>), reflect.ValueOf(t).Elem().Field(j).Int())</span><br><span class="line"><span class="keyword">case</span> <span class="string">"int64"</span>:</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">2</span>), reflect.ValueOf(t).Elem().Field(j).Int())</span><br><span class="line"><span class="keyword">case</span> <span class="string">"bool"</span>:</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">2</span>), reflect.ValueOf(t).Elem().Field(j).Bool())</span><br><span class="line"><span class="keyword">case</span> <span class="string">"float32"</span>:</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">2</span>), reflect.ValueOf(t).Elem().Field(j).Float())</span><br><span class="line"><span class="keyword">case</span> <span class="string">"float64"</span>:</span><br><span class="line">xlsx.SetCellValue(<span class="string">"Sheet1"</span>, fmt.Sprintf(<span class="string">"%s%d"</span>, column, i+<span class="number">2</span>), reflect.ValueOf(t).Elem().Field(j).Float())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xlsx.SetActiveSheet(index)</span><br><span class="line"><span class="comment">// 保存到xlsx中</span></span><br><span class="line">err := xlsx.SaveAs(<span class="string">"test.xlsx"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="golang" scheme="http://wangyangyangisme.github.io/categories/golang/"/>
    
    
  </entry>
  
  <entry>
    <title>2019Go开发者路线图</title>
    <link href="http://wangyangyangisme.github.io/2020/04/10/golang-2019Go%E5%BC%80%E5%8F%91%E8%80%85%E8%B7%AF%E7%BA%BF%E5%9B%BE/"/>
    <id>http://wangyangyangisme.github.io/2020/04/10/golang-2019Go开发者路线图/</id>
    <published>2020-04-10T11:38:36.000Z</published>
    <updated>2020-04-10T10:47:27.826Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Go开发者路线图"><a href="#Go开发者路线图" class="headerlink" title="Go开发者路线图"></a>Go开发者路线图</h1><p>Go是Google开发的一种静态、强类型、编译型、并发型，并具有垃圾回收功能的类C编程语言。</p><p>2009以开源项目的形式发布，2012年发布1.0稳定版本，距今已经十年了，其性能类似于Java和C++，但速度极快，适合搭载于web服务器，用于高性能分布式系统开发。</p><p>作为热门的编程语言之一，Go语言吸引了很多关注。根据TIOBE编程排行榜，2016年，Go语言成为年度最受欢迎的编程语言；</p><p>2019年，Go语言的热度不减，仍稳居排行榜前20名。在基于云的服务中，Go语言因其在编译速度和执行性能上的优越性，具有其他编程语言无法比拟的优势。随着云计算的迅速发展，更多基于Go语言的项目正在不断涌现。</p><p>今天，CSDN就为大家推荐了一份来自Github的2019年Go开发者指南，帮助大家快速入门Go语言。</p><p>该指南提供了详细的进阶路线图，列出了学习Go开发所需的各类知识和技能，而且每个知识点也附上啦相应的学习资源。相信无论是零基础的新手，还是对Go语言有一定了解的开发者，都能够有所收获。</p><p><strong>Go开发者路线图</strong></p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-devlop.jpg"></p><p><strong>学习资源整理</strong></p><p><strong>1、先决条件</strong></p><p>1）Go：<a href="https://golangbot.com/" target="_blank" rel="noopener">https://golangbot.com/</a></p><p>2）Dep工具，Go模组：<a href="https://github.com/golang/dep" target="_blank" rel="noopener">https://github.com/golang/dep</a></p><p>3）SQL：<a href="https://www.w3schools.com/sql/default.asp" target="_blank" rel="noopener">https://www.w3schools.com/sql/default.asp</a></p><p><strong>2、基本开发技能</strong></p><p>1）学习Git，在GitHub上建立一些仓库，与他人分享你的代码：<a href="https://www.w3schools.com/sql/default.asp" target="_blank" rel="noopener">https://www.w3schools.com/sql/default.asp</a></p><p>2）了解HTTP(S)协议，request方法(GET,POST,PUT,PATCH,DELETE,OPTIONS)</p><p>3）不要害怕使用Google——Google搜索的力量：<a href="http://www.powersearchingwithgoogle.com/" target="_blank" rel="noopener">http://www.powersearchingwithgoogle.com/</a></p><p>4）看一些和数据结构及算法有关的书</p><p>5）学习关于认证的基础实现</p><p>6）学习面向对象原则</p><p><strong>3、命令行工具</strong></p><p>1）cobra：<a href="https://github.com/spf13/cobra" target="_blank" rel="noopener">https://github.com/spf13/cobra</a></p><p>2）urfave/cil：<a href="https://github.com/urfave/cli" target="_blank" rel="noopener">https://github.com/urfave/cli</a></p><p><strong>4、网络框架/路由</strong></p><p>1）Echo：<a href="https://github.com/labstack/echo" target="_blank" rel="noopener">https://github.com/labstack/echo</a></p><p>2）Beego：<a href="https://github.com/astaxie/beego" target="_blank" rel="noopener">https://github.com/astaxie/beego</a></p><p>3）Gin：<a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener">https://github.com/gin-gonic/gin</a></p><p>4）Revel：<a href="https://github.com/revel/revel" target="_blank" rel="noopener">https://github.com/revel/revel</a></p><p>5）Chi：<a href="https://github.com/go-chi/chi" target="_blank" rel="noopener">https://github.com/go-chi/chi</a></p><p><strong>5、数据库</strong></p><p>1）关系型</p><p>SQLServer：<a href="https://www.microsoft.com/en-us/sql-server/sql-server-2017" target="_blank" rel="noopener">https://www.microsoft.com/en-us/sql-server/sql-server-2017</a></p><p>PostgreSQL：<a href="https://www.postgresql.org/" target="_blank" rel="noopener">https://www.postgresql.org/</a></p><p>MariaDB：<a href="https://mariadb.org/" target="_blank" rel="noopener">https://mariadb.org/</a></p><p>MySQL：<a href="https://www.mysql.com/" target="_blank" rel="noopener">https://www.mysql.com/</a></p><p>2）云数据库</p><p>CosmosDB：<a href="https://docs.microsoft.com/en-us/azure/cosmos-db" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/cosmos-db</a></p><p>DynamoDB：<a href="https://aws.amazon.com/dynamodb/" target="_blank" rel="noopener">https://aws.amazon.com/dynamodb/</a></p><p>3）搜索引擎</p><p>ElasticSearch：<a href="https://www.elastic.co/" target="_blank" rel="noopener">https://www.elastic.co/</a></p><p>Solr：<a href="http://lucene.apache.org/solr/" target="_blank" rel="noopener">http://lucene.apache.org/solr/</a></p><p>Sphinx：<a href="http://sphinxsearch.com/" target="_blank" rel="noopener">http://sphinxsearch.com/</a></p><p>4）NoSQL</p><p>MongoDB：<a href="https://www.mongodb.com/" target="_blank" rel="noopener">https://www.mongodb.com/</a></p><p>Redis：<a href="https://redis.io/" target="_blank" rel="noopener">https://redis.io/</a></p><p>ApacheCassandra：<a href="http://cassandra.apache.org/" target="_blank" rel="noopener">http://cassandra.apache.org/</a></p><p>LiteDB：<a href="https://github.com/mbdavid/LiteDB" target="_blank" rel="noopener">https://github.com/mbdavid/LiteDB</a></p><p>RavenDB：<a href="https://github.com/ravendb/ravendb" target="_blank" rel="noopener">https://github.com/ravendb/ravendb</a></p><p>CouchDB：<a href="http://couchdb.apache.org/" target="_blank" rel="noopener">http://couchdb.apache.org/</a></p><p><strong>6、对象关系的映射框架</strong></p><p>Gorm：<a href="https://github.com/jinzhu/gorm" target="_blank" rel="noopener">https://github.com/jinzhu/gorm</a></p><p>Xorm：<a href="https://github.com/go-xorm/xorm" target="_blank" rel="noopener">https://github.com/go-xorm/xorm</a></p><p><strong>7、高速缓存</strong></p><p>GCache：<a href="https://github.com/bluele/gcache" target="_blank" rel="noopener">https://github.com/bluele/gcache</a></p><p><strong>分布式缓存</strong></p><p>Go-Redis：<a href="https://github.com/go-redis/redis" target="_blank" rel="noopener">https://github.com/go-redis/redis</a></p><p>GoMemcached：<a href="https://github.com/bradfitz/gomemcache" target="_blank" rel="noopener">https://github.com/bradfitz/gomemcache</a></p><p><strong>8、日志</strong></p><p>1）日志框架</p><p>Zap：<a href="https://github.com/uber-go/zap" target="_blank" rel="noopener">https://github.com/uber-go/zap</a></p><p>ZeroLog：<a href="https://github.com/rs/zerolog" target="_blank" rel="noopener">https://github.com/rs/zerolog</a></p><p>Logrus：<a href="https://github.com/sirupsen/logrus" target="_blank" rel="noopener">https://github.com/sirupsen/logrus</a></p><p>2）日志管理系统</p><p>Sentry.io：<a href="http://sentry.io/" target="_blank" rel="noopener">http://sentry.io/</a></p><p>Loggly.com：<a href="https://loggly.com/" target="_blank" rel="noopener">https://loggly.com/</a></p><p><strong>9、实时通讯</strong></p><p>Socket.IO：<a href="https://socket.io/" target="_blank" rel="noopener">https://socket.io/</a></p><p><strong>10、客户端</strong></p><p>1）REST</p><p>Gentelman：<a href="https://github.com/h2non/gentleman" target="_blank" rel="noopener">https://github.com/h2non/gentleman</a></p><p>GRequests：<a href="https://github.com/kennethreitz/grequests" target="_blank" rel="noopener">https://github.com/kennethreitz/grequests</a></p><p>heimdall：<a href="https://github.com/heimdal/heimdal" target="_blank" rel="noopener">https://github.com/heimdal/heimdal</a></p><p>2）GraphQL：<a href="https://graphql.org/" target="_blank" rel="noopener">https://graphql.org/</a></p><p><strong>11、最好知道的库</strong></p><p>Validator：<a href="https://github.com/chriso/validator.js/" target="_blank" rel="noopener">https://github.com/chriso/validator.js/</a></p><p>Glow：<a href="https://github.com/pytorch/glow" target="_blank" rel="noopener">https://github.com/pytorch/glow</a></p><p>GJson：<a href="https://github.com/tidwall/gjson" target="_blank" rel="noopener">https://github.com/tidwall/gjson</a></p><p>Authboss：<a href="https://github.com/volatiletech/authboss" target="_blank" rel="noopener">https://github.com/volatiletech/authboss</a></p><p>Go-Underscore：<a href="https://github.com/ahl5esoft/golang-underscore" target="_blank" rel="noopener">https://github.com/ahl5esoft/golang-underscore</a></p><p><strong>12、测试</strong></p><p>1）单元，行为，集成测试</p><p>GoMock：<a href="https://github.com/golang/mock" target="_blank" rel="noopener">https://github.com/golang/mock</a></p><p>Testify：<a href="https://github.com/stretchr/testify" target="_blank" rel="noopener">https://github.com/stretchr/testify</a></p><p>GinkGo：<a href="https://github.com/onsi/ginkgo" target="_blank" rel="noopener">https://github.com/onsi/ginkgo</a></p><p>GoMega：<a href="https://github.com/onsi/gomega" target="_blank" rel="noopener">https://github.com/onsi/gomega</a></p><p>GoCheck：<a href="https://github.com/go-check/check" target="_blank" rel="noopener">https://github.com/go-check/check</a></p><p>GoDog：<a href="https://github.com/DATA-DOG/godog" target="_blank" rel="noopener">https://github.com/DATA-DOG/godog</a></p><p>GoConvey：<a href="https://github.com/smartystreets/goconvey" target="_blank" rel="noopener">https://github.com/smartystreets/goconvey</a></p><p>2）端对端测试</p><p>Selenium：<a href="https://github.com/tebeka/selenium" target="_blank" rel="noopener">https://github.com/tebeka/selenium</a></p><p>Endly：<a href="https://github.com/viant/endly" target="_blank" rel="noopener">https://github.com/viant/endly</a></p><p><strong>13、任务调度</strong></p><p>Gron：<a href="https://github.com/roylee0704/gron" target="_blank" rel="noopener">https://github.com/roylee0704/gron</a></p><p>JobRunner：<a href="https://github.com/bamzi/jobrunner" target="_blank" rel="noopener">https://github.com/bamzi/jobrunner</a></p><p><strong>14、微服务</strong></p><p>1）消息代理</p><p>RabbitMQ：<a href="https://www.rabbitmq.com/tutorials/tutorial-one-javascript.htmlhttps://www.npmjs.com/package/kafka-node" target="_blank" rel="noopener">https://www.rabbitmq.com/tutorials/tutorial-one-javascript.htmlhttps://www.npmjs.com/package/kafka-node</a></p><p>ApacheKafka：<a href="https://www.npmjs.com/package/kafka-node" target="_blank" rel="noopener">https://www.npmjs.com/package/kafka-node</a></p><p>ActiveMQ：<a href="https://github.com/apache/activemq" target="_blank" rel="noopener">https://github.com/apache/activemq</a></p><p>AzureServiceBus：<a href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview</a></p><p>2）消息总线</p><p>Message-Bus：<a href="https://github.com/vardius/message-bus" target="_blank" rel="noopener">https://github.com/vardius/message-bus</a></p><p>3）框架</p><p>GoKit：<a href="https://github.com/go-kit/kit" target="_blank" rel="noopener">https://github.com/go-kit/kit</a></p><p>Micro：<a href="https://github.com/micro/go-micro" target="_blank" rel="noopener">https://github.com/micro/go-micro</a></p><p>4）RPC</p><p>ProtocolBuffers：<a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noopener">https://github.com/protocolbuffers/protobuf</a></p><p>gRPC-Go：<a href="https://github.com/grpc/grpc-go" target="_blank" rel="noopener">https://github.com/grpc/grpc-go</a></p><p>gRPC-Gateway：<a href="https://github.com/grpc-ecosystem/grpc-gateway" target="_blank" rel="noopener">https://github.com/grpc-ecosystem/grpc-gateway</a></p><p><strong>5、Go模式：</strong><a href="https://github.com/tmrts/go-patterns" target="_blank" rel="noopener">https://github.com/tmrts/go-patterns</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Go开发者路线图&quot;&gt;&lt;a href=&quot;#Go开发者路线图&quot; class=&quot;headerlink&quot; title=&quot;Go开发者路线图&quot;&gt;&lt;/a&gt;Go开发者路线图&lt;/h1&gt;&lt;p&gt;Go是Google开发的一种静态、强类型、编译型、并发型，并具有垃圾回收功能的类C编程语言。
      
    
    </summary>
    
    
      <category term="golang" scheme="http://wangyangyangisme.github.io/categories/golang/"/>
    
    
  </entry>
  
  <entry>
    <title>最常用的150个命令汇总</title>
    <link href="http://wangyangyangisme.github.io/2020/04/10/linux-%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84150%E4%B8%AA%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/"/>
    <id>http://wangyangyangisme.github.io/2020/04/10/linux-最常用的150个命令汇总/</id>
    <published>2020-04-10T10:38:36.000Z</published>
    <updated>2020-04-10T10:41:42.808Z</updated>
    
    <content type="html"><![CDATA[<div class="note success">            <p>一、线上查询及帮助命令(2个)</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd1.png"></p><div class="note success">            <p>二、文件和目录操作命令(18个)</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd2.jpg"></p><div class="note success">            <p>三、查看文件及内容处理命令（21个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd3.jpg"></p><div class="note success">            <p>四、文件压缩及解压缩命令（4个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd4.png"></p><div class="note success">            <p>五、信息显示命令（11个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd5.jpg"></p><div class="note success">            <p>六、搜索文件命令（4个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd6.png"></p><div class="note success">            <p>七、用户管理命令（10个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd7.jpg"></p><div class="note success">            <p>八、基础网络操作命令（11个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd8.jpg"></p><div class="note success">            <p>九、深入网络操作命令（9个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd9.jpg"></p><div class="note success">            <p>十、有关磁盘与文件系统的命令（16个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd10.jpg"></p><div class="note success">            <p>十一、系统权限及用户授权相关命令（4个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd11.png"></p><div class="note success">            <p>十二、查看系统用户登陆信息的命令（7个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd12.png"></p><div class="note success">            <p>十三、内置命令及其它（19个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd13.jpg"></p><div class="note success">            <p>十四、系统管理与性能监视命令(9个)</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd14.jpg"></p><div class="note success">            <p>十五、关机/重启/注销和查看系统信息的命令（6个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd15.png"></p><div class="note success">            <p>十六、进程管理相关命令（15个）</p>          </div><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/linux/linuxcmd16.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note success&quot;&gt;
            &lt;p&gt;一、线上查询及帮助命令(2个)&lt;/p&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/&quot; alt=&quot;img&quot; class=&quot;lazyload&quot; data-src=&quot;https:/
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wangyangyangisme.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://wangyangyangisme.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装mysql</title>
    <link href="http://wangyangyangisme.github.io/2020/03/30/mysql-ubuntu%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://wangyangyangisme.github.io/2020/03/30/mysql-ubuntu安装mysql/</id>
    <published>2020-03-30T09:38:36.000Z</published>
    <updated>2020-04-14T05:36:23.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu安装mysql"><a href="#ubuntu安装mysql" class="headerlink" title="ubuntu安装mysql"></a>ubuntu安装mysql</h1><blockquote><p>ubuntu16.04</p></blockquote><p>apt-get资源库中mysql的最新版本为：mysql-5.7.29</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="一、卸载-清理残余"><a href="#一、卸载-清理残余" class="headerlink" title="一、卸载/清理残余"></a>一、卸载/清理残余</h3><p>1.查看mysql有没有已安装的依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --list|grep mysql</span><br></pre></td></tr></table></figure><p>先卸载mysql-common</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove mysql-common</span><br></pre></td></tr></table></figure><p>再执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove --purge mysql-server-5.0</span><br></pre></td></tr></table></figure><p>然后继续用 <code>dpkg --list|grep mysql</code> 查看，还剩什么就卸载什么；</p><h3 id="二、安装mysql"><a href="#二、安装mysql" class="headerlink" title="二、安装mysql"></a>二、安装mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更新apt-get，更新后将会使用最新资源库</span></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装MySQL:</span></span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看MySQL版本: </span></span><br><span class="line">mysql -V</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入MySQL: </span></span><br><span class="line">mysql -u root -p</span><br><span class="line"><span class="comment">#启动: </span></span><br><span class="line">sudo service mysql start</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启:</span></span><br><span class="line">sudo  service mysql restart </span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭: </span></span><br><span class="line">sudo service mysql stop</span><br></pre></td></tr></table></figure><p><strong>Ubuntu16 - Ubuntu18安装mysql5.7未提示输入密码，mysql默认密码为空；直接登录即可；</strong></p><p>如果使用<code>mysql -uroot -p</code>命令连接mysql时，报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1045 (28000): Access denied <span class="keyword">for</span> user ‘root’@<span class="string">'localhost’</span></span><br></pre></td></tr></table></figure><p>此时修改root的默认密码即可：<br>1.进入到/etc/mysql/ 目录下，查看debian.cnf文件</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/mysql/install_mysql1.png"></p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/mysql/install_mysql2.png"></p><p>2.找到用户名，密码 ，使用此账号登录mysql<br>用户名：debian-sys-maint<br>密码：sL1y1gRBbzlX6iyb<br>登录：<strong>mysql -udebian-sys-maint -psL1y1gRBbzlX6iyb</strong></p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/mysql/install_mysql3.png"></p><p>3.修改root用户的的密码<br>这里是关键点，由于mysql5.7没有password字段，密码存储在authentication_string字段中，password()方法还能用在mysql中执行下面语句修改密码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> authentication_string=<span class="keyword">PASSWORD</span>(<span class="string">"123456"</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">plugin</span>=<span class="string">"mysql_native_password"</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><p>4.修改完密码，需要重启mysql；再次登录就可以了；</p><p><em>如果这篇文章确实帮到了你，在这里，也请不要吝啬你的点赞 ~</em></p><h3 id="三、修改数据库编码格式"><a href="#三、修改数据库编码格式" class="headerlink" title="三、修改数据库编码格式"></a>三、修改数据库编码格式</h3><p>进入mysql命令行输入：<code>show variables like &#39;character%&#39;;</code></p><p>我们需要把database和server调成utf8即可；</p><p>首先我们找到mysqld.cnf文件：<code>find / -name mysqld.cnf</code></p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/mysql/install_mysql4.png"></p><p>修改mysqld.cnf内容：在相应标签下添加即可（如下图），<strong>没有[mysql]标签就加上</strong>；</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/mysql/install_mysql5.png"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">character_set_server</span>=utf8</span><br><span class="line"><span class="attr">collation_server</span>=utf8_general_ci</span><br></pre></td></tr></table></figure><p>保存后重启mysql：<code>service mysql restart;</code>重启后再次登陆mysql命令行</p><p>输入<code>show variables like &#39;character%&#39;;</code></p><p>出现下图说明数据库配置完成；</p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/mysql/install_mysql6.png"></p><h2 id="外网访问"><a href="#外网访问" class="headerlink" title="外网访问"></a>外网访问</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">mysql -u root -p</span><br><span class="line">use mysql;</span><br><span class="line">update user set host = '%' where  user = 'root';</span><br><span class="line">grant all privileges on *.*  to 'root'@'%';</span><br><span class="line">flush privileges;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><p>修改mysqld.cnf中的IP绑定</p><p>sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf<br>将bind-address = 127.0.0.1 修改为 bind-address = 0.0.0.0</p><p>重启服务</p><p>sudo service mysql restart</p><p>服务命令<br>sudo service mysql restart 重启<br>sudo service mysql stop 停止服务<br>sudo service mysql start 启动服务</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ubuntu安装mysql&quot;&gt;&lt;a href=&quot;#ubuntu安装mysql&quot; class=&quot;headerlink&quot; title=&quot;ubuntu安装mysql&quot;&gt;&lt;/a&gt;ubuntu安装mysql&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;ubuntu16.04&lt;/
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://wangyangyangisme.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://wangyangyangisme.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>goland远程调试</title>
    <link href="http://wangyangyangisme.github.io/2020/03/30/golang-goland%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/"/>
    <id>http://wangyangyangisme.github.io/2020/03/30/golang-goland远程调试/</id>
    <published>2020-03-30T05:38:36.000Z</published>
    <updated>2020-03-30T05:16:06.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="goland远程调试"><a href="#goland远程调试" class="headerlink" title="goland远程调试"></a>goland远程调试</h1><blockquote><p>jetbrains golang: 2019.3</p><p>golang: 1.13</p></blockquote><h2 id="安装dlv"><a href="#安装dlv" class="headerlink" title="安装dlv"></a>安装dlv</h2><p><a href="https://github.com/go-delve/delve" target="_blank" rel="noopener">https://github.com/go-delve/delve</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir $GOPATH/src</span><br><span class="line">mkdir $GOPATH/src/golang.org</span><br><span class="line">mkdir $GOPATH/src/golang.org/x</span><br><span class="line">cd $GOPATH/src/golang.org/x</span><br><span class="line">git clone https://github.com/golang/net.git</span><br><span class="line">git clone https://github.com/golang/sys.git</span><br><span class="line">git clone https://github.com/golang/arch.git</span><br><span class="line">git clone https://github.com/golang/sync.git</span><br><span class="line">git clone https://github.com/golang/tools.git</span><br><span class="line">cd $GOPATH/src</span><br><span class="line">go get -u github.com/go-delve/delve/cmd/dlv</span><br><span class="line"></span><br><span class="line">dlv version</span><br></pre></td></tr></table></figure><h2 id="golang配置"><a href="#golang配置" class="headerlink" title="golang配置"></a>golang配置</h2><p>在本地创建一个项目</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote1.png"></p><p>添加远程服务器信息</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote2.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote3.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote4.png"></p><p>添加远程主机的ip，指定登录的用户名和密码</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote5.png"></p><p>这里映射远程主机的目录，目录名可以和本地的不一样<img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote6.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote7.png"></p><p>将本地代码上传到远程主机</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote8.png"></p><p>配置远程调试</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote9.png"></p><p>设置远程主机的ip</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote10.png"></p><h2 id="运行调试"><a href="#运行调试" class="headerlink" title="运行调试"></a>运行调试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /root/remote</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">dlv debug --headless --listen=:5002 --api-version=2 --accept-multiclient</span></span><br><span class="line"><span class="meta">#</span><span class="bash">加上--accept-multiclient选项后无法退出，这里就去掉这个选项</span></span><br><span class="line"><span class="meta">#</span><span class="bash">这个命令，同时完成了编译和运行，如果运行程序需要声明参数，直接加在后面就好</span></span><br><span class="line">dlv debug --headless --listen=:5002 --api-version=2</span><br></pre></td></tr></table></figure><p>在远程主机运行完上面的指令后，设置好断点，在golang ide中点击调试按钮即可</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/golang/golang-remote11.png"></p><p>在本地可以查看变量，打印的日志本地是看不到的，在远程主机上才能看到</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;goland远程调试&quot;&gt;&lt;a href=&quot;#goland远程调试&quot; class=&quot;headerlink&quot; title=&quot;goland远程调试&quot;&gt;&lt;/a&gt;goland远程调试&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;jetbrains golang: 2019.3&lt;
      
    
    </summary>
    
    
      <category term="goland" scheme="http://wangyangyangisme.github.io/categories/goland/"/>
    
    
      <category term="debug" scheme="http://wangyangyangisme.github.io/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>golang实现无限级菜单</title>
    <link href="http://wangyangyangisme.github.io/2020/03/18/golang-golang%E5%AE%9E%E7%8E%B0%E6%97%A0%E9%99%90%E7%BA%A7%E8%8F%9C%E5%8D%95/"/>
    <id>http://wangyangyangisme.github.io/2020/03/18/golang-golang实现无限级菜单/</id>
    <published>2020-03-18T06:38:36.000Z</published>
    <updated>2020-03-18T06:16:45.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="golang实现无限级菜单"><a href="#golang实现无限级菜单" class="headerlink" title="golang实现无限级菜单"></a>golang实现无限级菜单</h1><h2 id="查数据库"><a href="#查数据库" class="headerlink" title="查数据库"></a>查数据库</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Menu <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id <span class="keyword">int</span><span class="string">`json:"id"`</span></span><br><span class="line">    Pid <span class="keyword">int</span><span class="string">`json:"pid"`</span></span><br><span class="line">    Name <span class="keyword">string</span> <span class="string">`json:"name"`</span></span><br><span class="line">    Sort <span class="keyword">int</span> <span class="string">`json:"sort"`</span></span><br><span class="line">    Route <span class="keyword">string</span><span class="string">`json:"route"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TreeList <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id <span class="keyword">int</span><span class="string">`json:"id"`</span></span><br><span class="line">    Name <span class="keyword">string</span><span class="string">`json:"name"`</span></span><br><span class="line">    Pid <span class="keyword">int</span><span class="string">`json:"pid"`</span></span><br><span class="line">    Sort <span class="keyword">int</span> <span class="string">`json:"sort"`</span></span><br><span class="line">    Route <span class="keyword">string</span><span class="string">`json:"route"`</span></span><br><span class="line">    Children []*TreeList<span class="string">`json:"children"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 注册模型</span></span><br><span class="line">    orm.RegisterModel(<span class="built_in">new</span>(Menu))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Menu)</span><span class="title">TableName</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"auth_menu"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">菜单列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Menu)</span><span class="title">MenuList</span><span class="params">()</span> []*<span class="title">TreeList</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> m.getMenu(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">递归获取树形菜单</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Menu)</span><span class="title">getMenu</span><span class="params">(pid <span class="keyword">int</span>)</span> []*<span class="title">TreeList</span></span> &#123;</span><br><span class="line">    o := orm.NewOrm()</span><br><span class="line">    <span class="keyword">var</span> menu []Menu</span><br><span class="line">    _,_ = o.QueryTable(<span class="string">"auth_menu"</span>).Filter(<span class="string">"pid"</span>, pid).OrderBy(<span class="string">"sort"</span>).All(&amp;menu)</span><br><span class="line">    treeList := []*TreeList&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> menu&#123;</span><br><span class="line">        child := v.getMenu(v.Id)</span><br><span class="line">        node := &amp;TreeList&#123;</span><br><span class="line">            Id:v.Id,</span><br><span class="line">            Name:v.Name,</span><br><span class="line">            Sort:v.Sort,</span><br><span class="line">            Route:v.Route,</span><br><span class="line">            Pid:v.Pid,</span><br><span class="line">        &#125;</span><br><span class="line">        node.Children = child</span><br><span class="line">        treeList = <span class="built_in">append</span>(treeList, node)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> treeList</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只查一次"><a href="#只查一次" class="headerlink" title="只查一次"></a>只查一次</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tree</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"sort"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Tree 统一定义菜单树的数据结构，也可以自定义添加其他字段</span></span><br><span class="line"><span class="keyword">type</span> Tree <span class="keyword">struct</span> &#123;</span><br><span class="line">Title           <span class="keyword">string</span>      <span class="string">`json:"title"`</span>            <span class="comment">//节点名字</span></span><br><span class="line">Data            <span class="keyword">interface</span>&#123;&#125; <span class="string">`json:"data"`</span>             <span class="comment">//自定义对象</span></span><br><span class="line">Leaf            <span class="keyword">bool</span>        <span class="string">`json:"leaf"`</span>             <span class="comment">//叶子节点</span></span><br><span class="line">Selected        <span class="keyword">bool</span>        <span class="string">`json:"checked"`</span>          <span class="comment">//选中</span></span><br><span class="line">PartialSelected <span class="keyword">bool</span>        <span class="string">`json:"partial_selected"`</span> <span class="comment">//部分选中</span></span><br><span class="line">Children        []Tree      <span class="string">`json:"children"`</span>         <span class="comment">//子节点</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ConvertToINodeArray 其他的结构体想要生成菜单树，直接实现这个接口</span></span><br><span class="line"><span class="keyword">type</span> INode <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// GetTitle 获取显示名字</span></span><br><span class="line">GetTitle() <span class="keyword">string</span></span><br><span class="line"><span class="comment">// GetId获取id</span></span><br><span class="line">GetId() <span class="keyword">int</span></span><br><span class="line"><span class="comment">// GetFatherId 获取父id</span></span><br><span class="line">GetFatherId() <span class="keyword">int</span></span><br><span class="line"><span class="comment">// GetData 获取附加数据</span></span><br><span class="line">GetData() <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"><span class="comment">// IsRoot 判断当前节点是否是顶层根节点</span></span><br><span class="line">IsRoot() <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> INodes []INode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(nodes INodes)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(nodes)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(nodes INodes)</span> <span class="title">Swap</span><span class="params">(i, j <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">nodes[i], nodes[j] = nodes[j], nodes[i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(nodes INodes)</span> <span class="title">Less</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> nodes[i].GetId() &lt; nodes[j].GetId()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GenerateTree 自定义的结构体实现 INode 接口后调用此方法生成树结构</span></span><br><span class="line"><span class="comment">// nodes 需要生成树的节点</span></span><br><span class="line"><span class="comment">// selectedNode 生成树后选中的节点</span></span><br><span class="line"><span class="comment">// menuTrees 生成成功后的树结构对象</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateTree</span><span class="params">(nodes, selectedNodes []INode)</span> <span class="params">(trees []Tree)</span></span> &#123;</span><br><span class="line">trees = []Tree&#123;&#125;</span><br><span class="line"><span class="comment">// 定义顶层根和子节点</span></span><br><span class="line"><span class="keyword">var</span> roots, childs []INode</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> nodes &#123;</span><br><span class="line"><span class="keyword">if</span> v.IsRoot() &#123;</span><br><span class="line"><span class="comment">// 判断顶层根节点</span></span><br><span class="line">roots = <span class="built_in">append</span>(roots, v)</span><br><span class="line">&#125;</span><br><span class="line">childs = <span class="built_in">append</span>(childs, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> roots &#123;</span><br><span class="line">childTree := &amp;Tree&#123;</span><br><span class="line">Title: v.GetTitle(),</span><br><span class="line">Data:  v.GetData(),</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 递归之前，根据父节点确认 childTree 的选中状态</span></span><br><span class="line">childTree.Selected = nodeSelected(v, selectedNodes, childTree.Children)</span><br><span class="line"><span class="comment">// 递归</span></span><br><span class="line">recursiveTree(childTree, childs, selectedNodes)</span><br><span class="line"><span class="comment">// 递归之后，根据子节点确认 childTree 的选中状态</span></span><br><span class="line"><span class="keyword">if</span> !childTree.Selected &#123;</span><br><span class="line">childTree.Selected = nodeSelected(v, selectedNodes, childTree.Children)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 递归之后，根据子节点确认 childTree 的半选中状态</span></span><br><span class="line">childTree.PartialSelected = nodePartialSelected(childTree.Children)</span><br><span class="line"><span class="comment">// 递归之后，根据子节确认是否是叶子节点</span></span><br><span class="line">childTree.Leaf = <span class="built_in">len</span>(childTree.Children) == <span class="number">0</span></span><br><span class="line">trees = <span class="built_in">append</span>(trees, *childTree)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// recursiveTree 递归生成树结构</span></span><br><span class="line"><span class="comment">// tree 递归的树对象</span></span><br><span class="line"><span class="comment">// nodes 递归的节点</span></span><br><span class="line"><span class="comment">// selectedNodes 选中的节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">recursiveTree</span><span class="params">(tree *Tree, nodes, selectedNodes []INode)</span></span> &#123;</span><br><span class="line">data := tree.Data.(INode)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> nodes &#123;</span><br><span class="line"><span class="keyword">if</span> v.IsRoot() &#123;</span><br><span class="line"><span class="comment">// 如果当前节点是顶层根节点就跳过</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> data.GetId() == v.GetFatherId() &#123;</span><br><span class="line">childTree := &amp;Tree&#123;</span><br><span class="line">Title: v.GetTitle(),</span><br><span class="line">Data:  v.GetData(),</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 递归之前，根据子节点和父节点确认 childTree 的选中状态</span></span><br><span class="line">childTree.Selected = nodeSelected(v, selectedNodes, childTree.Children) || tree.Selected</span><br><span class="line">recursiveTree(childTree, nodes, selectedNodes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !childTree.Selected &#123;</span><br><span class="line"><span class="comment">// 递归之后，根据子节点确认 childTree 的选中状态</span></span><br><span class="line">childTree.Selected = nodeSelected(v, selectedNodes, childTree.Children)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 递归之后，根据子节点确认 childTree 的半选中状态</span></span><br><span class="line">childTree.PartialSelected = nodePartialSelected(childTree.Children)</span><br><span class="line"><span class="comment">// 递归之后，根据子节确认是否是叶子节点</span></span><br><span class="line">childTree.Leaf = <span class="built_in">len</span>(childTree.Children) == <span class="number">0</span></span><br><span class="line">tree.Children = <span class="built_in">append</span>(tree.Children, *childTree)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// FindRelationNode 在 allTree 中查询 nodes 中节点的所有父节点</span></span><br><span class="line"><span class="comment">// nodes 要查询父节点的子节点数组</span></span><br><span class="line"><span class="comment">// allTree 所有节点数组</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FindRelationNode</span><span class="params">(nodes, allNodes []INode)</span> <span class="params">(respNodes []INode)</span></span> &#123;</span><br><span class="line">nodeMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]INode)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> nodes &#123;</span><br><span class="line">recursiveFindRelationNode(nodeMap, allNodes, v, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> nodeMap &#123;</span><br><span class="line">respNodes = <span class="built_in">append</span>(respNodes, v)</span><br><span class="line">&#125;</span><br><span class="line">sort.Sort(INodes(respNodes))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// recursiveFindRelationNode 递归查询关联父子节点</span></span><br><span class="line"><span class="comment">// nodeMap 查询结果搜集到map中</span></span><br><span class="line"><span class="comment">// allNodes 所有节点</span></span><br><span class="line"><span class="comment">// node 递归节点</span></span><br><span class="line"><span class="comment">// t 递归查找类型：0 查找父、子节点；1 只查找父节点；2 只查找子节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">recursiveFindRelationNode</span><span class="params">(nodeMap <span class="keyword">map</span>[<span class="keyword">int</span>]INode, allNodes []INode, node INode, t <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">nodeMap[node.GetId()] = node</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> allNodes &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := nodeMap[v.GetId()]; ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查找父节点</span></span><br><span class="line"><span class="keyword">if</span> t == <span class="number">0</span> || t == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">if</span> node.GetFatherId() == v.GetId() &#123;</span><br><span class="line">nodeMap[v.GetId()] = v</span><br><span class="line"><span class="keyword">if</span> v.IsRoot() &#123;</span><br><span class="line"><span class="comment">// 是顶层根节点时，不再进行递归</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">recursiveFindRelationNode(nodeMap, allNodes, v, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查找子节点</span></span><br><span class="line"><span class="keyword">if</span> t == <span class="number">0</span> || t == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">if</span> node.GetId() == v.GetFatherId() &#123;</span><br><span class="line">nodeMap[v.GetId()] = v</span><br><span class="line">recursiveFindRelationNode(nodeMap, allNodes, v, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nodeSelected 判断节点的选中状态</span></span><br><span class="line"><span class="comment">// node 进行判断节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nodeSelected</span><span class="params">(node INode, selectedNodes []INode, children []Tree)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> selectedNodes &#123;</span><br><span class="line"><span class="keyword">if</span> node.GetId() == v.GetId() &#123;</span><br><span class="line"><span class="comment">// 1. 如果选择节点数组中存在当前节点</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(children) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">// 2. 不满足前置条件1，且没有子节点</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">selectedNum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> children &#123;</span><br><span class="line"><span class="keyword">if</span> v.Selected &#123;</span><br><span class="line">selectedNum++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> selectedNum == <span class="built_in">len</span>(children) &#123;</span><br><span class="line"><span class="comment">// 不满足前置条件1，2 ，且子节点全部是选中状态</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nodePartialSelected 判断节点的半选中状态</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nodePartialSelected</span><span class="params">(trees []Tree)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">selectedNum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> trees &#123;</span><br><span class="line"><span class="keyword">if</span> v.Selected &#123;</span><br><span class="line">selectedNum++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> selectedNum == <span class="built_in">len</span>(trees) || selectedNum == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">// 子节点全选中，或一个也没有选中</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>test</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tree</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/tidwall/pretty"</span></span><br><span class="line"><span class="string">"testing"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义我们自己的菜单对象</span></span><br><span class="line"><span class="keyword">type</span> SystemMenu <span class="keyword">struct</span> &#123;</span><br><span class="line">Id       <span class="keyword">int</span>    <span class="string">`json:"id"`</span>        <span class="comment">//id</span></span><br><span class="line">FatherId <span class="keyword">int</span>    <span class="string">`json:"father_id"`</span> <span class="comment">//上级菜单id</span></span><br><span class="line">Name     <span class="keyword">string</span> <span class="string">`json:"name"`</span>      <span class="comment">//菜单名</span></span><br><span class="line">Route    <span class="keyword">string</span> <span class="string">`json:"route"`</span>     <span class="comment">//页面路径</span></span><br><span class="line">Icon     <span class="keyword">string</span> <span class="string">`json:"icon"`</span>      <span class="comment">//图标路径</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// region 实现ITree 所有接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s SystemMenu)</span> <span class="title">GetTitle</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> s.Name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s SystemMenu)</span> <span class="title">GetId</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> s.Id</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s SystemMenu)</span> <span class="title">GetFatherId</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> s.FatherId</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s SystemMenu)</span> <span class="title">GetData</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s SystemMenu)</span> <span class="title">IsRoot</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="comment">// 这里通过FatherId等于0 或者 FatherId等于自身Id表示顶层根节点</span></span><br><span class="line"><span class="keyword">return</span> s.FatherId == <span class="number">0</span> || s.FatherId == s.Id</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// endregion</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SystemMenus []SystemMenu</span><br><span class="line"></span><br><span class="line"><span class="comment">// ConvertToINodeArray 将当前数组转换成父类 INode 接口 数组</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s SystemMenus)</span> <span class="title">ConvertToINodeArray</span><span class="params">()</span> <span class="params">(nodes []INode)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">nodes = <span class="built_in">append</span>(nodes, v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGenerateTree</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"><span class="comment">// 模拟获取数据库中所有菜单，在其它所有的查询中，也是首先将数据库中所有数据查询出来放到数组中，</span></span><br><span class="line"><span class="comment">// 后面的遍历递归，都在这个 allMenu中进行，而不是在数据库中进行递归查询，减小数据库压力。</span></span><br><span class="line">allMenu := []SystemMenu&#123;</span><br><span class="line">&#123;Id: <span class="number">1</span>, FatherId: <span class="number">0</span>, Name: <span class="string">"系统总览"</span>, Route: <span class="string">"/systemOverview"</span>, Icon: <span class="string">"icon-system"</span>&#125;,</span><br><span class="line">&#123;Id: <span class="number">2</span>, FatherId: <span class="number">0</span>, Name: <span class="string">"系统配置"</span>, Route: <span class="string">"/systemConfig"</span>, Icon: <span class="string">"icon-config"</span>&#125;,</span><br><span class="line"></span><br><span class="line">&#123;Id: <span class="number">3</span>, FatherId: <span class="number">1</span>, Name: <span class="string">"资产"</span>, Route: <span class="string">"/asset"</span>, Icon: <span class="string">"icon-asset"</span>&#125;,</span><br><span class="line">&#123;Id: <span class="number">4</span>, FatherId: <span class="number">1</span>, Name: <span class="string">"动环"</span>, Route: <span class="string">"/pe"</span>, Icon: <span class="string">"icon-pe"</span>&#125;,</span><br><span class="line"></span><br><span class="line">&#123;Id: <span class="number">5</span>, FatherId: <span class="number">2</span>, Name: <span class="string">"菜单配置"</span>, Route: <span class="string">"/menuConfig"</span>, Icon: <span class="string">"icon-menu-config"</span>&#125;,</span><br><span class="line">&#123;Id: <span class="number">6</span>, FatherId: <span class="number">3</span>, Name: <span class="string">"设备"</span>, Route: <span class="string">"/device"</span>, Icon: <span class="string">"icon-device"</span>&#125;,</span><br><span class="line">&#123;Id: <span class="number">7</span>, FatherId: <span class="number">3</span>, Name: <span class="string">"机柜"</span>, Route: <span class="string">"/device"</span>, Icon: <span class="string">"icon-device"</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成完全树</span></span><br><span class="line">resp := GenerateTree(SystemMenus.ConvertToINodeArray(allMenu), <span class="literal">nil</span>)</span><br><span class="line">bytes, _ := json.MarshalIndent(resp, <span class="string">""</span>, <span class="string">"\t"</span>)</span><br><span class="line"><span class="comment">//fmt.Println(string(pretty.Color(pretty.PrettyOptions(bytes, pretty.DefaultOptions), nil)))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟选中 '资产' 菜单</span></span><br><span class="line">selectedNode := []SystemMenu&#123;allMenu[<span class="number">2</span>]&#125;</span><br><span class="line">resp = GenerateTree(SystemMenus.ConvertToINodeArray(allMenu), SystemMenus.ConvertToINodeArray(selectedNode))</span><br><span class="line">bytes, _ = json.Marshal(resp)</span><br><span class="line"><span class="comment">//fmt.Println(string(pretty.Color(pretty.PrettyOptions(bytes, pretty.DefaultOptions), nil)))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟从数据库中查询出 '设备'</span></span><br><span class="line">device := []SystemMenu&#123;allMenu[<span class="number">5</span>]&#125;</span><br><span class="line"><span class="comment">// 查询 设备 的所有父节点</span></span><br><span class="line">respNodes := FindRelationNode(SystemMenus.ConvertToINodeArray(device), SystemMenus.ConvertToINodeArray(allMenu))</span><br><span class="line">resp = GenerateTree(respNodes, <span class="literal">nil</span>)</span><br><span class="line">bytes, _ = json.Marshal(resp)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(pretty.Color(pretty.PrettyOptions(bytes, pretty.DefaultOptions), <span class="literal">nil</span>)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/azhengyongqin/golang-tree-menu" target="_blank" rel="noopener">https://github.com/azhengyongqin/golang-tree-menu</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;golang实现无限级菜单&quot;&gt;&lt;a href=&quot;#golang实现无限级菜单&quot; class=&quot;headerlink&quot; title=&quot;golang实现无限级菜单&quot;&gt;&lt;/a&gt;golang实现无限级菜单&lt;/h1&gt;&lt;h2 id=&quot;查数据库&quot;&gt;&lt;a href=&quot;#查数据库&quot;
      
    
    </summary>
    
    
      <category term="golang" scheme="http://wangyangyangisme.github.io/categories/golang/"/>
    
    
  </entry>
  
  <entry>
    <title>MySql时间计算</title>
    <link href="http://wangyangyangisme.github.io/2020/03/17/mysql-mysql%E6%97%B6%E9%97%B4%E8%AE%A1%E7%AE%97/"/>
    <id>http://wangyangyangisme.github.io/2020/03/17/mysql-mysql时间计算/</id>
    <published>2020-03-17T10:10:36.000Z</published>
    <updated>2020-03-18T02:14:40.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySql时间计算"><a href="#MySql时间计算" class="headerlink" title="MySql时间计算"></a>MySql时间计算</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">TIME_TO_SEC(TIMEDIFF('2018-09-30 19:38:45', '2018-08-23 10:13:01')) AS DIFF_SECOND1, -- 秒</span><br><span class="line">UNIX_TIMESTAMP('2018-09-30 19:38:45')-UNIX_TIMESTAMP('2018-08-23 10:13:01') AS DIFF_SECOND2, -- 秒</span><br><span class="line">TIMESTAMPDIFF(SECOND,'2018-08-23 10:13:01','2018-09-30 19:38:45') AS DIFF_SECOND3, -- 秒</span><br><span class="line">TIMESTAMPDIFF(MINUTE,'2018-08-23 10:13:01','2018-09-30 19:38:45') AS DIFF_MINUTE, -- 分</span><br><span class="line">TIMESTAMPDIFF(HOUR,'2018-08-23 10:13:01','2018-09-30 19:38:45') AS DIFF_HOUR, -- 小时</span><br><span class="line">TIMESTAMPDIFF(DAY ,'2018-08-23 10:13:01','2018-09-30 19:38:45') AS DIFF_DATE1, -- 天</span><br><span class="line">DATEDIFF('2018-09-30 19:38:45','2018-08-23 10:13:01') AS DIFF_DATE2, -- 天</span><br><span class="line">TIMESTAMPDIFF(MONTH,'2018-08-23 10:13:01','2018-09-25 19:38:45') AS DIFF_MONTH, -- 月</span><br><span class="line">TIMESTAMPDIFF(YEAR,'2018-08-23 10:13:01','2020-07-25 19:38:45') AS DIFF_YEAR -- 年</span><br><span class="line">FROM DUAL;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MySql时间计算&quot;&gt;&lt;a href=&quot;#MySql时间计算&quot; class=&quot;headerlink&quot; title=&quot;MySql时间计算&quot;&gt;&lt;/a&gt;MySql时间计算&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://wangyangyangisme.github.io/categories/mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>开源镜像源</title>
    <link href="http://wangyangyangisme.github.io/2020/03/17/ubuntu-%E5%BC%80%E6%BA%90%E9%95%9C%E5%83%8F%E6%BA%90/"/>
    <id>http://wangyangyangisme.github.io/2020/03/17/ubuntu-开源镜像源/</id>
    <published>2020-03-17T09:38:36.000Z</published>
    <updated>2020-03-18T02:14:16.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开源软件镜像地址"><a href="#开源软件镜像地址" class="headerlink" title="开源软件镜像地址"></a>开源软件镜像地址</h1><p>如果要是下载软件的话，直接执行 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weget wget https://mirrors.aliyun.com/apache/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz</span><br></pre></td></tr></table></figure><ol><li><p><a href="http://mirror.bit.edu.cn/web/" target="_blank" rel="noopener">http://mirror.bit.edu.cn/web/</a>                #北京理工大学开源软件镜像服务 (比较全一些软件)</p></li><li><p><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/</a> #清华大学开源软件镜像站(比较全一些软件)</p></li><li><p><a href="http://mirrors.aliyun.com/" target="_blank" rel="noopener">http://mirrors.aliyun.com/</a>                     #阿里云 （阿里巴巴比较全的一些软件，包括服务呀，使用文档呀，也是软件开发者们首先下载目标）</p></li><li><p><a href="http://mirrors.zju.edu.cn/" target="_blank" rel="noopener">http://mirrors.zju.edu.cn/</a>            #浙江大学（学校级别的开源网，相对于软件数量不是很多）</p></li><li><p><a href="http://mirrors.sohu.com/" target="_blank" rel="noopener">http://mirrors.sohu.com/</a>             #搜狐</p></li><li><p><a href="http://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">http://mirrors.tuna.tsinghua.edu.cn/</a>        #清华大学</p></li><li><p><a href="http://mirrors.cn99.com" target="_blank" rel="noopener">http://mirrors.cn99.com</a>        #网易（企业级别的开源网站，维护时间呀，维护软件更新速度都是要比学校级别高很多的）</p></li><li><p><a href="http://mirrors.163.com/" target="_blank" rel="noopener">http://mirrors.163.com/</a>        #网易</p></li><li><p><a href="http://mirrors.nju.edu.cn/" target="_blank" rel="noopener">http://mirrors.nju.edu.cn/</a>    #南京大学</p></li><li><p><a href="http://mirror.lzu.edu.cn/" target="_blank" rel="noopener">http://mirror.lzu.edu.cn/</a>       #兰州大学</p></li><li><p><a href="http://mirrors.shuosc.org/" target="_blank" rel="noopener">http://mirrors.shuosc.org/</a>    #上海大学</p></li><li><p><a href="https://mirror.azure.cn/" target="_blank" rel="noopener">https://mirror.azure.cn/</a>        #开源镜像站点</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开源软件镜像地址&quot;&gt;&lt;a href=&quot;#开源软件镜像地址&quot; class=&quot;headerlink&quot; title=&quot;开源软件镜像地址&quot;&gt;&lt;/a&gt;开源软件镜像地址&lt;/h1&gt;&lt;p&gt;如果要是下载软件的话，直接执行 &lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://wangyangyangisme.github.io/categories/ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>Drone+Gitea自动化部署</title>
    <link href="http://wangyangyangisme.github.io/2020/03/12/CICD-Drone+Gitea%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>http://wangyangyangisme.github.io/2020/03/12/CICD-Drone+Gitea自动化部署/</id>
    <published>2020-03-12T07:38:36.000Z</published>
    <updated>2020-03-12T06:58:06.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Drone-Gitea自动化部署"><a href="#Drone-Gitea自动化部署" class="headerlink" title="Drone+Gitea自动化部署"></a>Drone+Gitea自动化部署</h1><blockquote><p><a href="https://wangyangyangisme.github.io/2020/03/02/vagrant-Vagrant%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/">本使用Vagrant搭建虚拟环境</a></p><p>新建一个虚拟机ip为192.168.56.100</p></blockquote><h2 id="1-安装私有仓库harbor"><a href="#1-安装私有仓库harbor" class="headerlink" title="1.安装私有仓库harbor"></a>1.安装私有仓库harbor</h2><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone1.png"></p><p>下载地址：<a href="https://github.com/goharbor/harbor/releases" target="_blank" rel="noopener">https://github.com/goharbor/harbor/releases</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant ssh</span></span><br><span class="line"><span class="meta">#</span><span class="bash">密码vagrant</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo su</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar xvf harbor-offline-installer-v1.10.1.tgz</span></span><br></pre></td></tr></table></figure><p>编辑harbor.yml文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ./harbor</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi harbor.yml</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone2.png"></p><p>安装执行install.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./install.sh</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone3.png"></p><p>编辑 /etc/docker/daemon.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"insecure-registries"</span>:[<span class="string">"192.168.56.100"</span>],</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://c8x7u9xt.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启docker：<code>systemctl restart docker</code></p><p>重启harbor</p><p>登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker login 192.168.56.100</span></span><br><span class="line"><span class="meta">#</span><span class="bash">用户名: admin</span></span><br><span class="line"><span class="meta">#</span><span class="bash">密码: Harbor12345</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone5.png"></p><p>浏览器访问 192.168.56.100</p><h2 id="2-安装Gitea"><a href="#2-安装Gitea" class="headerlink" title="2.安装Gitea"></a>2.安装Gitea</h2><p>docker-compose.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitea_mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"13306:3306"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=123456</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE_CHARSET=utf8mb4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE_COLLATION=utf8mb4_general_ci</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/docker/data/gitea/mysql:/var/lib/mysql</span></span><br><span class="line">  <span class="attr">gitea:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitea/gitea:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"10022:22"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"10080:3000"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_TYPE=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_HOST=gitea_mysql:3306</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_NAME=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_USER=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_PASSWD=gitea</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/docker/data/gitea/gitea:/data</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><p>安装</p><p><code>docker-compose up -d</code></p><p>打开浏览器访问 <a href="http://192.168.56.102:10080/install" target="_blank" rel="noopener">http://192.168.56.102:10080/install</a></p><p>配置数据库</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone6.png"></p><p>基础配置</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone7.png"></p><p>设置账号</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone8.png"></p><h2 id="3-安装Drone"><a href="#3-安装Drone" class="headerlink" title="3.安装Drone"></a>3.安装Drone</h2><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone9.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone10.png"></p><p>记住客户端ID与客户端密钥，将用于docker-compse.yml中</p><p>docker-compose.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">drone_mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"13307:3306"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=123456</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=drone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=drone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=drone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE_CHARSET=utf8mb4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE_COLLATION=utf8mb4_general_ci</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/docker/data/drone/mysql:/var/lib/mysql</span></span><br><span class="line">  <span class="attr">drone-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drone/drone:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">drone</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">10081</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8443</span><span class="string">:443</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_AGENTS_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GITEA_SERVER=http://192.168.56.100:10080/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GITEA_CLIENT_ID=e2a50d23-2a78-4bcd-8fa2-b656bb944904</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GITEA_CLIENT_SECRET=VGLOi5YC9XgauXcHbNTpAMpPcUnK6ALdR7hgatCV0ic=</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=5d1789d5aa2ee55e6a5b956bec3c328f</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SERVER_HOST=192.168.56.100:10081</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SERVER_PROTO=http</span></span><br><span class="line"><span class="comment"># gitea的用户名，否则没有</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_USER_CREATE=username:gitea,admin:true</span></span><br><span class="line"><span class="comment">#      - DRONE_LOGS_DEBUG=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GIT_USERNAME=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GIT_PASSWORD=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GIT_ALWAYS_AUTH=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DRIVER=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DATASOURCE=drone:drone@tcp(drone_mysql:3306)/drone?parseTime=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/docker/data/drone/drone:/data</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">drone-agent:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drone/agent:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">runner</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">13000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_PROTO=http</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_HOST=drone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=5d1789d5aa2ee55e6a5b956bec3c328f</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RUNNER_CAPACITY=2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RUNNER_NAME=$&#123;HOSTNAME&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DEBUG=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">drone-server</span></span><br></pre></td></tr></table></figure><p>注意：<code>DRONE_USER_CREATE=username:gitea,admin:true</code>中username是gitea的账号</p><p>执行命令<code>docker-compose up -d</code></p><p>访问192.168.56.100:10081，完成gitea的授权</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone15.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone11.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone12.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone13.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/drone/drone14.png"></p><p>在harbor新建一个项目wmicro</p><p>在项目根目录中编写 .drone.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">wmicro</span></span><br><span class="line"></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">micro</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">golang:1.13.6-alpine3.11</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/go</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gocache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/root/.cache/go-build</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CGO_ENABLED:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">GO111MODULE:</span> <span class="string">on</span></span><br><span class="line">      <span class="attr">GOPROXY:</span> <span class="string">https://mirrors.aliyun.com/goproxy,direct</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">version</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cd</span> <span class="string">gate/micro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-o</span> <span class="string">micro</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">dd</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">golang:1.13.6-alpine3.11</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/go</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gocache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/root/.cache/go-build</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CGO_ENABLED:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">GO111MODULE:</span> <span class="string">on</span></span><br><span class="line">      <span class="attr">GOPROXY:</span> <span class="string">https://mirrors.aliyun.com/goproxy,direct</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">version</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cd</span> <span class="string">web/dd</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-o</span> <span class="string">dd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">gid</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">golang:1.13.6-alpine3.11</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/go</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gocache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/root/.cache/go-build</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CGO_ENABLED:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">GO111MODULE:</span> <span class="string">on</span></span><br><span class="line">      <span class="attr">GOPROXY:</span> <span class="string">https://mirrors.aliyun.com/goproxy,direct</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">version</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cd</span> <span class="string">srv/gid</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-o</span> <span class="string">gid</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">passport</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">golang:1.13.6-alpine3.11</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/go</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gocache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/root/.cache/go-build</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CGO_ENABLED:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">GO111MODULE:</span> <span class="string">on</span></span><br><span class="line">      <span class="attr">GOPROXY:</span> <span class="string">https://mirrors.aliyun.com/goproxy,direct</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">version</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cd</span> <span class="string">srv/passport</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-o</span> <span class="string">passport</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">golang:1.13.6-alpine3.11</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/go</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gocache</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/root/.cache/go-build</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CGO_ENABLED:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">GO111MODULE:</span> <span class="string">on</span></span><br><span class="line">      <span class="attr">GOPROXY:</span> <span class="string">https://mirrors.aliyun.com/goproxy,direct</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">version</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cd</span> <span class="string">srv/user</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-o</span> <span class="string">user</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">publish</span> <span class="string">micro</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plugins/docker:18.09</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">gate/micro</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">gate/micro/Dockerfile</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/micro</span></span><br><span class="line">      <span class="attr">registry:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">latest</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">publish</span> <span class="string">dd</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plugins/docker:18.09</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">web/dd</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">web/dd/Dockerfile</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/dd</span></span><br><span class="line">      <span class="attr">registry:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">latest</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">publish</span> <span class="string">gid</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plugins/docker:18.09</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">srv/gid</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">srv/gid/Dockerfile</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/gid</span></span><br><span class="line">      <span class="attr">registry:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">latest</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">publish</span> <span class="string">passport</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plugins/docker:18.09</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">srv/passport</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">srv/passport/Dockerfile</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/passport</span></span><br><span class="line">      <span class="attr">registry:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">latest</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">publish</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plugins/docker:18.09</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">srv/user</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">srv/user/Dockerfile</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/user</span></span><br><span class="line">      <span class="attr">registry:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">latest</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">deploy</span> <span class="string">micro</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">appleboy/drone-ssh:1.5.5</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">vagrant</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">pull</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/micro</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rm</span> <span class="string">-f</span> <span class="string">micro</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">image</span> <span class="string">prune</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--name</span> <span class="string">micro</span> <span class="string">-p</span> <span class="number">8082</span><span class="string">:8082</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/micro</span> <span class="string">web</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">deploy</span> <span class="string">dd</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">appleboy/drone-ssh:1.5.5</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">vagrant</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">pull</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/dd</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rm</span> <span class="string">-f</span> <span class="string">dd</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">image</span> <span class="string">prune</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--name</span> <span class="string">dd</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/dd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">deploy</span> <span class="string">gid</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">appleboy/drone-ssh:1.5.5</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">vagrant</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">pull</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/gid</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rm</span> <span class="string">-f</span> <span class="string">gid</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">image</span> <span class="string">prune</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--name</span> <span class="string">gid</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/gid</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">deploy</span> <span class="string">passport</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">appleboy/drone-ssh:1.5.5</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">vagrant</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">pull</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/passport</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rm</span> <span class="string">-f</span> <span class="string">passport</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">image</span> <span class="string">prune</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--name</span> <span class="string">passport</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/passport</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">deploy</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">appleboy/drone-ssh:1.5.5</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">vagrant</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">pull</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/user</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rm</span> <span class="string">-f</span> <span class="string">user</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">image</span> <span class="string">prune</span> <span class="string">-f</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--name</span> <span class="string">user</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.100</span><span class="string">/wmicro/user</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache</span></span><br><span class="line">    <span class="attr">host:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/tmp/drone-cache/go</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gocache</span></span><br><span class="line">    <span class="attr">host:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/tmp/drone-cache/go_build</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Drone-Gitea自动化部署&quot;&gt;&lt;a href=&quot;#Drone-Gitea自动化部署&quot; class=&quot;headerlink&quot; title=&quot;Drone+Gitea自动化部署&quot;&gt;&lt;/a&gt;Drone+Gitea自动化部署&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="CI/CD" scheme="http://wangyangyangisme.github.io/categories/CI-CD/"/>
    
    
      <category term="Drone" scheme="http://wangyangyangisme.github.io/tags/Drone/"/>
    
  </entry>
  
  <entry>
    <title>vagrantfile配置详解</title>
    <link href="http://wangyangyangisme.github.io/2020/03/02/vagrant-vagrantfile%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://wangyangyangisme.github.io/2020/03/02/vagrant-vagrantfile配置详解/</id>
    <published>2020-03-02T05:38:36.000Z</published>
    <updated>2020-03-02T05:24:38.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vagrantfile配置详解"><a href="#vagrantfile配置详解" class="headerlink" title="vagrantfile配置详解"></a>vagrantfile配置详解</h1><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>在我们的工作目录下有一个Vagrantfile文件，里面包含有大量的配置信息，通过它可以定义虚拟机的各种配置，如网络、内存、主机名等，主要包括三个方面的配置，虚拟机的配置、SSH配置、Vagrant的一些基础配置。Vagrant是使用Ruby开发的，所以它的配置语法也是Ruby的，每个项目都需要有一个Vagrantfile，在执行vagrant init的目录下可以找到该文件</p><h2 id="2、Vagrantfile文件"><a href="#2、Vagrantfile文件" class="headerlink" title="2、Vagrantfile文件"></a>2、Vagrantfile文件</h2><p>Vagrantfile中有两行配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Vagrant.configure("2") do |config|</span><br><span class="line">config.vm.box = "centos7"</span><br></pre></td></tr></table></figure><p>这两行就是我们在vagrant init中后面所指定的参数。由此可以看出，vagrant init只是帮我们生成了配置文件而已，换句话说，如果我们写好了Vagrantfile，就不需要vagrant init，只需将准备好的配置文件放入到所需目录中，然后直接执行vagrant up即可。</p><p>还有很多注释掉的配置，那些都是一些常用的配置，包括网卡设置、IP地址、绑定目录，甚至可以指定内存大小、CPU个数、是否启动界面等等。如果需要，可以根据注释文本进行配置。</p><h2 id="3、-配置详解"><a href="#3、-配置详解" class="headerlink" title="3、 配置详解"></a>3、 配置详解</h2><p>下面是一些常用的配置：</p><ul><li><strong>config.vm.hostname</strong>：配置虚拟机主机名</li><li><strong>config.vm.network</strong>：这是配置虚拟机网络</li><li><strong>config.vm.synced_folder</strong>：除了默认的目录绑定外，还可以手动指定绑定</li><li><strong>config.ssh.username</strong>：默认的用户是vagrant，从官方下载的box往往使用的是这个用户名。如果是自定制的box，所使用的用户名可能会有所不同，通过这个配置设定所用的用户名。</li><li><strong>config.vm.provision</strong>：我们可以通过这个配置在虚拟机第一次启动的时候进行一些安装配置</li></ul><p>需要注意的是，Vagrantfile文件只会在第一次执行vagrant up时调用执行，之后如果不使用<code>vagrant reload</code>进行重新加载，则不会被强制重新加载。</p><h3 id="3-1、box设置"><a href="#3-1、box设置" class="headerlink" title="3.1、box设置"></a>3.1、box设置</h3><p><strong>config.vm.box</strong> = “centos7”</p><p>该名称是再使用 vagrant init 中后面跟的名字。</p><h3 id="3-2、hostname设置"><a href="#3-2、hostname设置" class="headerlink" title="3.2、hostname设置"></a>3.2、hostname设置</h3><p><strong>config.vm.hostname</strong> = “node1”<br>设置hostname非常重要，因为当我们有很多台虚拟服务器的时候，都是依靠hostname來做识别的。比如，我安装了centos1,centos2 两台虚拟机，再启动时，我可以通过vagrant up centos1来指定只启动哪一台。</p><h3 id="3-3、虚拟机网络设置"><a href="#3-3、虚拟机网络设置" class="headerlink" title="3.3、虚拟机网络设置"></a>3.3、虚拟机网络设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Host-only模式</span></span><br><span class="line">config.vm.network "private_network", ip: "192.168.10.11"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Bridge模式</span></span><br><span class="line">config.vm.network "public_network", ip: "10.1.2.61"</span><br></pre></td></tr></table></figure><p>Vagrant的网络连接方式有三种：</p><ul><li><p><strong>NAT</strong> : 缺省创建，用于让vm可以通过host转发访问局域网甚至互联网。</p></li><li><p><strong>host-only</strong> : 只有主机可以访问vm，其他机器无法访问它。</p></li><li><p><strong>bridge</strong> : 此模式下vm就像局域网中的一台独立的机器，可以被其他机器访问。</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置当前vm的host-only网络的IP地址为192.168.33.10</span></span><br><span class="line">config.vm.network :private_network, ip: "192.168.33.10"</span><br></pre></td></tr></table></figure><p>host-only 模式的IP可以不指定，而是采用dhcp自动生成的方式，如 :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建一个bridge桥接网络，指定IP</span></span><br><span class="line">config.vm.network "private_network", type: "dhcp”</span><br><span class="line"><span class="meta">#</span><span class="bash">config.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.0.17"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">创建一个bridge桥接网络，指定桥接适配器</span></span><br><span class="line"><span class="meta">#</span><span class="bash">config.vm.network <span class="string">"public_network"</span>, bridge: <span class="string">"en1: Wi-Fi (AirPort)"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">创建一个bridge桥接网络，不指定桥接适配器</span></span><br><span class="line">config.vm.network "public_network"</span><br></pre></td></tr></table></figure><h3 id="3-4、同步目录设置"><a href="#3-4、同步目录设置" class="headerlink" title="3.4、同步目录设置"></a>3.4、同步目录设置</h3><p><strong>config.vm.synced_folder</strong>  “D:/xxx/code”, “/home/www/“<br>前面的路径(D:/xxx/code)是本机代码的地址，后面的地址就是虚拟机的目录。虚拟机的/vagrant目录默认挂载宿主机的开发目录(可以在进入虚拟机机后，使用df -h 查看)，这是在虚拟机启动时自动挂载的。我们还可以设置额外的共享目录，上面这个设定，第一个参数是宿主机的目录，第二个参数是虚拟机挂载的目录。</p><h3 id="3-5、端口转发设置"><a href="#3-5、端口转发设置" class="headerlink" title="3.5、端口转发设置"></a>3.5、端口转发设置</h3><p><strong>config.vm.network</strong>  :forwarded_port, guest: 80, host: 8080<br>上面的配置把宿主机上的8080端口映射到客户虚拟机的80端口，例如你在虚拟机上使用nginx跑了一个Go应用，那么你在host上的浏览器中打开<a href="http://localhost:8080时，Vagrant就会把这个请求转发到虚拟机里跑在80端口的nginx服务上。不建议使用该方法，因为涉及端口占用问题，常常导致应用之间不能正常通信，建议使用Host-only和Bridge方式进行设置。">http://localhost:8080时，Vagrant就会把这个请求转发到虚拟机里跑在80端口的nginx服务上。不建议使用该方法，因为涉及端口占用问题，常常导致应用之间不能正常通信，建议使用Host-only和Bridge方式进行设置。</a></p><p>guest和host是必须的，还有几个可选属性：</p><ul><li>guest_ip：字符串，vm指定绑定的Ip，缺省为0.0.0.0</li><li>host_ip：字符串，host指定绑定的Ip，缺省为0.0.0.0</li><li>protocol：字符串，可选TCP或UDP，缺省为TCP</li></ul><h3 id="3-6、定义vm的configure配置节点"><a href="#3-6、定义vm的configure配置节点" class="headerlink" title="3.6、定义vm的configure配置节点"></a>3.6、定义vm的configure配置节点</h3><p>一个节点就是一个虚拟机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config.vm.define :mysql do |mysql_config|</span><br><span class="line">...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>表示在config配置中，定义一个名为mysql的vm配置，该节点下的配置信息命名为mysql_config； 如果该Vagrantfile配置文件只定义了一个vm，这个配置节点层次可忽略。</p><p>还可以在一个Vagrantfile文件里建立多个虚拟机，一般情况下，你可以用多主机功能完成以下任务：</p><ul><li>分布式的服务，例如网站服务器和数据库服务器</li><li>分发系统</li><li>测试接口</li><li>灾难测试</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vagrant.configure("2") do |config|  </span><br><span class="line">  config.vm.define "web" do |web|</span><br><span class="line">    web.vm.box = "apache"</span><br><span class="line">  end</span><br><span class="line"> </span><br><span class="line">  config.vm.define "db" do |db|</span><br><span class="line">    db.vm.box = "mysql"</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>当定义了多主机之后，在使用vagrant命令的时候，就需要加上主机名，例如vagrant ssh web；也有一些命令，如果你不指定特定的主机，那么将会对所有的主机起作用，比如vagrant up；你也可以使用表达式指定特定的主机名，例如vagrant up /follower[0-9]/。</p><h3 id="3-7、通用数据-设置一些基础数据，供配置信息中调用。"><a href="#3-7、通用数据-设置一些基础数据，供配置信息中调用。" class="headerlink" title="3.7、通用数据 设置一些基础数据，供配置信息中调用。"></a>3.7、通用数据 设置一些基础数据，供配置信息中调用。</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app_servers = &#123;</span><br><span class="line">:service1 =&gt; '192.168.33.20',</span><br><span class="line">:service2 =&gt; '192.168.33.21'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是定义一个hashmap，以key-value方式来存储vm主机名和ip地址。</p><h3 id="3-8、配置信息"><a href="#3-8、配置信息" class="headerlink" title="3.8、配置信息"></a>3.8、配置信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ENV["LC_ALL"] = "en_US.UTF-8"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定vm的语言环境，缺省地，会继承host的locale配置</span></span><br><span class="line">Vagrant.configure("2") do |config|</span><br><span class="line">    # ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>参数2，表示的是当前配置文件使用的vagrant configure版本号为Vagrant 1.1+,如果取值为1，表示为Vagrant 1.0.x Vagrantfiles，旧版本暂不考虑，记住就写2即可。</p><p>do … end 为配置的开始结束符，所有配置信息都写在这两段代码之间。 config是为当前配置命名，你可以指定任意名称，如myvmconfig，在后面引用的时候，改为自己的名字即可。</p><h3 id="3-9、vm提供者配置"><a href="#3-9、vm提供者配置" class="headerlink" title="3.9、vm提供者配置"></a>3.9、vm提供者配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config.vm.provider :virtualbox do |vb|</span><br><span class="line">     # ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><strong>vm provider通用配置</strong></p><p>虚机容器提供者配置，对于不同的provider，特有的一些配置，此处配置信息是针对virtualbox定义一个提供者，命名为vb，跟前面一样，这个名字随意取，只要节点内部调用一致即可。<br>配置信息又分为通用配置和个性化配置，通用配置对于不同provider是通用的，常用的通用配置如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">指定vm-name，也就是virtualbox管理控制台中的虚机名称。如果不指会生成一个随机的名字，不容易区分。</span></span><br><span class="line">vb.name = "centos7"</span><br><span class="line"><span class="meta">#</span><span class="bash"> vagrant up启动时，是否自动打开virtual box的窗口，缺省为<span class="literal">false</span></span></span><br><span class="line">vb.gui = true</span><br><span class="line"><span class="meta">#</span><span class="bash">指定vm内存，单位为MB</span></span><br><span class="line">vb.memory = "1024"</span><br><span class="line"><span class="meta">#</span><span class="bash">设置CPU个数</span></span><br><span class="line">vb.cpus = 2</span><br></pre></td></tr></table></figure><p><strong>vm provider个性化配置(virtualbox)</strong></p><p>上面的provider配置是通用的配置，针对不同的虚拟机，还有一些的个性的配置，通过vb.customize配置来定制。</p><p>对virtual box的个性化配置，可以参考：VBoxManage modifyvm 命令的使用方法。详细的功能接口和使用说明，可以参考virtualbox官方文档。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">修改vb.name的值</span></span><br><span class="line">v.customize ["modifyvm", :id, "--name", "mfsmaster2"]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如修改显存，缺省为8M，如果启动桌面，至少需要10M，如下修改为16M：</span></span><br><span class="line">vb.customize ["modifyvm", :id, "--vram", "16"]</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">调整虚拟机的内存</span></span><br><span class="line">vb.customize ["modifyvm", :id, "--memory", "1024"]</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">指定虚拟CPU个数</span></span><br><span class="line">vb.customize ["modifyvm", :id, "--cpus", "2"]</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">增加光驱：</span></span><br><span class="line">vb.customize ["storageattach",:id,"--storagectl", "IDE Controller","--port","0","--device","0","--type","dvddrive","--medium","/Applications/VirtualBox.app/Contents/MacOS/VBoxGuestAdditions.iso"]</span><br><span class="line"><span class="meta">#</span><span class="bash">注：meduim参数不可以为空，如果只挂载驱动器不挂在iso，指定为“emptydrive”。如果要卸载光驱，medium传入none即可。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">从这个指令可以看出，customize方法传入一个json数组，按照顺序传入参数即可。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">json数组传入多个参数</span></span><br><span class="line">v.customize ["modifyvm", :id, "--name", “mfsserver3", "--memory", “2048"]</span><br></pre></td></tr></table></figure><h3 id="3-10、一组相同配置的vm"><a href="#3-10、一组相同配置的vm" class="headerlink" title="3.10、一组相同配置的vm"></a>3.10、一组相同配置的vm</h3><p>前面配置了一组vm的hash map，定义一组vm时，使用如下节点遍历。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">遍历app_servers map，将key和value分别赋值给app_server_name和app_server_ip</span></span><br><span class="line">app_servers.each do |app_server_name, app_server_ip|</span><br><span class="line">     #针对每一个app_server_name，来配置config.vm.define配置节点，命名为app_config</span><br><span class="line">     config.vm.define app_server_name do |app_config|</span><br><span class="line">          # 此处配置，参考config.vm.define</span><br><span class="line">     end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>如果不想定义app_servers，下面也是一种方案:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(1..3).each do |i|</span><br><span class="line">           config.vm.define "app-#&#123;i&#125;" do |node|</span><br><span class="line">           app_config.vm.hostname = "app-#&#123;i&#125;.vagrant.internal"</span><br><span class="line">           app_config.vm.provider "virtualbox" do |vb|</span><br><span class="line">               vb.name = app-#&#123;i&#125;</span><br><span class="line">           end</span><br><span class="line">     end</span><br><span class="line">   end</span><br></pre></td></tr></table></figure><h3 id="3-11、provision任务"><a href="#3-11、provision任务" class="headerlink" title="3.11、provision任务"></a>3.11、provision任务</h3><p>你可以编写一些命令，让vagrant在启动虚拟机的时候自动执行，这样你就可以省去手动配置环境的时间了。<br><strong>脚本何时会被执行</strong></p><ul><li>第一次执行vagrant up命令</li><li>执行vagrant provision命令</li><li>执行vagrant reload –provision或者vagrant up –provision命令</li><li>你也可以在启动虚拟机的时候添加–no-provision参数以阻止脚本被执行</li></ul><p><strong>provision任务是什么？</strong></p><p>provision任务是预先设置的一些操作指令，格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">config.vm.provision 命令字 json格式参数</span><br><span class="line"> </span><br><span class="line">config.vm.provion 命令字 do |s|</span><br><span class="line">    s.参数名 = 参数值</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>每一个 config.vm.provision 命令字 代码段，我们称之为一个provisioner。</p><p>根据任务操作的对象，provisioner可以分为：</p><ul><li>Shell</li><li>File</li><li>Ansible</li><li>CFEngine</li><li>Chef</li><li>Docker</li><li>Puppet</li><li>Salt</li></ul><p>根据vagrantfile的层次，分为：</p><p>configure级：它定义在 Vagrant.configure(“2”) 的下一层次，形如： config.vm.provision …</p><p>vm级：它定义在 config.vm.define “web” do |web| 的下一层次，web.vm.provision …</p><p>执行的顺序是先执行configure级任务，再执行vm级任务，即便configure级任务在vm定义的下面才定义。例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vagrant.configure("2") do |config|</span><br><span class="line">  config.vm.provision "shell", inline: "echo 1"</span><br><span class="line"> </span><br><span class="line">  config.vm.define "web" do |web|</span><br><span class="line">    web.vm.provision "shell", inline: "echo 2"</span><br><span class="line">  end</span><br><span class="line"> </span><br><span class="line">  config.vm.provision "shell", inline: "echo 3"</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">==&gt; default: "1"</span><br><span class="line">==&gt; default: "2"</span><br><span class="line">==&gt; default: "3"</span><br></pre></td></tr></table></figure><p><strong>如何使用</strong></p><p>● 单行脚本</p><p>helloword只是一个开始，对于inline模式，命令只能在写在一行中。</p><p>单行脚本使用的基本格式：</p><p><strong>config.vm.provision</strong>  “shell”, inline: “echo fendo”</p><p>shell命令的参数还可以写入do … end代码块中，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config.vm.provision "shell" do |s|</span><br><span class="line">s.inline = "echo hello provision."</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>● 内联脚本</p><p>如果要执行脚本较多，可以在Vagrantfile中指定内联脚本，在Vagrant.configure节点外面，写入命名内联脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">script = &lt;&lt;SCRIPT</span></span><br><span class="line">echo I am provisioning...</span><br><span class="line">echo hello provision.</span><br><span class="line">SCRIPT</span><br></pre></td></tr></table></figure><p>然后，inline调用如下：</p><p><strong>config.vm.provision</strong>  “shell”, inline: $script</p><p>● 外部脚本</p><p>也可以把代码写入代码文件，并保存在一个shell里，进行调用：</p><p><strong>config.vm.provision</strong>  “shell”, path: “script.sh”</p><p>script.sh的内容：</p><p>echo hello provision.</p><p>注意:</p><p>如果使用provision来安装程序，如yum install lrzsz会出现如下错误:</p><p>使用<code>yum install -y</code>就行了。</p><p>修改完Vagrantfile的配置后，记得要重启虚拟机，才能使用虚拟机更新后的配置。</p><p><strong>vagrant reload</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vagrantfile配置详解&quot;&gt;&lt;a href=&quot;#vagrantfile配置详解&quot; class=&quot;headerlink&quot; title=&quot;vagrantfile配置详解&quot;&gt;&lt;/a&gt;vagrantfile配置详解&lt;/h1&gt;&lt;h2 id=&quot;1、简介&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="vagrant" scheme="http://wangyangyangisme.github.io/categories/vagrant/"/>
    
    
      <category term="vagrant" scheme="http://wangyangyangisme.github.io/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>Vagrant搭建虚拟环境</title>
    <link href="http://wangyangyangisme.github.io/2020/03/02/vagrant-Vagrant%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://wangyangyangisme.github.io/2020/03/02/vagrant-Vagrant搭建虚拟环境/</id>
    <published>2020-03-02T03:00:36.000Z</published>
    <updated>2020-03-02T03:12:42.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vagrant搭建虚拟环境"><a href="#Vagrant搭建虚拟环境" class="headerlink" title="Vagrant搭建虚拟环境"></a>Vagrant搭建虚拟环境</h1><blockquote><p>Vagrant 是基于 VirtualBox 虚拟机的，通俗的讲，就是用虚拟机的环境运行本地的代码。代码可以在本地直接编辑和调试，你可以在本地浏览器里查看运行中 Web 应用。而这套虚拟机是可以直接导入到其他电脑上的使用的，这样团队其他成员省去了配置时间，更能保证开发环境和生产环境的统一。</p><p>Vagrant的强大在于是一个镜像，配置完以后镜像可以放到任何地方去，真正做到了一劳永逸了。</p></blockquote><p><strong>Vagrant的官方网站:</strong> <a href="http://www.vagrantup.com/" target="_blank" rel="noopener">http://www.vagrantup.com/</a></p><p><strong>Vagrant镜像</strong></p><ul><li>官方镜像：<a href="https://app.vagrantup.com/boxes/search" target="_blank" rel="noopener">https://app.vagrantup.com/boxes/search</a></li><li>三方镜像：<a href="http://www.vagrantbox.es/" target="_blank" rel="noopener">http://www.vagrantbox.es/</a></li></ul><h2 id="1-安装Virtualbox"><a href="#1-安装Virtualbox" class="headerlink" title="1.安装Virtualbox"></a>1.安装Virtualbox</h2><p>下载地址：<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/vagrant/vagrant1.png"></p><p>修改配置虚拟机安装路径</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/vagrant/vagrant2.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/vagrant/vagrant3.png"></p><h2 id="2-安装Vagrant"><a href="#2-安装Vagrant" class="headerlink" title="2.安装Vagrant"></a>2.安装Vagrant</h2><p>下载地址：<a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noopener">https://www.vagrantup.com/downloads.html</a></p><p>更改vagrant配置文件的位置</p><p>将<code>C:\Users\user_name\.vagrant.d</code>移动到新的位置，新建环境变量<code>VAGRANT_HOME</code>，并指向新路径</p><h2 id="3-初始化虚拟机"><a href="#3-初始化虚拟机" class="headerlink" title="3.初始化虚拟机"></a>3.初始化虚拟机</h2><h3 id="3-1-在线方式"><a href="#3-1-在线方式" class="headerlink" title="3.1 在线方式"></a>3.1 在线方式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">添加镜像</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant box add debian https://dl.dropboxusercontent.com/u/3523744/boxes/debian-8.1-amd64-lxc-puppet/debian-8.1-lxc-puppet.box</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">初始化</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant init debian</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动 </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant up</span></span><br></pre></td></tr></table></figure><h3 id="3-2-本地方式"><a href="#3-2-本地方式" class="headerlink" title="3.2 本地方式"></a>3.2 本地方式</h3><p>CentOS 7 box地址：<a href="https://app.vagrantup.com/centos/boxes/7/versions/1902.01" target="_blank" rel="noopener">https://app.vagrantup.com/centos/boxes/7/versions/1902.01</a></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/vagrant/vagrant4.png"></p><p>由于在vagrant box hub上下载box速度很慢，这里提前下载好centos 7 boxes，保存于<strong>H:\vagrant\box_files</strong>文件夹下，注意：目录结构保持与我的一致。<br><strong>下载方法是box地址+提供商名字</strong>（用迅雷下载比较快）<br><strong>如：<a href="https://app.vagrantup.com/centos/boxes/7/versions/1902.01/providers/virtualbox.box" target="_blank" rel="noopener">https://app.vagrantup.com/centos/boxes/7/versions/1902.01/providers/virtualbox.box</a></strong></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/vagrant/vagrant5.png"></p><p>CentOS-7-x86_64-Vagrant-1902_01.VirtualBox.json文件内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"centos/7"</span>,</span><br><span class="line">  <span class="attr">"versions"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"version"</span>: <span class="string">"1902.01"</span>,</span><br><span class="line">      <span class="attr">"providers"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"virtualbox"</span>,</span><br><span class="line">          <span class="attr">"url"</span>: <span class="string">"file://H:/vagrant/box_files/CentOS-7-x86_64-Vagrant-1902_01.VirtualBox.box"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> H:/vagrant/box_files</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">执行以下命令</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant box add CentOS-7-x86_64-Vagrant-1902_01.VirtualBox.json</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除box模板</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant box remove centos/7</span></span><br></pre></td></tr></table></figure><h3 id="3-3-启动一个虚拟机"><a href="#3-3-启动一个虚拟机" class="headerlink" title="3.3 启动一个虚拟机"></a>3.3 启动一个虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir -p H:/vagrant/box_files/<span class="built_in">test</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> H:/vagrant/box_files/<span class="built_in">test</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">初始化,生成vagrantfile</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant init centos/7</span></span><br></pre></td></tr></table></figure><p>修改Vagrantfile配置，并准备系统配置脚本，<strong>注意virtualbox的网段在192.168.56.1</strong></p><p>Vagrntfile文件内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -*- mode: ruby -*-</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi: <span class="built_in">set</span> ft=ruby :</span></span><br><span class="line"></span><br><span class="line">Vagrant.require_version "&gt;= 1.6.0"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">virtualbox虚拟机网段是192.168.56.1</span></span><br><span class="line">boxes = [</span><br><span class="line">    &#123;</span><br><span class="line">        :name =&gt; "test",</span><br><span class="line">        :eth1 =&gt; "192.168.56.100",</span><br><span class="line">        :mem =&gt; "2048",</span><br><span class="line">        :cpu =&gt; "2"</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">Vagrant.configure(2) do |config|</span><br><span class="line">  config.vm.box = "centos/7"</span><br><span class="line">  config.vbguest.auto_update = false</span><br><span class="line">  config.vbguest.no_remote = true</span><br><span class="line"></span><br><span class="line">  boxes.each do |opts|</span><br><span class="line">    config.vm.define opts[:name] do |config|</span><br><span class="line">      config.vm.hostname = opts[:name]</span><br><span class="line">      config.vm.provider "vmware_fusion" do |v|</span><br><span class="line">        v.vmx["memsize"] = opts[:mem]</span><br><span class="line">        v.vmx["numvcpus"] = opts[:cpu]</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">      config.vm.provider "virtualbox" do |vb|</span><br><span class="line">        vb.name = "lab-#&#123;config.vm.hostname&#125;"</span><br><span class="line">        vb.customize ["modifyvm", :id, "--memory", opts[:mem]]</span><br><span class="line">        vb.customize ["modifyvm", :id, "--cpus", opts[:cpu]]</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">      config.vm.provider :libvirt do |lv|</span><br><span class="line">          lv.host = "lab-#&#123;config.vm.hostname&#125;"</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">      config.vm.network :private_network, ip: opts[:eth1]</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> 禁用vagrant的默认共享目录</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> config.vm.synced_folder <span class="string">"."</span>, <span class="string">"/vagrant"</span>, disabled:<span class="literal">true</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> config.vm.synced_folder <span class="string">"../public"</span>, <span class="string">"/opt"</span>, mount_options:[<span class="string">"dmode=777"</span>,<span class="string">"fmode=666"</span>]</span></span><br><span class="line">  config.vm.provision "shell", privileged: true, path: "./setup.sh"</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>setup.sh文件内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">  Delta RPMs disabled because /usr/bin/applydeltarpm not installed.</span></span><br><span class="line">sudo yum install -y deltarpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置时区</span></span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭防护墙及selinux</span></span><br><span class="line">sed -i '/SELINUX/s/enforcing/disabled/g' /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许密码登录</span></span><br><span class="line">sed -i '/^PasswordAuthentication no/s/no/yes/g' /etc/ssh/sshd_config</span><br><span class="line">systemctl restart sshd.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> install some tools</span></span><br><span class="line">sudo yum install -y git vim gcc glibc-static telnet bridge-utils net-tools</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> install docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># step 1: 安装必要的一些系统工具</span></span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Step 2: 添加软件源信息</span></span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Step 3: 更新并安装 Docker-CE</span></span></span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 镜像加速器</span></span></span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["https://c8x7u9xt.mirror.aliyuncs.com"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> start docker service</span></span><br><span class="line">sudo usermod -aG docker vagrant</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> install docker-compose</span></span><br><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>安装vagrant-vbguest插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant plugin install vagrant-vbguest</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant vbguest</span></span><br></pre></td></tr></table></figure><p>安装vagrant-vbguest插件用于文件夹共享</p><p>启动虚拟机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant up</span></span><br></pre></td></tr></table></figure><h3 id="3-4-vagrant-ssh登录虚拟机"><a href="#3-4-vagrant-ssh登录虚拟机" class="headerlink" title="3.4 vagrant ssh登录虚拟机"></a>3.4 vagrant ssh登录虚拟机</h3><p>虚拟机安装好后，默认已经创建了vagrant用户，密码是vagrant，root用户的默认密码也是vagrant。<br>在命令行下执行<strong>vagrant.exe ssh</strong>，将以vagrant用户登录虚拟机。也可以用Secure CRT、xshell等工具连接登录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">SSH登录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vagrant ssh   <span class="comment">#ssh的后面可以跟你的title来连接不同的vm主机</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">默认账号密码</span></span><br><span class="line">vagrant/vagrant</span><br><span class="line">root/vagrant</span><br></pre></td></tr></table></figure><h2 id="4-常见命令"><a href="#4-常见命令" class="headerlink" title="4.常见命令"></a>4.常见命令</h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>vagrant box list</td><td>查看目前已有的box</td></tr><tr><td>vagrant box add</td><td>新增加一个box</td></tr><tr><td>vagrant box remove</td><td>删除指定box</td></tr><tr><td>vagrant init</td><td>初始化配置Vagrantfile</td></tr><tr><td>vagrant up</td><td>启动虚拟机</td></tr><tr><td>vagrant ssh</td><td>ssh登录虚拟机</td></tr><tr><td>vagrant suspend</td><td>暂停虚拟机，虚拟机内存等信息将以状态文件的方式保存在本地，可以执行恢复操作后继续使用</td></tr><tr><td>vagrant reload</td><td>重启虚拟机</td></tr><tr><td>vagrant halt</td><td>关闭虚拟机</td></tr><tr><td>vagrant status</td><td>查看虚拟机状态</td></tr><tr><td>vagrant destroy</td><td>销毁(删除)当前虚拟机(除Vagrantfile中的配置所有数据都不会保留)</td></tr><tr><td>vagrant resume</td><td>恢复虚拟机，与前面的暂停相对应</td></tr></tbody></table><h2 id="5-打包分发"><a href="#5-打包分发" class="headerlink" title="5.打包分发"></a>5.打包分发</h2><p>当你配置好开发环境后，退出并关闭虚拟机。在终端里对开发环境进行打包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant package</span></span><br></pre></td></tr></table></figure><p>打包完成后会在当前目录生成一个package.box 的文件，将这个文件传给其他用户，其他用户只要添加这个box并用其初始化自己的开发目录就能得到一个一模一样的开发环境了。</p><blockquote><p>注：如果网络模式中使用 private_network 的话，在打包之前需要清除一下private_network的设置，避免不必要的错误：<br>sudo rm -f /etc/udev/rule.d/70-persistent-net.rules<br>制作完成之后直接将box文件拿到其他计算机上配置即可使用。</p></blockquote><p>更多内容请查阅官方文档<br><a href="http://docs.vagrantup.com/" target="_blank" rel="noopener">http://docs.vagrantup.com/</a></p><h2 id="6-Vagrant-插件："><a href="#6-Vagrant-插件：" class="headerlink" title="6.Vagrant 插件："></a>6.Vagrant 插件：</h2><h3 id="6-1-snapshot-插件"><a href="#6-1-snapshot-插件" class="headerlink" title="6.1 snapshot 插件"></a>6.1 snapshot 插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin install vagrant-vbox-snapshot</span><br><span class="line"></span><br><span class="line">Installing the 'vagrant-vbox-snapshot' plugin. This can take a few minutes...</span><br><span class="line">Fetching: vagrant-vbox-snapshot-0.0.10.gem (100%)</span><br><span class="line">Installed the plugin 'vagrant-vbox-snapshot (0.0.10)'!</span><br></pre></td></tr></table></figure><p>Vagrant建立快照备份</p><blockquote><p>使用Vagrant的快照功能可以很方便快速的创建当前虚拟机的一个临时备份状态，在进行重要操作时可以先创建一个快照以便在操作失误后快速恢复。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant snapshot</span></span><br><span class="line">Usage: vagrant snapshot &lt;command&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">Available subcommands:</span><br><span class="line">     back</span><br><span class="line">     delete</span><br><span class="line">     go</span><br><span class="line">     list</span><br><span class="line">     take</span><br><span class="line"></span><br><span class="line">For help on any individual command run `vagrant snapshot &lt;command&gt; -h</span><br></pre></td></tr></table></figure><p>使用方法：</p><ul><li>创建一个快照</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant snapshot take [vm-name] &lt;SNAPSHOT_NAME&gt;</span><br></pre></td></tr></table></figure><ul><li>查看快照列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant snapshot list [vm-name]</span><br></pre></td></tr></table></figure><ul><li>从指定快照中恢复</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant snapshot go [vm-name] &lt;SNAPSHOT_NAME&gt;</span><br></pre></td></tr></table></figure><ul><li>删除一个快照</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant snapshot delete [vm-name] &lt;SNAPSHOT_NAME&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-vbguest-插件"><a href="#6-2-vbguest-插件" class="headerlink" title="6.2 vbguest 插件"></a>6.2 vbguest 插件</h3><blockquote><p>自定义共享目录，有时候我们发现有些virtualbox无法使用自定义的共享目录，这时候就需要安装vbguest客户端（类似于VMware的client）</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin install vagrant-vbguest</span><br></pre></td></tr></table></figure><h3 id="6-3-hostmanager-插件"><a href="#6-3-hostmanager-插件" class="headerlink" title="6.3 hostmanager 插件"></a>6.3 hostmanager 插件</h3><blockquote><p>用主机名访问，可以实现虚机之间用主机名互相访问，也可以实现宿主机用主机名访问虚机。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin install vagrant-hostmanager</span><br></pre></td></tr></table></figure><h3 id="6-4-vagrant-bindfs-支持多种共享模式"><a href="#6-4-vagrant-bindfs-支持多种共享模式" class="headerlink" title="6.4 vagrant-bindfs 支持多种共享模式"></a>6.4 vagrant-bindfs 支持多种共享模式</h3><p>插件bindfs可以支持多种共享模式，如nfs，samba</p><p>命令行下输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin install vagrant-bindfs</span><br></pre></td></tr></table></figure><p>修改Vgrantfile文件：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">config.vm.define <span class="string">"node1"</span> <span class="keyword">do</span> <span class="params">|node1|</span></span><br><span class="line">  node1.vm.network <span class="string">"private_network"</span>, <span class="symbol">ip:</span> <span class="string">"192.168.33.11"</span></span><br><span class="line">  node1.vm.hostname=<span class="string">"node1.yulongjun.com"</span></span><br><span class="line">  node1.vm.synced_folder <span class="string">"./app"</span> <span class="string">"/mnt/app-data"</span>, <span class="symbol">type:</span> <span class="string">"nfs"</span></span><br><span class="line">  node1.bindfs.bind_folder <span class="string">"/mnt/app-data"</span> <span class="string">"/app"</span></span><br><span class="line">    <span class="symbol">force_user:</span> <span class="string">"root"</span>, <span class="symbol">force_group:</span> <span class="string">"root"</span>, <span class="symbol">o:</span> <span class="string">"noempty"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Vagrant搭建虚拟环境&quot;&gt;&lt;a href=&quot;#Vagrant搭建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;Vagrant搭建虚拟环境&quot;&gt;&lt;/a&gt;Vagrant搭建虚拟环境&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Vagrant 是基于 V
      
    
    </summary>
    
    
      <category term="vagrant" scheme="http://wangyangyangisme.github.io/categories/vagrant/"/>
    
    
      <category term="vagrant" scheme="http://wangyangyangisme.github.io/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>github搜索技巧</title>
    <link href="http://wangyangyangisme.github.io/2020/02/27/git-github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
    <id>http://wangyangyangisme.github.io/2020/02/27/git-github搜索技巧/</id>
    <published>2020-02-27T07:20:00.000Z</published>
    <updated>2020-02-27T07:37:40.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="github搜索技巧"><a href="#github搜索技巧" class="headerlink" title="github搜索技巧"></a>github搜索技巧</h1><h2 id="按仓库名称、说明或自述文件内容搜索"><a href="#按仓库名称、说明或自述文件内容搜索" class="headerlink" title="按仓库名称、说明或自述文件内容搜索"></a>按仓库名称、说明或自述文件内容搜索</h2><p>通过 in 限定符，您可以将搜索限制为仓库名称、仓库说明、自述文件内容或这些的任意组合。 如果省略此限定符，则只搜索仓库名称和说明。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>in:name 关键字</td><td>in:name jquery匹配其名称中含有 “jquery” 的仓库。</td></tr><tr><td>in:description 关键字</td><td>in:name,description jquery匹配其名称或说明中含有 “jquery” 的仓库。</td></tr><tr><td>in:readme 关键字</td><td>in:readme jquery匹配其自述文件中提及 “jquery” 的仓库。</td></tr><tr><td>repo:owner/name</td><td>repo:octocat/hello-world 匹配特定仓库名称。</td></tr></tbody></table><h2 id="基于仓库的内容搜索"><a href="#基于仓库的内容搜索" class="headerlink" title="基于仓库的内容搜索"></a>基于仓库的内容搜索</h2><p>您可以使用 in:readme 限定符，通过搜索其自述文件中的内容来查找仓库。</p><p>除了使用 in:readme 以外，无法通过搜索仓库内的特定内容来查找仓库。 要搜索仓库内的特定文件或内容，您可以使用查找器或代码特定的搜索限定符。 更多信息请参阅“在 GitHub 上查找文件”和“搜索代码”。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>in:name 关键字</td><td>in:name jquery</td></tr></tbody></table><p>在用户或组织的仓库内搜索<br> 要在特定用户或组织拥有的所有仓库中搜索，您可以使用 user 或 org 限定符。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>user:USERNAME</td><td>user:defunkt forks:&gt;100 匹配来自 @defunkt、拥有超过 100 复刻的仓库。</td></tr><tr><td>org:ORGNAME</td><td>org:github 匹配来自 GitHub 的仓库。</td></tr></tbody></table><h2 id="按仓库大小搜索"><a href="#按仓库大小搜索" class="headerlink" title="按仓库大小搜索"></a>按仓库大小搜索</h2><p>size 限定符使用大于、小于和范围限定符查找匹配特定大小（以千字节为单位）的仓库。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>size:n</td><td>size:1000 匹配恰好为 1 MB 的仓库。</td></tr><tr><td></td><td>size:&gt;=30000 匹配至少为 30 MB 的仓库。</td></tr><tr><td></td><td>size:&lt;50 匹配小于 50 KB 的仓库。</td></tr><tr><td></td><td>size:50..120 匹配介于 50 KB 与 120 KB 之间的仓库。</td></tr></tbody></table><h2 id="按关注者数量搜索"><a href="#按关注者数量搜索" class="headerlink" title="按关注者数量搜索"></a>按关注者数量搜索</h2><p>您可以使用 followers 限定符以及大于、小于和范围限定符基于仓库拥有的关注者数量过滤仓库。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>followers:n</td><td>node followers:&gt;=10000 匹配拥有 10,000 或更多关注者并且提及 “node” 一词的仓库。</td></tr><tr><td></td><td>styleguide linter followers:1..10 匹配拥有 1 到 10 个关注者并且提及 “styleguide linter” 一词的的仓库。</td></tr></tbody></table><h2 id="按复刻数量搜索"><a href="#按复刻数量搜索" class="headerlink" title="按复刻数量搜索"></a>按复刻数量搜索</h2><p>forks 限定符使用大于、小于和范围限定符指定仓库应具有的复刻数量。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>forks:n forks:5</td><td>匹配只有 5 个复刻的仓库。</td></tr><tr><td>forks:&gt;=205</td><td>匹配具有至少 205 个复刻的仓库。</td></tr><tr><td>forks:&lt;90</td><td>匹配具有少于 90 个复刻的仓库。</td></tr><tr><td>forks:10..20</td><td>匹配具有 10 到 20 个复刻的仓库。</td></tr></tbody></table><h2 id="按星号数量搜索"><a href="#按星号数量搜索" class="headerlink" title="按星号数量搜索"></a>按星号数量搜索</h2><p>您可以使用大于、小于和范围限定符基于仓库具有的星标数量搜索仓库</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>stars:n stars:500</td><td>匹配恰好具有 500 个星号的仓库。</td></tr><tr><td></td><td>stars:10..20 匹配具有 10 到 20 个星号、小于 1000 KB 的仓库。</td></tr><tr><td></td><td>stars:&gt;=500 fork:true language:php 匹配具有至少 500 个星号，包括复刻的星号（以 PHP 编写）的仓库。</td></tr></tbody></table><h2 id="按语言搜索"><a href="#按语言搜索" class="headerlink" title="按语言搜索"></a>按语言搜索</h2><p>您可以基于其编写采用的主要语言搜索仓库。</p><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>language:LANGUAGE</td><td>rails language:javascript 匹配具有 “rails” 字样、以 JavaScript 编写的仓库。</td></tr></tbody></table><h2 id="按主题搜索"><a href="#按主题搜索" class="headerlink" title="按主题搜索"></a>按主题搜索</h2><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>topic:TOPIC</td><td>topic:jekyll匹配已归类为 “jekyll” 主题的仓库。</td></tr></tbody></table><h2 id="按更新时间或创建时间搜索"><a href="#按更新时间或创建时间搜索" class="headerlink" title="按更新时间或创建时间搜索"></a>按更新时间或创建时间搜索</h2><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>pushed:&gt;时间 关键字</td><td>pushed:&gt; 2019-04-01 go</td></tr><tr><td>created:&gt;时间 关键字</td><td>pushed:&gt; 2019-04-01 go</td></tr></tbody></table><h2 id="按开源协议搜索"><a href="#按开源协议搜索" class="headerlink" title="按开源协议搜索"></a>按开源协议搜索</h2><table><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td>license:&gt;协议 关键字</td><td>license:apache-2.0 go</td></tr></tbody></table><p><strong>以上查询条件可组合使用，空格隔开</strong><br><strong>以上是比较常用的搜索用法，详细的访问</strong><a href="https://help.github.com/cn/github/searching-for-information-on-github/searching-for-repositories" target="_blank" rel="noopener">搜索仓库</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;github搜索技巧&quot;&gt;&lt;a href=&quot;#github搜索技巧&quot; class=&quot;headerlink&quot; title=&quot;github搜索技巧&quot;&gt;&lt;/a&gt;github搜索技巧&lt;/h1&gt;&lt;h2 id=&quot;按仓库名称、说明或自述文件内容搜索&quot;&gt;&lt;a href=&quot;#按仓库名
      
    
    </summary>
    
    
      <category term="git" scheme="http://wangyangyangisme.github.io/categories/git/"/>
    
    
      <category term="git" scheme="http://wangyangyangisme.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>json时间格式化</title>
    <link href="http://wangyangyangisme.github.io/2020/01/22/golang-json%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    <id>http://wangyangyangisme.github.io/2020/01/22/golang-json时间格式化/</id>
    <published>2020-01-22T05:44:36.000Z</published>
    <updated>2020-01-22T06:03:09.428Z</updated>
    
    <content type="html"><![CDATA[<h1 id="json时间格式化"><a href="#json时间格式化" class="headerlink" title="json时间格式化"></a>json时间格式化</h1><h2 id="Gorm-JSON-时间格式化"><a href="#Gorm-JSON-时间格式化" class="headerlink" title="Gorm JSON 时间格式化"></a>Gorm JSON 时间格式化</h2><p>JSON 解析与扩展已有类型</p><p>Go 语言是没有完整的 OOP 对象模型的，在 Golang 的世界里没有继承，只有组合和接口，并且是松散的接口结构，不强制声明实现接口。通过对结构体的组合对现有对象进行扩展也是很便利的，参考 interface &amp; struct 接口与结构体。</p><p>单一继承关系解决了 is-a  也就是定义问题，因此可以把子类当做父类来对待。但对于父类不同但又具有某些共同行为的数据，单一继承就不能解决了，C++  采取了多继承这种复杂的方式。GO 采取的组合方式更贴近现实世界的网状结构，不同于继承，GO  语言的接口是松散的结构，它不和定义绑定。从这一点上来说，Duck Type 相比传统的 extends  是更加松耦合的方式，可以同时从多个维度对数据进行抽象，找出它们的共同点，使用同一套逻辑来处理。</p><p>注意 People.Name 成员首字母大写，否则不会导出，解析 JSON 时不会正确赋值。 如果想在一个包中访问另一个包中结构体的字段，则必须是大写字母开头的变量，即可导出的变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="comment">// "database/sql/driver"</span></span><br><span class="line">    <span class="string">"encoding/json"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> People <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span> <span class="string">`json:"name"`</span></span><br><span class="line">    Time TimeNormal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    js := <span class="string">`&#123;</span></span><br><span class="line"><span class="string">            "name":"Aob"</span></span><br><span class="line"><span class="string">        &#125;`</span></span><br><span class="line">    <span class="keyword">var</span> p People</span><br><span class="line">    err := json.Unmarshal([]<span class="keyword">byte</span>(js), &amp;p)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"err: "</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(<span class="string">"people: "</span>, p)</span><br><span class="line"></span><br><span class="line">    p.Time = TimeNormal&#123;time.Now()&#125;</span><br><span class="line">    data, err := json.Marshal(p)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"JSON marshaling failed: %s"</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">"JSON: %s\n"</span>, data)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// type TimeNormal time.Time // 别名方式扩展</span></span><br><span class="line"><span class="keyword">type</span> TimeNormal <span class="keyword">struct</span> &#123; <span class="comment">// 内嵌方式（推荐）</span></span><br><span class="line">    time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t TimeNormal)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    <span class="comment">// tune := fmt.Sprintf(`"%s"`, t.Format("2006-01-02 15:04:05"))</span></span><br><span class="line">    tune := t.Format(<span class="string">`"2006-01-02 15:04:05"`</span>)</span><br><span class="line">    <span class="keyword">return</span> []<span class="keyword">byte</span>(tune), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GO 的 time 包中实现 json.Marshaler 接口的序列化方法 MarshalJSON 指定 RFC3339Nano 格式：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MarshalJSON implements the json.Marshaler interface.</span></span><br><span class="line"><span class="comment">// The time is a quoted string in RFC 3339 format, with sub-second precision added if present.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t Time)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> y := t.Year(); y &lt; <span class="number">0</span> || y &gt;= <span class="number">10000</span> &#123;</span><br><span class="line">        <span class="comment">// RFC 3339 is clear that years are 4 digits exactly.</span></span><br><span class="line">        <span class="comment">// See golang.org/issue/4556#c15 for more discussion.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">"Time.MarshalJSON: year outside of range [0,9999]"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>, <span class="built_in">len</span>(RFC3339Nano)+<span class="number">2</span>)</span><br><span class="line">    b = <span class="built_in">append</span>(b, <span class="string">'"'</span>)</span><br><span class="line">    b = t.AppendFormat(b, RFC3339Nano)</span><br><span class="line">    b = <span class="built_in">append</span>(b, <span class="string">'"'</span>)</span><br><span class="line">    <span class="keyword">return</span> b, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以使用格式化函数进行转换，下面是12H、24H两种格式的转换，年份和小时格式代码分别是06、03，使用4位数年份就是 2006，使用24H制就是 15：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">time</span><span class="selector-class">.Now</span>()<span class="selector-class">.Format</span>("06<span class="selector-tag">-01-02</span> 03<span class="selector-pseudo">:04</span><span class="selector-pseudo">:05")</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.Now</span>()<span class="selector-class">.Format</span>("2006<span class="selector-tag">-01-02</span> 15<span class="selector-pseudo">:04</span><span class="selector-pseudo">:05")</span></span><br></pre></td></tr></table></figure><p>也可以直接给 Format 函数传入格式类型：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">time</span><span class="selector-class">.ANSIC</span>:       <span class="selector-tag">Fri</span> <span class="selector-tag">Aug</span>  2 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02</span> 2019</span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.UnixDate</span>:    <span class="selector-tag">Fri</span> <span class="selector-tag">Aug</span>  2 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02</span> <span class="selector-tag">CST</span> 2019</span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC1123</span>:     <span class="selector-tag">Fri</span>, 02 <span class="selector-tag">Aug</span> 2019 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02</span> <span class="selector-tag">CST</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC3339</span>:     2019<span class="selector-tag">-08-02T23</span><span class="selector-pseudo">:02</span><span class="selector-pseudo">:02+08</span><span class="selector-pseudo">:00</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC822</span>:      02 <span class="selector-tag">Aug</span> 19 23<span class="selector-pseudo">:02</span> <span class="selector-tag">CST</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC850</span>:      <span class="selector-tag">Friday</span>, 02<span class="selector-tag">-Aug-19</span> 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02</span> <span class="selector-tag">CST</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC1123Z</span>:    <span class="selector-tag">Fri</span>, 02 <span class="selector-tag">Aug</span> 2019 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02</span> +0800</span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC3339Nano</span>: 2019<span class="selector-tag">-08-02T23</span><span class="selector-pseudo">:02</span><span class="selector-pseudo">:02.6227628+08</span><span class="selector-pseudo">:00</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.RFC822Z</span>:     02 <span class="selector-tag">Aug</span> 19 23<span class="selector-pseudo">:02</span> +0800</span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.Kitchen</span>:     11<span class="selector-pseudo">:02PM</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.Stamp</span>:       <span class="selector-tag">Aug</span>  2 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.StampMicro</span>:  <span class="selector-tag">Aug</span>  2 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02.629703</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.StampMilli</span>:  <span class="selector-tag">Aug</span>  2 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02.631</span></span><br><span class="line"><span class="selector-tag">time</span><span class="selector-class">.StampNano</span>:   <span class="selector-tag">Aug</span>  2 23<span class="selector-pseudo">:02</span><span class="selector-pseudo">:02.631646200</span></span><br></pre></td></tr></table></figure><p>Go 不允许在包外新增或重写方法 cannot define new methods on non-local  type，只能通过在外部定义别名或者内嵌结构体进行内置对象的扩展。需要注意别名方式只能使用原始类型的字段，不能使用其方法，只重写字段的时候可以考虑使用。</p><p>在 gorm 中只重写 MarshalJSON 是不够的，因为 ORM 在插入记录、读取记录时需要的相应执行 Value 和 Scan  方法，需要引入 database/sql/driver 包。为了方便使用，可以定义一个 BaseModel 来替代 gorm.Model。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"database/sql/driver"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TimeNormal <span class="keyword">struct</span> &#123; <span class="comment">// 内嵌方式（推荐）</span></span><br><span class="line">    time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t TimeNormal)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    <span class="comment">// tune := fmt.Sprintf(`"%s"`, t.Format("2006-01-02 15:04:05"))</span></span><br><span class="line">    tune := t.Format(<span class="string">`"2006-01-02 15:04:05"`</span>)</span><br><span class="line">    <span class="keyword">return</span> []<span class="keyword">byte</span>(tune), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Value insert timestamp into mysql need this function.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t TimeNormal)</span> <span class="title">Value</span><span class="params">()</span> <span class="params">(driver.Value, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> zeroTime time.Time</span><br><span class="line">    <span class="keyword">if</span> t.Time.UnixNano() == zeroTime.UnixNano() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t.Time, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Scan valueof time.Time</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TimeNormal)</span> <span class="title">Scan</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    value, ok := v.(time.Time)</span><br><span class="line">    <span class="keyword">if</span> ok &#123;</span><br><span class="line">        *t = TimeNormal&#123;Time: value&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fmt.Errorf(<span class="string">"can not convert %v to timestamp"</span>, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> BaseModel <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// gorm.Model</span></span><br><span class="line">    ID        <span class="keyword">uint</span>        <span class="string">`gorm:"primary_key" json:"id"`</span></span><br><span class="line">    CreatedAt TimeNormal  <span class="string">`json:"createdAt"`</span></span><br><span class="line">    UpdatedAt TimeNormal  <span class="string">`json:"updatedAt"`</span></span><br><span class="line">    DeletedAt *TimeNormal <span class="string">`sql:"index" json:"-"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是别名方式扩展的核心代码示例，注意类型的转，类型断言和返回类型。访问时间对象时，内嵌方式是 t.Time，使用别名方式后时类型转换  time.Time(t)，而且 Scan 方法中不能直接通过类型断言 v.(TimeNormal) 将接口转换到  TimeNormal。另外，设置别名后，TimeNormal 并不能直接使用原始类型 time.Time  的各种方法和成员，需要先进行类型转换。显然，通过结构体匿名嵌入的方式并不存在这样的不便，这种方式可以很好的保持对象的原有性质。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> TimeNormal time.Time <span class="comment">// 别名方式扩展</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t TimeNormal)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    ti := time.Time(t)</span><br><span class="line">    tune := ti.Format(<span class="string">`"2006-01-02 15:04:05"`</span>)</span><br><span class="line">    <span class="keyword">return</span> []<span class="keyword">byte</span>(tune), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Value insert timestamp into mysql need this function.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t TimeNormal)</span> <span class="title">Value</span><span class="params">()</span> <span class="params">(driver.Value, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> zeroTime time.Time</span><br><span class="line">    ti := time.Time(t)</span><br><span class="line">    <span class="keyword">if</span> ti.UnixNano() == zeroTime.UnixNano() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ti, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Scan valueof time.Time</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TimeNormal)</span> <span class="title">Scan</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    ti, ok := v.(time.Time) <span class="comment">// NOT directly assertion v.(TimeNormal)</span></span><br><span class="line">    <span class="keyword">if</span> ok &#123;</span><br><span class="line">        *t = TimeNormal(ti)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fmt.Errorf(<span class="string">"can not convert %v to timestamp"</span>, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Xorm-JSON-时间格式化"><a href="#Xorm-JSON-时间格式化" class="headerlink" title="Xorm JSON 时间格式化"></a>Xorm JSON 时间格式化</h2><p>golang默认的time.Time类型在转为json格式时不是常用的2019-05-08 10:00:01这种格式，解决办法是自定义一个时间类型，例如type myTime time.Time ，然后针对myTime实现Marshaler接口的MarshalJSON方法，例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> models</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"database/sql/driver"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> localDateTimeFormat <span class="keyword">string</span> = <span class="string">"2006-01-02 15:04:05"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> LocalTime time.Time</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l LocalTime)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">    t := time.Time(l)</span><br><span class="line">b := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>, <span class="built_in">len</span>(localDateTimeFormat)+<span class="number">2</span>)</span><br><span class="line">b = <span class="built_in">append</span>(b, <span class="string">'"'</span>)</span><br><span class="line">b = time.Time(l).AppendFormat(b, localDateTimeFormat)</span><br><span class="line">    <span class="keyword">if</span> !t.Equal(time.Time&#123;&#125;) &#123;</span><br><span class="line">b = t.AppendFormat(b, localDateTimeFormat)</span><br><span class="line">&#125;</span><br><span class="line">b = <span class="built_in">append</span>(b, <span class="string">'"'</span>)</span><br><span class="line"><span class="keyword">return</span> b, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LocalTime)</span> <span class="title">UnmarshalJSON</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">now, err := time.ParseInLocation(<span class="string">`"`</span>+localDateTimeFormat+<span class="string">`"`</span>, <span class="keyword">string</span>(b), time.Local)</span><br><span class="line">*l = LocalTime(now)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码在网上随手一搜就能找到，没有什么困难的，接下来的才是本篇文章的重点，这玩意结合xorm使用时，特别是字段类型为*LocalTime的时候才需要折腾一番。</p><p>下面是我的对应数据库表结构的struct 定义，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ServerInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">ServerInfoId             <span class="keyword">string</span>     <span class="string">`xorm:"varchar(32) pk server_info_id"`</span></span><br><span class="line">CreatedAt                LocalTime  <span class="string">`xorm:"timestamp created"`</span></span><br><span class="line">UpdatedAt                LocalTime  <span class="string">`xorm:"timestamp updated"`</span></span><br><span class="line">DeletedAt                *LocalTime <span class="string">`xorm:"timestamp deleted index"`</span></span><br><span class="line">OrgId                    <span class="keyword">string</span>     <span class="string">`xorm:"varchar(100) org_id" json:"orgId"`</span>                                                </span><br><span class="line">ServerIp                 <span class="keyword">string</span>     <span class="string">`xorm:"varchar(128) server_ip" json:"serverIp"`</span>                                          </span><br><span class="line">ServerNameDesc           <span class="keyword">string</span>     <span class="string">`xorm:"varchar(500) server_name_desc" json:"serverNameDesc"`</span>                             </span><br><span class="line">ServerTimeNow            LocalTime  <span class="string">`xorm:"timestamp server_time" json:"serverTime"`</span>                                         </span><br><span class="line">DataReceiveTime          LocalTime  <span class="string">`xorm:"timestamp data_receive_time" sql:"DEFAULT:current_timestamp" json:"dataRecvTime"`</span> </span><br><span class="line">LastUploadDataTime       *LocalTime <span class="string">`xorm:"timestamp last_upload_data_time" json:"lastUploadDataTime"`</span>                       </span><br><span class="line">LastCheckTime            *LocalTime <span class="string">`xorm:"timestamp last_check_time" json:"lastCheckTime"`</span>                                  </span><br><span class="line">LastErrorTime            *LocalTime <span class="string">`xorm:"timestamp last_error_time" json:"lastErrorTime"`</span>                                  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意上面的字段类型，既有LocalTime类型的，又有*LocalTime类型的，*LocalTime是考虑到有时候数据值可能为NULL，即字段值可能为空的情况。</p><p>xorm不知道如何为LocalTime这个自定义类型进行赋值或者取值，因此需要实现xorm的core包中的Conversion接口，这个接口的定义如下：</p><p>注意，坑已经隐藏在上面的接口定义中了，过一会说。</p><p>整个完整的自定义时间类型的代码变成了下面的这样：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"database/sql/driver"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> localDateTimeFormat <span class="keyword">string</span> = <span class="string">"2006-01-02 15:04:05"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> LocalTime time.Time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l LocalTime)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">t := time.Time(l)</span><br><span class="line">b := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>, <span class="built_in">len</span>(localDateTimeFormat)+<span class="number">2</span>)</span><br><span class="line">b = <span class="built_in">append</span>(b, <span class="string">'"'</span>)</span><br><span class="line"><span class="keyword">if</span> !t.Equal(time.Time&#123;&#125;) &#123;</span><br><span class="line">b = t.AppendFormat(b, localDateTimeFormat)</span><br><span class="line">&#125;</span><br><span class="line">b = <span class="built_in">append</span>(b, <span class="string">'"'</span>)</span><br><span class="line"><span class="keyword">return</span> b, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LocalTime)</span> <span class="title">UnmarshalJSON</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">now, err := time.ParseInLocation(<span class="string">`"`</span>+localDateTimeFormat+<span class="string">`"`</span>, <span class="keyword">string</span>(b), time.Local)</span><br><span class="line">*l = LocalTime(now)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l LocalTime)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> time.Time(l).Format(localDateTimeFormat)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l LocalTime)</span><span class="title">Now</span><span class="params">()</span><span class="params">(LocalTime)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> LocalTime(time.Now())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l LocalTime)</span><span class="title">ParseTime</span><span class="params">(t time.Time)</span><span class="params">(LocalTime)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> LocalTime(t)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(j LocalTime)</span> <span class="title">format</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> time.Time(j).Format(localDateTimeFormat)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(j LocalTime)</span> <span class="title">MarshalText</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">byte</span>(j.format()), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LocalTime)</span> <span class="title">FromDB</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == b || <span class="built_in">len</span>(b) == <span class="number">0</span> &#123;</span><br><span class="line">l = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> now time.Time</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">now, err = time.ParseInLocation(localDateTimeFormat, <span class="keyword">string</span>(b), time.Local)</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == err &#123;</span><br><span class="line">*l = LocalTime(now)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">now, err = time.ParseInLocation(time.RFC3339, <span class="keyword">string</span>(b), time.Local)</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == err &#123;</span><br><span class="line">*l = LocalTime(now)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"自己定义个layout日期格式处理一下数据库里面的日期型数据解析!"</span>)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *LocalTime)</span> <span class="title">Scan</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Should be more strictly to check this type.</span></span><br><span class="line">vt, err := time.Parse(localDateTimeFormat, <span class="keyword">string</span>(v.([]<span class="keyword">byte</span>)))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">*t = LocalTime(vt)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LocalTime)</span> <span class="title">ToDB</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == l &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">byte</span>(time.Time(*l).Format(localDateTimeFormat)), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LocalTime)</span> <span class="title">Value</span><span class="params">()</span> <span class="params">(driver.Value, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span>  <span class="literal">nil</span>==l &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> time.Time(*l).Format(localDateTimeFormat), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，要是数据库的字段内容都有值的话插入和更新应该是没有什么问题，但是*LocalTime字段的值为nil的话问题就开始出现了，上面说了，ToDB()方法的返回值类型为[]byte，当字段值为nil时，返回nil看上去一切正常，但是xorm打印出来的sql语句数据值是下面这个样子的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x30</span>,<span class="number">0x3a</span>,<span class="number">0x31</span>,<span class="number">0x38</span>,<span class="number">0x3a</span>,<span class="number">0x35</span>&#125;,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,[]<span class="keyword">uint8</span>(<span class="literal">nil</span>),[]<span class="keyword">uint8</span>(<span class="literal">nil</span>)</span><br></pre></td></tr></table></figure><p>这个[]uint8(nil)就是*LocalTime值为nil时的情况，数据库驱动是不认可[]uint8(nil)这种数据去写给timestamp类型字段的，问题的根源就是ToDB方法的返回值类型为[]byte，既然是这样，就需要我们人为的把[]uint8(nil)这种类型改为interface(nil)类型，数据库驱动会识别interface(nil)为NULL值，修改代码xorm\statement.go第322行，把原来的val=data改成下面的样子：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> structConvert,ok := fieldValue.Interface().(core.Conversion);ok &#123;</span><br><span class="line">    data,err := structConvert.ToDB()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        engine.logger.Error(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// val = data</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">nil</span> == data &#123;</span><br><span class="line">            val=<span class="literal">nil</span> <span class="comment">// []uint8(nil)改变为interface(nil)</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            val=data</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是把val=data改为 if nil==data { val=nil } else {val=data} ，看上去逻辑没有什么变化，但是给val=nil赋值的时候，val的类型就从[]uint8(nil)变成了interface(nil)了，这样数据库驱动就可以正确处理空值了。</p><p>除了需要修改xorm\statement.go文件的内容，还需要修改xorm\session_convert.go的第558行，增加以下代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> filedConvert,ok := fieldValue.Interface().(core.Conversion);ok &#123;</span><br><span class="line">    data,err := fieldConvert.ToDB()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>,err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> col.SQLType.IsBlob() &#123;</span><br><span class="line">        <span class="keyword">return</span> data,<span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fix when pointer type value is null,added by peihexian,2019-05-07</span></span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span>==data &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>,<span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(data),<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是增加下面的代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//fix when pointer type value is null,added by peihexian,2019-05-07</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span>==data &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">nil</span>,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之所以加这个代码是因为xorm作者没有考虑指针类型字段值为nil的情况，xorm对有转换的字段要么当成数字，要么当成了字符串，这两种对于NULL类型的值都不适用，所以需要增加if nil==data return nil,nil这样的代码，还是把数据值组织成interface(nil)去给数据库驱动去处理。</p><p>另外还有一个地方，是session_convert.go 第556行，同样需要增加</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">nil</span>==data &#123;  <span class="comment">//edit by peihexian 2019.06.19</span></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">nil</span>,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是加完以后的样子</p><p>到这里，对xorm做了几处小的修改，自定义日期的问题及json格式化问题完美解决。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> filedConvert,ok := fieldValue.Interface().(core.Conversion);ok &#123;</span><br><span class="line">    data,err := fieldConvert.ToDB()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>,err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> col.SQLType.IsBlob() &#123;</span><br><span class="line">        <span class="keyword">return</span> data,<span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span>==data &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>,<span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(data),<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;json时间格式化&quot;&gt;&lt;a href=&quot;#json时间格式化&quot; class=&quot;headerlink&quot; title=&quot;json时间格式化&quot;&gt;&lt;/a&gt;json时间格式化&lt;/h1&gt;&lt;h2 id=&quot;Gorm-JSON-时间格式化&quot;&gt;&lt;a href=&quot;#Gorm-JSON-
      
    
    </summary>
    
    
      <category term="golang" scheme="http://wangyangyangisme.github.io/categories/golang/"/>
    
    
  </entry>
  
  <entry>
    <title>PO BO VO DTO POJO DAO DO概念</title>
    <link href="http://wangyangyangisme.github.io/2020/01/22/java-PO%20BO%20VO%20DTO%20POJO%20DAO%20DO%E6%A6%82%E5%BF%B5/"/>
    <id>http://wangyangyangisme.github.io/2020/01/22/java-PO BO VO DTO POJO DAO DO概念/</id>
    <published>2020-01-22T03:50:36.000Z</published>
    <updated>2020-01-22T05:41:20.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PO-BO-VO-DTO-POJO-DAO-DO概念"><a href="#PO-BO-VO-DTO-POJO-DAO-DO概念" class="headerlink" title="PO BO VO DTO POJO DAO DO概念"></a>PO BO VO DTO POJO DAO DO概念</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><strong>PO</strong> 是<code>Persistant Object</code>的缩写，用于表示数据库中的一条记录映射成的 java 对象。PO 仅仅用于表示数据，没有任何数据操作。通常遵守 Java Bean 的规范，拥有 getter/setter 方法。</p><p><strong>DAO</strong>是 <code>Data Access Object</code>的缩写，用于表示一个数据访问对象。使用 DAO 访问数据库，包括插入、更新、删除、查询等操作，与 PO 一起使用。DAO 一般在持久层，完全封装数据库操作，对外暴露的方法使得上层应用不需要关注数据库相关的任何信息。</p><p><strong>VO</strong>是<code>Value Object</code>的缩写，用于表示一个与前端进行交互的 java 对象。有的朋友也许有疑问，这里可不可以使用 PO 传递数据？实际上，这里的 VO 只包含前端需要展示的数据即可，对于前端不需要的数据，比如数据创建和修改的时间等字段，出于减少传输数据量大小和保护数据库结构不外泄的目的，不应该在 VO 中体现出来。通常遵守 Java Bean 的规范，拥有 getter/setter 方法。</p><p><strong>DTO</strong>是<code>Data Transfer Object</code>的缩写，用于表示一个数据传输对象。DTO 通常用于不同服务或服务不同分层之间的数据传输。DTO 与 VO 概念相似，并且通常情况下字段也基本一致。但 DTO 与 VO 又有一些不同，这个不同主要是设计理念上的，比如 API 服务需要使用的 DTO 就可能与 VO 存在差异。通常遵守 Java Bean 的规范，拥有 getter/setter 方法。</p><p><strong>BO</strong>是<code>Business Object</code>的缩写，用于表示一个业务对象。BO 包括了业务逻辑，常常封装了对 DAO、RPC 等的调用，可以进行 PO 与 VO/DTO 之间的转换。BO 通常位于业务层，要区别于直接对外提供服务的服务层：BO 提供了基本业务单元的基本业务操作，在设计上属于被服务层业务流程调用的对象，一个业务流程可能需要调用多个 BO 来完成。</p><p><strong>POJO</strong>是<code>Plain Ordinary Java Object</code>的缩写，表示一个简单 java 对象。上面说的 PO、VO、DTO 都是典型的 POJO。而 DAO、BO 一般都不是 POJO，只提供一些调用方法。</p><p><strong>DO</strong>是<code>Domain Object</code>的缩写，用于表示一个领域对象，就是从现实世界中抽象出来的有形或无形的业务实体。</p><p>VO与DTO的区别：当我们表示性别的时候，为了展示方便，在VO就是男、女，而在DTO当中为了实现方便传输的是1或者2这样的代码。</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/java/java-vo-dto-do.jpg"></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>以一个实例来探讨下 POJO 的使用。假设我们有一个面试系统，数据库中存储了很多面试题，通过 web 和 API 提供服务。可能会做如下的设计：</p><p>数据表：表中的面试题包括编号、题目、选项、答案、创建时间、修改时间；</p><p>PO：包括题目、选项、答案、创建时间、修改时间；</p><p>VO：题目、选项、答案、上一题URL、下一题URL；</p><p>DTO：编号、题目、选项、答案、上一题编号、下一题编号；</p><p>DAO：数据库增删改查方法；</p><p>BO：业务基本操作。</p><p>可以看到，进行 POJO 划分后，我们得到了一个设计良好的架构，各层数据对象的修改完全可以控制在有限的范围内。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PO-BO-VO-DTO-POJO-DAO-DO概念&quot;&gt;&lt;a href=&quot;#PO-BO-VO-DTO-POJO-DAO-DO概念&quot; class=&quot;headerlink&quot; title=&quot;PO BO VO DTO POJO DAO DO概念&quot;&gt;&lt;/a&gt;PO BO VO
      
    
    </summary>
    
    
      <category term="java" scheme="http://wangyangyangisme.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>N+1优化</title>
    <link href="http://wangyangyangisme.github.io/2020/01/20/mysql-N+1%E4%BC%98%E5%8C%96/"/>
    <id>http://wangyangyangisme.github.io/2020/01/20/mysql-N+1优化/</id>
    <published>2020-01-20T06:15:30.000Z</published>
    <updated>2020-01-20T06:23:15.444Z</updated>
    
    <content type="html"><![CDATA[<h1 id="N-1优化"><a href="#N-1优化" class="headerlink" title="N+1优化"></a>N+1优化</h1><h2 id="什么是N-1问题"><a href="#什么是N-1问题" class="headerlink" title="什么是N+1问题"></a>什么是N+1问题</h2><p>A对象关联B对象，A对象进行列表展示时需显示B对象的关联属性，这样需要先用一条sql将N个A对象查询出来，再用N条sql将这些对象的关联属性查询出来。违背了减少数据库交互原则，影响性能。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>连接查询，在查询A对象的时候，将关联的B对象查询出来。</p><p><strong>缺点</strong>：</p><ol><li><p>连接的表增加，sql性能下降；</p></li><li><p>如果N个A对象关联的是同一个B对象，会使结果集非常庞大，返回结果集需要消耗性能，并且影响排序性能。比如100个员工对象都关联ID为1的部门，本来部门的数据只需出现一次，这里为了避免N+1,重复出现100次。</p></li></ol><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>A表中设置冗余字段。</p><p><strong>缺点</strong>：更新B表需要更新A表。更新A表时需要增加修改B对象属性的逻辑。</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>性能最佳，1+1查询。</p><p>先用sql查出所有员工对象查询出，将他们关联的部门ID放到一个集合中，再发一条sql，将所有部门查出，之后在程序中将部门信息设置到员工对象中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;N-1优化&quot;&gt;&lt;a href=&quot;#N-1优化&quot; class=&quot;headerlink&quot; title=&quot;N+1优化&quot;&gt;&lt;/a&gt;N+1优化&lt;/h1&gt;&lt;h2 id=&quot;什么是N-1问题&quot;&gt;&lt;a href=&quot;#什么是N-1问题&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://wangyangyangisme.github.io/categories/mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>xorm生成代码</title>
    <link href="http://wangyangyangisme.github.io/2020/01/10/golang-xorm%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/"/>
    <id>http://wangyangyangisme.github.io/2020/01/10/golang-xorm生成代码/</id>
    <published>2020-01-09T16:10:12.000Z</published>
    <updated>2020-01-15T06:08:25.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xorm生成代码"><a href="#xorm生成代码" class="headerlink" title="xorm生成代码"></a>xorm生成代码</h1><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitea.com/xorm/cmd.git</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ../cmd/xorm</span><br><span class="line">go build</span><br></pre></td></tr></table></figure><h2 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xorm reverse mysql "root:123456@tcp(127.0.0.1:3306)/doss" templates/goxorm ./model</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p><code>cmd\xorm\templates\goxorm\config</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">语言</span></span><br><span class="line">lang=go</span><br><span class="line"><span class="meta">#</span><span class="bash">生成json tag(0:不生成 1:生成)</span></span><br><span class="line">genJson=1</span><br><span class="line">prefix=cos_</span><br><span class="line"><span class="meta">#</span><span class="bash">当genJson=1时，忽略json字段(数据库字段，逗号隔开)</span></span><br><span class="line">ignoreColumnsJSON=detail</span><br><span class="line"><span class="meta">#</span><span class="bash">对应数据库字段(逗号隔开)</span></span><br><span class="line">created=created_at</span><br><span class="line"><span class="meta">#</span><span class="bash">对应数据库字段(逗号隔开)</span></span><br><span class="line">updated=updated_at</span><br><span class="line"><span class="meta">#</span><span class="bash">对应数据库字段(逗号隔开)</span></span><br><span class="line">deleted=deleted_at</span><br></pre></td></tr></table></figure><p>设置<code>created</code>，<code>updated</code>，<code>deleted</code>后，<code>CreatedAt</code>，<code>UpdatedAt</code>会生成<code>created</code>，<code>updated</code>。<code>ignoreColumnsJSON</code>设置后<code>Detail</code>变成<code>json:&quot;-&quot;</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> LoginLog <span class="keyword">struct</span> &#123;</span><br><span class="line">Id        <span class="keyword">int64</span>     <span class="string">`json:"id" xorm:"pk comment('系统编号') BIGINT(20)"`</span></span><br><span class="line">CreatedAt time.Time <span class="string">`json:"created_at" xorm:"not null default '0000-00-00 00:00:00' created comment('创建时间') DATETIME"`</span></span><br><span class="line">UpdatedAt time.Time <span class="string">`json:"updated_at" xorm:"not null default '0000-00-00 00:00:00' updated comment('更新时间') DATETIME"`</span></span><br><span class="line">UserId    <span class="keyword">int64</span>     <span class="string">`json:"user_id" xorm:"not null comment('用户ID') BIGINT(20)"`</span></span><br><span class="line">Agent     <span class="keyword">string</span>    <span class="string">`json:"agent" xorm:"not null comment('登录终端') VARCHAR(50)"`</span></span><br><span class="line">Os        <span class="keyword">string</span>    <span class="string">`json:"os" xorm:"not null default '' comment('操作系统') VARCHAR(50)"`</span></span><br><span class="line">Ip        <span class="keyword">string</span>    <span class="string">`json:"ip" xorm:"not null default '' comment('登录IP') VARCHAR(50)"`</span></span><br><span class="line">Loc       <span class="keyword">string</span>    <span class="string">`json:"loc" xorm:"not null default '' comment('IP所在地') VARCHAR(50)"`</span></span><br><span class="line">Status    <span class="keyword">int</span>       <span class="string">`json:"status" xorm:"not null default 0 comment('登录状态(1:成功;2:失败)') TINYINT(4)"`</span></span><br><span class="line">Detail    <span class="keyword">string</span>    <span class="string">`json:"-" xorm:"not null default '' comment('详细信息') VARCHAR(50)"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="移除注释"><a href="#移除注释" class="headerlink" title="移除注释"></a>移除注释</h2><p>修改源码<code>reverse.go</code>，需要修改两处地方</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &amp;&amp; !info.IsDir() &#123;</span><br><span class="line">configs = loadConfig(cfgPath)</span><br><span class="line"><span class="keyword">if</span> l, ok := configs[<span class="string">"lang"</span>]; ok &#123;</span><br><span class="line">lang = l</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"genJson"</span>]; ok &#123;</span><br><span class="line">genJson, err = strconv.ParseBool(j)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//[SWH|+]</span></span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"prefix"</span>]; ok &#123;</span><br><span class="line">prefix = j</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"ignoreColumnsJSON"</span>]; ok &#123;</span><br><span class="line">ignoreColumnsJSON = strings.Split(j, <span class="string">","</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"created"</span>]; ok &#123;</span><br><span class="line">created = strings.Split(j, <span class="string">","</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"updated"</span>]; ok &#123;</span><br><span class="line">updated = strings.Split(j, <span class="string">","</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"deleted"</span>]; ok &#123;</span><br><span class="line">deleted = strings.Split(j, <span class="string">","</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加下面3行代码</span></span><br><span class="line"><span class="keyword">if</span> j, ok := configs[<span class="string">"supportComment"</span>]; ok &#123;</span><br><span class="line">supportComment, err = strconv.ParseBool(j)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> langTmpl, ok = langTmpls[lang]; !ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"Unsupported programing language"</span>, lang)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">os.MkdirAll(genDir, os.ModePerm)</span><br><span class="line"></span><br><span class="line"><span class="comment">//注释下面这行代码</span></span><br><span class="line"><span class="comment">//supportComment = (args[0] == "mysql" || args[0] == "mymysql")</span></span><br></pre></td></tr></table></figure><p>修改配置文件<code>cmd\xorm\templates\goxorm\config</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">语言</span></span><br><span class="line">lang=go</span><br><span class="line"><span class="meta">#</span><span class="bash">生成json tag(0:不生成 1:生成)</span></span><br><span class="line">genJson=1</span><br><span class="line">prefix=cos_</span><br><span class="line"><span class="meta">#</span><span class="bash">当genJson=1时，忽略json字段(数据库字段，逗号隔开)</span></span><br><span class="line">ignoreColumnsJSON=detail</span><br><span class="line"><span class="meta">#</span><span class="bash">对应数据库字段(逗号隔开)</span></span><br><span class="line">created=created_at</span><br><span class="line"><span class="meta">#</span><span class="bash">对应数据库字段(逗号隔开)</span></span><br><span class="line">updated=updated_at</span><br><span class="line"><span class="meta">#</span><span class="bash">对应数据库字段(逗号隔开)</span></span><br><span class="line">deleted=deleted_at</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">增加是否生成注释配置项</span></span><br><span class="line"><span class="meta">#</span><span class="bash">0:不生成 1:生成</span></span><br><span class="line">supportComment=0</span><br></pre></td></tr></table></figure><p>重新编译代码，重新生成</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> LoginLog <span class="keyword">struct</span> &#123;</span><br><span class="line">Id        <span class="keyword">int64</span>     <span class="string">`json:"id" xorm:"pk BIGINT(20)"`</span></span><br><span class="line">CreatedAt time.Time <span class="string">`json:"created_at" xorm:"not null default '0000-00-00 00:00:00' created DATETIME"`</span></span><br><span class="line">UpdatedAt time.Time <span class="string">`json:"updated_at" xorm:"not null default '0000-00-00 00:00:00' updated DATETIME"`</span></span><br><span class="line">UserId    <span class="keyword">int64</span>     <span class="string">`json:"user_id" xorm:"not null BIGINT(20)"`</span></span><br><span class="line">Agent     <span class="keyword">string</span>    <span class="string">`json:"agent" xorm:"not null VARCHAR(50)"`</span></span><br><span class="line">Os        <span class="keyword">string</span>    <span class="string">`json:"os" xorm:"not null default '' VARCHAR(50)"`</span></span><br><span class="line">Ip        <span class="keyword">string</span>    <span class="string">`json:"ip" xorm:"not null default '' VARCHAR(50)"`</span></span><br><span class="line">Loc       <span class="keyword">string</span>    <span class="string">`json:"loc" xorm:"not null default '' VARCHAR(50)"`</span></span><br><span class="line">Status    <span class="keyword">int</span>       <span class="string">`json:"status" xorm:"not null default 0 TINYINT(4)"`</span></span><br><span class="line">Detail    <span class="keyword">string</span>    <span class="string">`json:"detail" xorm:"not null default '' VARCHAR(50)"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xorm生成代码&quot;&gt;&lt;a href=&quot;#xorm生成代码&quot; class=&quot;headerlink&quot; title=&quot;xorm生成代码&quot;&gt;&lt;/a&gt;xorm生成代码&lt;/h1&gt;&lt;h2 id=&quot;下载源码&quot;&gt;&lt;a href=&quot;#下载源码&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="golang" scheme="http://wangyangyangisme.github.io/categories/golang/"/>
    
    
  </entry>
  
  <entry>
    <title>支付宝沙盒环境搭建</title>
    <link href="http://wangyangyangisme.github.io/2019/12/30/pay-%E6%94%AF%E4%BB%98%E5%AE%9D%E6%B2%99%E7%9B%92/"/>
    <id>http://wangyangyangisme.github.io/2019/12/30/pay-支付宝沙盒/</id>
    <published>2019-12-30T15:10:36.000Z</published>
    <updated>2020-02-27T07:15:28.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="支付宝沙盒环境搭建"><a href="#支付宝沙盒环境搭建" class="headerlink" title="支付宝沙盒环境搭建"></a>支付宝沙盒环境搭建</h1><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><p>在线工具:<a href="https://openhome.alipay.com/platform/demoManage.htm#/alipay.trade.wap.pay" target="_blank" rel="noopener">https://openhome.alipay.com/platform/demoManage.htm#/alipay.trade.wap.pay</a></p><p>密匙生成工具:<a href="https://ideservice.alipay.com/ide/getPluginUrl.htm?clientType=assistant&amp;platform=win&amp;channelType=WEB" target="_blank" rel="noopener">https://ideservice.alipay.com/ide/getPluginUrl.htm?clientType=assistant&amp;platform=win&amp;channelType=WEB</a></p><h2 id="支付宝开放平台"><a href="#支付宝开放平台" class="headerlink" title="支付宝开放平台"></a>支付宝开放平台</h2><p>登录蚂蚁金服开放平台:<a href="https://open.alipay.com/platform/home.htm" target="_blank" rel="noopener">https://open.alipay.com/platform/home.htm</a></p><p>注册开发者账号并登录</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay1.png"></p><h2 id="安装沙盒版支付宝APP"><a href="#安装沙盒版支付宝APP" class="headerlink" title="安装沙盒版支付宝APP"></a>安装沙盒版支付宝APP</h2><p>下载地址</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay3.png"></p><p>使用沙盒账号登陆，支付密码和登陆密码都是<code>111111</code>，可以在该页面给账号充值</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay6.png"></p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>得到商户应用私钥与商户应用公钥</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay4.png"></p><h2 id="获取支付宝公钥"><a href="#获取支付宝公钥" class="headerlink" title="获取支付宝公钥"></a>获取支付宝公钥</h2><p>设置应用公钥</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay2.png"></p><p>得到支付宝公钥</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay5.png"></p><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"github.com/smartwalle/alipay/v3"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> client *alipay.Client</span><br><span class="line"><span class="comment">// 公网ip</span></span><br><span class="line"><span class="keyword">var</span> notifyUrl = <span class="string">"http://xxx.xxx.xxx.xxx:5001/notify"</span> <span class="comment">// 异步回调</span></span><br><span class="line"><span class="keyword">var</span> returnUrl = <span class="string">"http://xxx.xxx.xxx.xxx:5001/return"</span> <span class="comment">// 同步回调</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Init</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> privateKey = <span class="string">"应用私钥"</span></span><br><span class="line"><span class="keyword">var</span> appId = <span class="string">"201610xxxxxxxxxx"</span></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">client, err = alipay.New(appId, privateKey, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = client.LoadAliPayPublicKey(<span class="string">"支付宝公钥"</span>) </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// qr_code_timeout_express：允许用户最晚付款时间，从接口调用成功开始计时，最小值2m；传值1m扫码支付会直接报二维码已失效，二维码有效时间是2小时，所以该参数设置值超过2h也是无效值；</span></span><br><span class="line"><span class="comment">// timeout_express：最小值为1m，最大值为15t，不传默认15t；</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//gin.SetMode(gin.ReleaseMode)</span></span><br><span class="line">err := Init()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    router := gin.Default()</span><br><span class="line">    router.GET(<span class="string">"/wap_pay/:id"</span>, WapPay)</span><br><span class="line">router.GET(<span class="string">"/page_pay/:id"</span>, PagePay)</span><br><span class="line">router.GET(<span class="string">"/app_pay/:id"</span>, AppPay)</span><br><span class="line">router.GET(<span class="string">"/face_pay/:id"</span>, FacePay)</span><br><span class="line">router.GET(<span class="string">"/query/:id"</span>, QueryOrder)</span><br><span class="line">router.GET(<span class="string">"/cancel/:id"</span>, CancelOrder)</span><br><span class="line">router.GET(<span class="string">"/wap_pay_qr/:id"</span>, WapPayQr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.GET(<span class="string">"/return"</span>, Return)</span><br><span class="line">router.POST(<span class="string">"/notify"</span>, Notify)</span><br><span class="line"></span><br><span class="line">    err = router.Run(<span class="string">":5002"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WapPay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeWapPay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"QUICK_WAP_WAY"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "7d"//输入支付密码订单创建超时时间开始计算，如果用户出现余额不足，才会在手机端显示等待买家付款。 然后超时关闭。  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">url, err := client.TradeWapPay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> payURL = url.String()</span><br><span class="line">fmt.Println(payURL)</span><br><span class="line"><span class="comment">// 这个 payURL 即是用于支付的 URL，可将输出的内容复制，到浏览器中访问该 URL 即可打开支付页面。</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"test"</span>)</span><br><span class="line">c.Redirect(<span class="number">302</span>,payURL)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WapPayQr</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeWapPay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"QUICK_WAP_WAY"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "7d"//输入支付密码订单创建超时时间开始计算，如果用户出现余额不足，才会在手机端显示等待买家付款。 然后超时关闭。  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">url, err := client.TradeWapPay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> payURL = url.String()</span><br><span class="line">fmt.Println(payURL)</span><br><span class="line"><span class="comment">// 这个 payURL 即是用于支付的 URL，可将输出的内容复制，到浏览器中访问该 URL 即可打开支付页面。</span></span><br><span class="line"></span><br><span class="line">obj := qrcodeTerminal.New()</span><br><span class="line">obj.Get([]<span class="keyword">byte</span>(payURL)).Print()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PagePay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradePagePay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"FAST_INSTANT_TRADE_PAY"</span></span><br><span class="line">p.TimeoutExpress = <span class="string">"1m"</span><span class="comment">//唤起收银台订单创建，开始计时 （这里的计时是本次收银台的倒计时，使用相同的订单重新唤起收银台会重新计时）  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">p.GoodsDetail = []*alipay.GoodsDetail&#123;&amp;alipay.GoodsDetail&#123;</span><br><span class="line">GoodsId:   <span class="string">"123"</span>,</span><br><span class="line">GoodsName: <span class="string">"test"</span>,</span><br><span class="line">Quantity:  <span class="number">1</span>,</span><br><span class="line">Price:     <span class="number">1</span>,</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line">url, err := client.TradePagePay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(url.String())</span><br><span class="line">c.Redirect(<span class="number">302</span>,url.String())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FacePay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradePreCreate&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"FACE_TO_FACE_PAYMENT"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "3m" //   统一收单线下交易预创建（扫码支付）：生成二维码使用支付宝钱包扫码以后订单超时时间开始计算  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">p.GoodsDetail = []*alipay.GoodsDetailItem&#123;&amp;alipay.GoodsDetailItem&#123;</span><br><span class="line">GoodsId:   <span class="string">"123"</span>,</span><br><span class="line">GoodsName: <span class="string">"test"</span>,</span><br><span class="line">Quantity:  <span class="string">"1"</span>,</span><br><span class="line">Price:     <span class="string">"1"</span>,</span><br><span class="line">&#125;&#125;</span><br><span class="line">p.PassbackParams = <span class="string">"QrCode"</span></span><br><span class="line">param := p.Params()</span><br><span class="line">param[<span class="string">"qr_code_timeout_express"</span>] = <span class="string">"3m"</span></span><br><span class="line"></span><br><span class="line">rsp, err := client.TradePreCreate(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(rsp)</span><br><span class="line"></span><br><span class="line">content := rsp.Content.QRCode</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(content) &lt; <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//obj := qrcodeTerminal.New2(qrcodeTerminal.ConsoleColors.BrightBlue,qrcodeTerminal.ConsoleColors.BrightGreen,qrcodeTerminal.QRCodeRecoveryLevels.Highest)</span></span><br><span class="line">obj := qrcodeTerminal.New()</span><br><span class="line">obj.Get([]<span class="keyword">byte</span>(content)).Print()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AppPay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeAppPay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Body = <span class="string">"body"</span></span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"QUICK_MSECURITY_PAY"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "7d" // 输入支付密码订单创建超时时间开始计算，如果用户出现余额不足，才会在手机端显示等待买家付款，然后超时关闭。   如果不设置该参数默认15天订单关闭</span></span><br><span class="line">param, err := client.TradeAppPay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(param)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Return</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">_ = c.Request.ParseForm()</span><br><span class="line">ok, err := client.VerifySign(c.Request.Form)</span><br><span class="line">fmt.Println(ok, err)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || !ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"同步验签失败"</span>)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("out_trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_status"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("buyer_id"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("notify_type"))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> notify, _ = client.GetTradeNotification(c.Request)</span><br><span class="line"><span class="keyword">if</span> notify != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"同步验证支付成功"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(notify.OutTradeNo)</span><br><span class="line">fmt.Println(notify.TradeNo)</span><br><span class="line">fmt.Println(notify.TradeStatus)</span><br><span class="line">fmt.Println(notify.BuyerId)</span><br><span class="line">fmt.Println(notify.NotifyType)</span><br><span class="line">fmt.Println(notify.PassbackParams)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"同步验证支付失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Notify</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">_ = c.Request.ParseForm()</span><br><span class="line">ok, err := client.VerifySign(c.Request.PostForm)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || !ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"异步验签失败"</span>)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(c.Request.PostForm)</span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("out_trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_status"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("buyer_id"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("notify_type"))</span></span><br><span class="line"><span class="keyword">var</span> notify, _ = client.GetTradeNotification(c.Request)</span><br><span class="line"><span class="keyword">if</span> notify != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"异步验证支付成功"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(notify.OutTradeNo)</span><br><span class="line">fmt.Println(notify.TradeNo)</span><br><span class="line">fmt.Println(notify.TradeStatus)</span><br><span class="line">fmt.Println(notify.BuyerId)</span><br><span class="line">fmt.Println(notify.NotifyType)</span><br><span class="line">fmt.Println(notify.PassbackParams)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"异步验证支付失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">alipay.AckNotification(c.Writer) <span class="comment">// 确认收到通知消息</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">QueryOrder</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeQuery&#123;&#125;</span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">rsp, err := client.TradeQuery(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(rsp)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CancelOrder</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeCancel&#123;&#125;</span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">rsp, err := client.TradeCancel(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(rsp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="证书方式"><a href="#证书方式" class="headerlink" title="证书方式"></a>证书方式</h1><p>点击获取CSR文件</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay7.png"></p><p>上传制作好证书</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay9.png"></p><p>下载应用公钥证书、支付宝公钥证书、支付宝根证书</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/pay/alipay8.png"></p><p>测试代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"github.com/smartwalle/alipay/v3"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> client *alipay.Client</span><br><span class="line"><span class="comment">// 公网ip</span></span><br><span class="line"><span class="keyword">var</span> notifyUrl = <span class="string">"http://xxx.xxx.xxx.xxx:5001/notify"</span> <span class="comment">// 异步回调</span></span><br><span class="line"><span class="keyword">var</span> returnUrl = <span class="string">"http://xxx.xxx.xxx.xxx:5001/return"</span> <span class="comment">// 同步回调</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Init</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> privateKey = <span class="string">"MIIEvv31r5zsxkK7qfVSg=="</span> <span class="comment">// 必须，上一步中使用 RSA签名验签工具 生成的私钥</span></span><br><span class="line"><span class="keyword">var</span> appId = <span class="string">"201610xxxxxxxxxx"</span></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">client, err = alipay.New(appId, privateKey, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">err = client.LoadAppPublicCertFromFile(<span class="string">"appCertPublicKey_2017011104995404.crt"</span>) <span class="comment">// 加载应用公钥证书</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">err = client.LoadAliPayRootCertFromFile(<span class="string">"alipayRootCert.crt"</span>) <span class="comment">// 加载支付宝根证书</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">err = client.LoadAliPayPublicCertFromFile(<span class="string">"alipayCertPublicKey_RSA2.crt"</span>) <span class="comment">// 加载支付宝公钥证书</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// qr_code_timeout_express：允许用户最晚付款时间，从接口调用成功开始计时，最小值2m；传值1m扫码支付会直接报二维码已失效，二维码有效时间是2小时，所以该参数设置值超过2h也是无效值；</span></span><br><span class="line"><span class="comment">// timeout_express：最小值为1m，最大值为15t，不传默认15t；</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//gin.SetMode(gin.ReleaseMode)</span></span><br><span class="line">err := Init()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    router := gin.Default()</span><br><span class="line">    router.GET(<span class="string">"/wap_pay/:id"</span>, WapPay)</span><br><span class="line">router.GET(<span class="string">"/page_pay/:id"</span>, PagePay)</span><br><span class="line">router.GET(<span class="string">"/app_pay/:id"</span>, AppPay)</span><br><span class="line">router.GET(<span class="string">"/face_pay/:id"</span>, FacePay)</span><br><span class="line">router.GET(<span class="string">"/query/:id"</span>, QueryOrder)</span><br><span class="line">router.GET(<span class="string">"/cancel/:id"</span>, CancelOrder)</span><br><span class="line">router.GET(<span class="string">"/wap_pay_qr/:id"</span>, WapPayQr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.GET(<span class="string">"/return"</span>, Return)</span><br><span class="line">router.POST(<span class="string">"/notify"</span>, Notify)</span><br><span class="line"></span><br><span class="line">    err = router.Run(<span class="string">":5002"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WapPay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeWapPay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"QUICK_WAP_WAY"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "7d"//输入支付密码订单创建超时时间开始计算，如果用户出现余额不足，才会在手机端显示等待买家付款。 然后超时关闭。  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">url, err := client.TradeWapPay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> payURL = url.String()</span><br><span class="line">fmt.Println(payURL)</span><br><span class="line"><span class="comment">// 这个 payURL 即是用于支付的 URL，可将输出的内容复制，到浏览器中访问该 URL 即可打开支付页面。</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"test"</span>)</span><br><span class="line">c.Redirect(<span class="number">302</span>,payURL)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WapPayQr</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeWapPay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"QUICK_WAP_WAY"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "7d"//输入支付密码订单创建超时时间开始计算，如果用户出现余额不足，才会在手机端显示等待买家付款。 然后超时关闭。  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">url, err := client.TradeWapPay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> payURL = url.String()</span><br><span class="line">fmt.Println(payURL)</span><br><span class="line"><span class="comment">// 这个 payURL 即是用于支付的 URL，可将输出的内容复制，到浏览器中访问该 URL 即可打开支付页面。</span></span><br><span class="line"></span><br><span class="line">obj := qrcodeTerminal.New()</span><br><span class="line">obj.Get([]<span class="keyword">byte</span>(payURL)).Print()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PagePay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradePagePay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"FAST_INSTANT_TRADE_PAY"</span></span><br><span class="line">p.TimeoutExpress = <span class="string">"1m"</span><span class="comment">//唤起收银台订单创建，开始计时 （这里的计时是本次收银台的倒计时，使用相同的订单重新唤起收银台会重新计时）  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">p.GoodsDetail = []*alipay.GoodsDetail&#123;&amp;alipay.GoodsDetail&#123;</span><br><span class="line">GoodsId:   <span class="string">"123"</span>,</span><br><span class="line">GoodsName: <span class="string">"test"</span>,</span><br><span class="line">Quantity:  <span class="number">1</span>,</span><br><span class="line">Price:     <span class="number">1</span>,</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line">url, err := client.TradePagePay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(url.String())</span><br><span class="line">c.Redirect(<span class="number">302</span>,url.String())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FacePay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradePreCreate&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"FACE_TO_FACE_PAYMENT"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "3m" //   统一收单线下交易预创建（扫码支付）：生成二维码使用支付宝钱包扫码以后订单超时时间开始计算  如果不设置该参数默认15天订单关闭</span></span><br><span class="line">p.GoodsDetail = []*alipay.GoodsDetailItem&#123;&amp;alipay.GoodsDetailItem&#123;</span><br><span class="line">GoodsId:   <span class="string">"123"</span>,</span><br><span class="line">GoodsName: <span class="string">"test"</span>,</span><br><span class="line">Quantity:  <span class="string">"1"</span>,</span><br><span class="line">Price:     <span class="string">"1"</span>,</span><br><span class="line">&#125;&#125;</span><br><span class="line">p.PassbackParams = <span class="string">"QrCode"</span></span><br><span class="line">param := p.Params()</span><br><span class="line">param[<span class="string">"qr_code_timeout_express"</span>] = <span class="string">"3m"</span></span><br><span class="line"></span><br><span class="line">rsp, err := client.TradePreCreate(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(rsp)</span><br><span class="line"></span><br><span class="line">content := rsp.Content.QRCode</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(content) &lt; <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//obj := qrcodeTerminal.New2(qrcodeTerminal.ConsoleColors.BrightBlue,qrcodeTerminal.ConsoleColors.BrightGreen,qrcodeTerminal.QRCodeRecoveryLevels.Highest)</span></span><br><span class="line">obj := qrcodeTerminal.New()</span><br><span class="line">obj.Get([]<span class="keyword">byte</span>(content)).Print()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AppPay</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeAppPay&#123;&#125;</span><br><span class="line">p.NotifyURL = notifyUrl</span><br><span class="line">p.ReturnURL = returnUrl</span><br><span class="line">p.Body = <span class="string">"body"</span></span><br><span class="line">p.Subject = <span class="string">"支付测试"</span></span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">p.TotalAmount = <span class="string">"1.00"</span></span><br><span class="line">p.ProductCode = <span class="string">"QUICK_MSECURITY_PAY"</span></span><br><span class="line"><span class="comment">//p.TimeoutExpress = "7d" // 输入支付密码订单创建超时时间开始计算，如果用户出现余额不足，才会在手机端显示等待买家付款，然后超时关闭。   如果不设置该参数默认15天订单关闭</span></span><br><span class="line">param, err := client.TradeAppPay(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(param)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Return</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">_ = c.Request.ParseForm()</span><br><span class="line">ok, err := client.VerifySign(c.Request.Form)</span><br><span class="line">fmt.Println(ok, err)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || !ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"同步验签失败"</span>)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("out_trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_status"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("buyer_id"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("notify_type"))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> notify, _ = client.GetTradeNotification(c.Request)</span><br><span class="line"><span class="keyword">if</span> notify != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"同步验证支付成功"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(notify.OutTradeNo)</span><br><span class="line">fmt.Println(notify.TradeNo)</span><br><span class="line">fmt.Println(notify.TradeStatus)</span><br><span class="line">fmt.Println(notify.BuyerId)</span><br><span class="line">fmt.Println(notify.NotifyType)</span><br><span class="line">fmt.Println(notify.PassbackParams)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"同步验证支付失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Notify</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">_ = c.Request.ParseForm()</span><br><span class="line">ok, err := client.VerifySign(c.Request.PostForm)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || !ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"异步验签失败"</span>)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(c.Request.PostForm)</span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("out_trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_no"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("trade_status"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("buyer_id"))</span></span><br><span class="line"><span class="comment">//fmt.Println(c.PostForm("notify_type"))</span></span><br><span class="line"><span class="keyword">var</span> notify, _ = client.GetTradeNotification(c.Request)</span><br><span class="line"><span class="keyword">if</span> notify != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"异步验证支付成功"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(notify.OutTradeNo)</span><br><span class="line">fmt.Println(notify.TradeNo)</span><br><span class="line">fmt.Println(notify.TradeStatus)</span><br><span class="line">fmt.Println(notify.BuyerId)</span><br><span class="line">fmt.Println(notify.NotifyType)</span><br><span class="line">fmt.Println(notify.PassbackParams)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"异步验证支付失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">alipay.AckNotification(c.Writer) <span class="comment">// 确认收到通知消息</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">QueryOrder</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeQuery&#123;&#125;</span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">rsp, err := client.TradeQuery(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(rsp)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CancelOrder</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">outTradeNo := c.Param(<span class="string">"id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(outTradeNo) &lt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"订单号错误"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = alipay.TradeCancel&#123;&#125;</span><br><span class="line">p.OutTradeNo = outTradeNo</span><br><span class="line">rsp, err := client.TradeCancel(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(rsp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;支付宝沙盒环境搭建&quot;&gt;&lt;a href=&quot;#支付宝沙盒环境搭建&quot; class=&quot;headerlink&quot; title=&quot;支付宝沙盒环境搭建&quot;&gt;&lt;/a&gt;支付宝沙盒环境搭建&lt;/h1&gt;&lt;h2 id=&quot;开发工具&quot;&gt;&lt;a href=&quot;#开发工具&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="pay" scheme="http://wangyangyangisme.github.io/categories/pay/"/>
    
    
  </entry>
  
  <entry>
    <title>CAS单点登录原理解析</title>
    <link href="http://wangyangyangisme.github.io/2019/12/23/frontend-CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/"/>
    <id>http://wangyangyangisme.github.io/2019/12/23/frontend-CAS单点登录原理解析/</id>
    <published>2019-12-23T15:50:36.000Z</published>
    <updated>2019-12-25T08:41:11.688Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载:<a href="http://www.sohu.com/a/280937943_756465" target="_blank" rel="noopener">http://www.sohu.com/a/280937943_756465</a></p></blockquote><h1 id="CAS单点登录原理解析"><a href="#CAS单点登录原理解析" class="headerlink" title="CAS单点登录原理解析"></a>CAS单点登录原理解析</h1><h2 id="1、基于Cookie的单点登录的回顾"><a href="#1、基于Cookie的单点登录的回顾" class="headerlink" title="1、基于Cookie的单点登录的回顾"></a>1、基于Cookie的单点登录的回顾</h2><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas1.jpg"></p><p>基于Cookie的单点登录核心原理：</p><p>将用户名密码加密之后存于Cookie中，之后访问网站时在过滤器（filter）中校验用户权限，如果没有权限则从Cookie中取出用户名密码进行登录，让用户从某种意义上觉得只登录了一次。</p><p>该方式缺点就是多次传送用户名密码，增加被盗风险，以及不能跨域。同时<a href="http://www.qiandu.com与mail.qiandu.com同时拥有登录逻辑的代码，如果涉及到修改操作，则需要修改两处。" target="_blank" rel="noopener">www.qiandu.com与mail.qiandu.com同时拥有登录逻辑的代码，如果涉及到修改操作，则需要修改两处。</a> </p><h2 id="2、统一认证中心方案原理"><a href="#2、统一认证中心方案原理" class="headerlink" title="2、统一认证中心方案原理"></a>2、统一认证中心方案原理</h2><p>在生活中我们也有类似的相关生活经验，例如你去食堂吃饭，食堂打饭的阿姨（<a href="http://www.qiandu.com）告诉你，不收现金。并且告诉你，你去门口找换票的（passport.com）换小票。于是你换完票之后，再去找食堂阿姨，食堂阿姨拿着你的票，问门口换票的，这个票是真的吗？换票的说，是真的，于是给你打饭了。">www.qiandu.com）告诉你，不收现金。并且告诉你，你去门口找换票的（passport.com）换小票。于是你换完票之后，再去找食堂阿姨，食堂阿姨拿着你的票，问门口换票的，这个票是真的吗？换票的说，是真的，于是给你打饭了。</a></p><p>基于上述生活中的场景，我们将基于Cookie的单点登录改良以后的方案如下： </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas2.jpg"></p><p>经过分析，Cookie单点登录认证太过于分散，每个网站都持有一份登陆认证代码。于是我们将认证统一化，形成一个独立的服务。当我们需要登录操作时，则重定向到统一认证中心<a href="http://passport.com。于是乎整个流程就如上图所示：">http://passport.com。于是乎整个流程就如上图所示：</a></p><p><strong>第一步</strong>：用户访问<a href="http://www.qiandu.com。过滤器判断用户是否登录，没有登录，则重定向（302）到网站http://passport.com。" target="_blank" rel="noopener">www.qiandu.com。过滤器判断用户是否登录，没有登录，则重定向（302）到网站http://passport.com。</a></p><p><strong>第二步</strong>：重定向到passport.com，输入用户名密码。passport.com将用户登录的信息记录到服务器的session中。</p><p><strong>第三步</strong>：passport.com给浏览器发送一个特殊的凭证，浏览器将凭证交给<a href="http://www.qiandu.com，www.qiandu.com则拿着浏览器交给他的凭证去passport.com验证凭证是否有效，从而判断用户是否登录成功。" target="_blank" rel="noopener">www.qiandu.com，www.qiandu.com则拿着浏览器交给他的凭证去passport.com验证凭证是否有效，从而判断用户是否登录成功。</a></p><p><strong>第四步</strong>：登录成功，浏览器与网站之间进行正常的访问。</p><h2 id="3、Yelu大学研发的CAS-Central-Authentication-Server"><a href="#3、Yelu大学研发的CAS-Central-Authentication-Server" class="headerlink" title="3、Yelu大学研发的CAS(Central Authentication Server)"></a>3、Yelu大学研发的CAS(Central Authentication Server)</h2><p>下面就以耶鲁大学研发的CAS为分析依据，分析其工作原理。首先看一下最上层的项目部署图： </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas3.jpg"></p><p>部署项目时需要部署一个独立的认证中心（cas.qiandu.com），以及其他N个用户自己的web服务。</p><p>认证中心：也就是cas.qiandu.com，即cas-server。用来提供认证服务，由CAS框架提供，用户只需要根据业务实现认证的逻辑即可。</p><p>用户web项目：只需要在web.xml中配置几个过滤器，用来保护资源，过滤器也是CAS框架提供了，即cas-client，基本不需要改动可以直接使用。</p><h2 id="4、CAS的详细登录流程"><a href="#4、CAS的详细登录流程" class="headerlink" title="4、CAS的详细登录流程"></a>4、CAS的详细登录流程</h2><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas4.jpg"></p><p>图是3个登录场景，分别为：第一次访问<a href="http://www.qiandu.com、第二次访问、以及登录状态下第一次访问mail.qiandu.com。" target="_blank" rel="noopener">www.qiandu.com、第二次访问、以及登录状态下第一次访问mail.qiandu.com。</a></p><p>下面就详细说明上图中每个数字标号做了什么，以及相关的请求内容，响应内容。 </p><h3 id="4-1、第一次访问www-qiandu-com"><a href="#4-1、第一次访问www-qiandu-com" class="headerlink" title="4.1、第一次访问www.qiandu.com"></a>4.1、第一次访问<a href="http://www.qiandu.com" target="_blank" rel="noopener">www.qiandu.com</a></h3><p><strong>标号1</strong>：用户访问<a href="http://www.qiandu.com，经过他的第一个过滤器（cas提供，在web.xml中配置）AuthenticationFilter。" target="_blank" rel="noopener">http://www.qiandu.com，经过他的第一个过滤器（cas提供，在web.xml中配置）AuthenticationFilter。</a></p><p>标号1：用户访问<a href="http://www.qiandu.com，经过他的第一个过滤器（cas提供，在web.xml中配置）AuthenticationFilter。" target="_blank" rel="noopener">http://www.qiandu.com，经过他的第一个过滤器（cas提供，在web.xml中配置）AuthenticationFilter。</a></p><p>过滤器全称：org.jasig.cas.client.authentication.AuthenticationFilter</p><p>主要作用：判断是否登录，如果没有登录则重定向到认证中心。</p><p><strong>标号2</strong>：<a href="http://www.qiandu.com发现用户没有登录，则返回浏览器重定向地址。" target="_blank" rel="noopener">www.qiandu.com发现用户没有登录，则返回浏览器重定向地址。</a> </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas5.jpg"></p><p>首先可以看到我们请求<a href="http://www.qiandu.com，之后浏览器返回状态码302，然后让浏览器重定向到cas.qiandu.com并且通过get的方式添加参数service，该参数目的是登录成功之后会要重定向回来，因此需要该参数。并且你会发现，其实server的值就是编码之后的我们请求www.qiandu.com的地址。" target="_blank" rel="noopener">www.qiandu.com，之后浏览器返回状态码302，然后让浏览器重定向到cas.qiandu.com并且通过get的方式添加参数service，该参数目的是登录成功之后会要重定向回来，因此需要该参数。并且你会发现，其实server的值就是编码之后的我们请求www.qiandu.com的地址。</a></p><p><strong>标号3</strong>：浏览器接收到重定向之后发起重定向，请求cas.qiandu.com。</p><p><strong>标号4</strong>：认证中心cas.qiandu.com接收到登录请求，返回登陆页面。 </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas6.jpg"></p><p>上图就是标号3的请求，以及标号4的响应。请求的URL是标号2返回的URL。之后认证中心就展示登录的页面，等待用户输入用户名密码。</p><p><strong>标号5</strong>：用户在cas.qiandu.com的login页面输入用户名密码，提交。</p><p><strong>标号6</strong>：服务器接收到用户名密码，则验证是否有效，验证逻辑可以使用cas-server提供现成的，也可以自己实现。 </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas7.jpg"></p><p>上图就是标号5的请求，以及标号6的响应了。当cas.qiandu.com即csa-server认证通过之后，会返回给浏览器302，重定向的地址就是Referer中的service参数对应的值。后边并通过get的方式挟带了一个ticket令牌，这个ticket就是ST（数字3处）。同时会在Cookie中设置一个CASTGC，该cookie是网站cas.qiandu.com的cookie，只有访问这个网站才会携带这个cookie过去。</p><p>Cookie中的CASTGC：向cookie中添加该值的目的是当下次访问cas.qiandu.com时，浏览器将Cookie中的TGC携带到服务器，服务器根据这个TGC，查找与之对应的TGT。从而判断用户是否登录过了，是否需要展示登录页面。TGT与TGC的关系就像SESSION与Cookie中SESSIONID的关系。</p><p>TGT：Ticket Granted Ticket（俗称大令牌，或者说票根，他可以签发ST）</p><p>TGC：Ticket Granted Cookie（cookie中的value），存在Cookie中，根据他可以找到TGT。</p><p>ST：Service Ticket （小令牌），是TGT生成的，默认是用一次就生效了。也就是上面数字3处的ticket值。</p><p><strong>标号7</strong>：浏览器从cas.qiandu.com哪里拿到ticket之后，就根据指示重定向到<a href="http://www.qiandu.com，请求的url就是上面返回的url。" target="_blank" rel="noopener">www.qiandu.com，请求的url就是上面返回的url。</a> </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas8.jpg"></p><p><strong>标号8</strong>：<a href="http://www.qiandu.com在过滤器中会取到ticket的值，然后通过http方式调用cas.qiandu.com验证该ticket是否是有效的。" target="_blank" rel="noopener">www.qiandu.com在过滤器中会取到ticket的值，然后通过http方式调用cas.qiandu.com验证该ticket是否是有效的。</a></p><p><strong>标号9</strong>：cas.qiandu.com接收到ticket之后，验证，验证通过返回结果告诉<a href="http://www.qiandu.com该ticket有效。" target="_blank" rel="noopener">www.qiandu.com该ticket有效。</a></p><p><strong>标号10</strong>：<a href="http://www.qiandu.com接收到cas-server的返回，知道了用户合法，展示相关资源到用户浏览器上。" target="_blank" rel="noopener">www.qiandu.com接收到cas-server的返回，知道了用户合法，展示相关资源到用户浏览器上。</a></p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas9.jpg"></p><p>至此，第一次访问的整个流程结束，其中标号8与标号9的环节是通过代码调用的，并不是浏览器发起，所以没有截取到报文。 </p><h3 id="4-2、第二次访问www-qiandu-com"><a href="#4-2、第二次访问www-qiandu-com" class="headerlink" title="4.2、第二次访问www.qiandu.com"></a>4.2、第二次访问<a href="http://www.qiandu.com" target="_blank" rel="noopener">www.qiandu.com</a></h3><p>上面以及访问过一次了，当第二次访问的时候发生了什么呢？</p><p><strong>标号11</strong>：用户发起请求，访问<a href="http://www.qiandu.com。会经过cas-client，也就是过滤器，因为第一次访问成功之后www.qiandu.com中会在session中记录用户信息，因此这里直接就通过了，不用验证了。" target="_blank" rel="noopener">www.qiandu.com。会经过cas-client，也就是过滤器，因为第一次访问成功之后www.qiandu.com中会在session中记录用户信息，因此这里直接就通过了，不用验证了。</a></p><p><strong>标号12</strong>：用户通过权限验证，浏览器返回正常资源。 </p><h3 id="4-3、访问mail-qiandu-com"><a href="#4-3、访问mail-qiandu-com" class="headerlink" title="4.3、访问mail.qiandu.com"></a>4.3、访问mail.qiandu.com</h3><p><strong>标号13</strong>：用户在<a href="http://www.qiandu.com正常上网，突然想访问mail.qiandu.com，于是发起访问mail.qiandu.com的请求。" target="_blank" rel="noopener">www.qiandu.com正常上网，突然想访问mail.qiandu.com，于是发起访问mail.qiandu.com的请求。</a></p><p><strong>标号14</strong>：mail.qiandu.com接收到请求，发现第一次访问，于是给他一个重定向的地址，让他去找认证中心登录。 </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas10.jpg"></p><p>上图可以看到，用户请求mail.qiandu.com，然后返回给他一个网址，状态302重定向，service参数就是回来的地址。</p><p><strong>标号15</strong>：浏览器根据14返回的地址，发起重定向，因为之前访问过一次了，因此这次会携带上次返回的Cookie：TGC到认证中心。</p><p><strong>标号16</strong>：认证中心收到请求，发现TGC对应了一个TGT，于是用TGT签发一个ST，并且返回给浏览器，让他重定向到mail.qiandu.com </p><p><img src="/" alt="img" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/cas11.jpg"></p><p>可以发现请求的时候是携带Cookie：CASTGC的，响应的就是一个地址加上TGT签发的ST也就是ticket。</p><p><strong>标号17</strong>：浏览器根据16返回的网址发起重定向。(在sso域中已经保存cookie了)</p><p><strong>标号18</strong>：mail.qiandu.com获取ticket去认证中心验证是否有效。</p><p><strong>标号19</strong>：认证成功，返回在mail.qiandu.com的session中设置登录状态，下次就直接登录。</p><p><strong>标号20</strong>：认证成功之后就反正用想要访问的资源了。</p><h2 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h2><p>至此，CAS登录的整个过程就完毕了，以后有时间总结下如何使用CAS，并运用到项目中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;转载:&lt;a href=&quot;http://www.sohu.com/a/280937943_756465&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.sohu.com/a/280937943_756465&lt;/a
      
    
    </summary>
    
    
      <category term="frontend" scheme="http://wangyangyangisme.github.io/categories/frontend/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS display的32种写法</title>
    <link href="http://wangyangyangisme.github.io/2019/12/20/frontend-CSS%20display%E7%9A%8432%E7%A7%8D%E5%86%99%E6%B3%95/"/>
    <id>http://wangyangyangisme.github.io/2019/12/20/frontend-CSS display的32种写法/</id>
    <published>2019-12-20T07:01:36.000Z</published>
    <updated>2019-12-20T07:01:06.045Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载：<a href="https://segmentfault.com/a/1190000012833458" target="_blank" rel="noopener">https://segmentfault.com/a/1190000012833458</a></p></blockquote><h1 id="CSS-display的32种写法"><a href="#CSS-display的32种写法" class="headerlink" title="CSS display的32种写法"></a>CSS display的32种写法</h1><p>你知道『<code>回</code>』字有四种写法，但你知道<code>display</code>有<code>32</code>种写法吗？今天我们一一道来，让你一次性完全掌握<code>display</code>，从此再也不用对它发愁。</p><p>从大的分类来讲，<code>display</code>的<code>32</code>种写法可以分为<code>6</code>个大类，再加上<code>1</code>个全局类，一共是<code>7</code>大类：</p><ul><li>外部值</li><li>内部值</li><li>列表值</li><li>属性值</li><li>显示值</li><li>混合值</li><li>全局值</li></ul><h1 id="外部值"><a href="#外部值" class="headerlink" title="外部值"></a>外部值</h1><p>所谓外部值，就是说这些值只会直接影响一个元素的外部表现，而不影响元素里面的儿子级孙子级元素的表现。</p><h2 id="display-block"><a href="#display-block" class="headerlink" title="display: block;"></a>display: block;</h2><p>这个值大家不陌生，我们最熟悉的<code>&lt;div&gt;</code>缺省就是这个值，最基本的块级元素，属于<code>css</code>入门初学者都知道的概念，只要是容器类型的元素基本都是这个值。除<code>&lt;div&gt;</code>之外，还有<code>&lt;h1&gt;</code>到<code>&lt;h6&gt;</code>，<code>&lt;p&gt;</code>，<code>&lt;form&gt;</code>，<code>&lt;header&gt;</code>，<code>&lt;footer&gt;</code>，<code>&lt;section&gt;</code>，<code>&lt;article&gt;</code>天生都是这个值。</p><h2 id="display-inline"><a href="#display-inline" class="headerlink" title="display: inline;"></a>display: inline;</h2><p>这个值大家也不陌生，行内元素嘛，只要是个行内元素都是这个值，最典型的是<code>&lt;span&gt;</code>，还有<code>&lt;a&gt;</code>，<code>&lt;img&gt;</code>，以及古代<code>html</code>语言当中的<code>&lt;b&gt;</code>，<code>&lt;i&gt;</code>都属于这一类型。</p><h2 id="display-run-in"><a href="#display-run-in" class="headerlink" title="display: run-in;"></a>display: run-in;</h2><p>这个值有点奇怪，通常没人用它，但你可以知道它。因为除了<code>IE</code>和<code>Opera</code>支持它以外，其他所有主流浏览器包括<code>Chrome</code>, <code>Safari</code>, <code>Firefox</code>全都对它置若罔闻。这东西说白了也没什么神秘，它的意思就是说如果我们命令一个元素<code>run-in</code>，中文意思就是『<code>闯入</code>』！那么这个元素就直接闯入下一行。比如说这样：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display1.webp"></p><p>写起来大概就是这样：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="a"&gt;aaa&lt;/div&gt;</span><br><span class="line">&lt;div class="b"&gt;bbb&lt;/div&gt;</span><br><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">  <span class="attribute">display</span>: run-in;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这有什么用呢？我们拿<code>span</code>设置<code>font-size</code>一样可以实现这个效果，就让<code>IE</code>自己跟自己玩去吧！说实话，在人力资源如此宝贵的今天，<code>IE</code>的产品经理不知脑子是不是进水了，不派工程师去实现那么多比这重要的多得多的特性，却花时间做这么个没用的玩意儿，难道工程师的时间不是金钱吗？难怪市场占有率连年下滑。</p><h1 id="内部值"><a href="#内部值" class="headerlink" title="内部值"></a>内部值</h1><p>谈完了外部值，我们来看看内部值。这一组值比较有意思了，在<code>css3</code>如火如荼的今天，你要玩不转这些值，怕是哪儿也找不到工作的。内部值主要是用来管束自己下属的儿子级元素的排布的，规定它们或者排成<code>S</code>形，或者排成<code>B</code>形这样的。</p><h2 id="display-flow"><a href="#display-flow" class="headerlink" title="display: flow;"></a>display: flow;</h2><p>含义不清，实验室阶段产品，<code>Chrome</code>不支持。如果还不够说服你暂时不要碰它的话，试着理解以下英文原文：</p><blockquote><p>If its outer display type is inline or run-in, and it is  participating in a block or inline formatting context, then it generates an inline box. Otherwise it generates a block container box.</p></blockquote><h2 id="display-flow-root"><a href="#display-flow-root" class="headerlink" title="display: flow-root;"></a>display: flow-root;</h2><p>不同于刚才谈到的<code>flow</code>，现在用<code>flow-root</code>的渐渐多起来了，因为它可以撑起被你<code>float</code>掉的块级元素的高度。外容器本来是有高度的，就像这样：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display2.webp"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container container1"&gt;</span><br><span class="line">  &lt;div class="item"&gt;&lt;/div&gt;</span><br><span class="line">  <span class="selector-tag">Example</span> <span class="selector-tag">one</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#3bc9db</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e3fafc</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1098ad</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#0b7285</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果因为你想让那一行字上去，于是你给<code>.item</code>加了一个<code>float: left;</code>结果就成这样了，外容器高度掉了，这不是很多人常犯的错误吗？</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display3.webp"></p><p>现在我们给<code>.container</code>加上<code>display: flow-root;</code>再看一下：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display4.webp"></p><p>喏，外容器高度又回来了，这效果是不是杠杠的？</p><p>那位同学说，我们用<code>clear: both;</code>不是一样可以达到这效果吗？</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小明，请你出去！我们在讲<code>display: flow-root;</code>，不是在讲<code>clear: both;</code>！</p><h2 id="display-table"><a href="#display-table" class="headerlink" title="display: table;"></a>display: table;</h2><p>这一个属性，以及下面的另外<code>8</code>个与<code>table</code>相关的属性，都是用来控制如何把<code>div</code>显示成<code>table</code>样式的，因为我们不喜欢<code>&lt;table&gt;</code>这个标签嘛，所以我们想把所有的<code>&lt;table&gt;</code>标签都换成<code>&lt;div&gt;</code>标签。<code>&lt;div&gt;</code>有什么好？无非就是能自动换行而已，但其实你完全可以做一个<code>&lt;table&gt;&lt;tr&gt;&lt;td&gt;</code>标签，把它全都替换成<code>display: block;</code>也可以自动折行，只不过略微麻烦而已。</p><p>关于<code>display: table;</code>的详细用法，大家可以参考<a href="http://www.cnblogs.com/haoqipeng/p/html-display-table.html" target="_blank" rel="noopener">这篇文章</a>，这里就不细说了。</p><h2 id="display-flex"><a href="#display-flex" class="headerlink" title="display: flex;"></a>display: flex;</h2><p>敲黑板，划重点！作为新一代的前端工程师，这个属性你必须烂熟于胸衣中，哦，错了，是胸中。<code>display: flex;</code>以及与它相关联的一系列属性：<code>flex-direction</code>, <code>flex-wrap</code>, <code>flex-flow</code>, <code>justify-content</code>, <code>align-items</code>, <code>align-content</code>，并且包括所有这些属性的取值，都是你需要反复研磨的。<code>2009</code>年诞生的这个属性可以说是不亚于<code>css</code>界一场蒸汽机诞生一样的工业革命，它的诞生标志着马车一样的<code>float</code>被彻底抛进历史的垃圾堆。</p><p>关于它的详情，会中文的可以参考阮一峰的<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">这篇文章</a>，但我认为，格式编排的更好还是<code>csstrick</code>上的<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener">这篇文章</a>。没有一张图能完整地展现<code>flex</code>的神韵，就放这张我比较喜欢的图片吧：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display5.webp"></p><h2 id="display-grid"><a href="#display-grid" class="headerlink" title="display: grid;"></a>display: grid;</h2><p>会<code>flex</code>很吊吗？会<code>grid</code>更吊哦！也许这就是下次前端面试的重点哦！</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display6.webp"></p><p><code>grid</code>布局，中文翻译为<code>网格布局</code>。学习<code>grid</code>布局有两个重点：一个重点是<code>grid</code>布局引入了一个全新的单位：<code>fr</code>，它是<code>fraction</code>（<code>分数</code>）的缩写，所以从此以后，你的兵器库里除了<code>px</code>, <code>em</code>, <code>rem</code>, <code>百分比</code>这些常见兵器以及<code>vw</code>, <code>vh</code>这些新式武器之外，又多了一样旁门暗器<code>fr</code>，要想用好<code>grid</code>，必须充分掌握<code>fr</code>。另一个重点是<code>斜杠操作符</code>，这可不是<code>分数</code>哦。它表示的是<code>起始位置</code>和<code>结束位置</code>。比如说<code>3 / 4</code>，这可不是<code>四分之三</code>的意思，这是指一个元素从第<code>3</code>行开始，到第<code>4</code>行结束，但又不包括第<code>4</code>行。</p><p>同样，与<code>grid</code>相关联的也有一大堆旁门属性，是在学习<code>display: grid;</code>的同时必须掌握的。包括<code>grid</code>, <code>grid-column-start</code>, <code>grid-column-end</code>, <code>grid-row-start</code>, <code>grid-row-end</code>, <code>grid-template</code>, <code>grid-template-columns</code>, <code>grid-template-rows</code>, <code>grid-template-areas</code>, <code>grid-gap</code>, <code>grid-column-gap</code>, <code>grid-row-gap</code>, <code>grid-auto-columns</code>, <code>grid-auto-rows</code>, <code>grid-auto-flow</code>, <code>grid-column</code>, <code>grid-row</code>。不能详述，关于这个写起来又是一大篇文章。详情还是参考csstrick上<a href="https://css-tricks.com/snippets/css/complete-guide-grid/" target="_blank" rel="noopener">这篇文章</a>，讲得非常细致非常清楚。</p><h2 id="display-ruby"><a href="#display-ruby" class="headerlink" title="display: ruby;"></a>display: ruby;</h2><p><code>ruby</code>这个取值对于我们亚洲人来说其实是非常有用的一个东西，但是目前除了<code>Firefox</code>以外其它浏览器对它的支持都不太好。简而言之，<code>display: ruby;</code>的作用就是可以做出下面这样的东西：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display7.webp"></p><p>很好的东西，对吧？如果可以用的话，对我国的小学教育可以有极大的促进。但可惜我们现在暂时还用不了。</p><p><code>ruby</code>这个词在英语里的意思是<code>红宝石</code>，但在日语里是<code>ルビ</code>，翻译成中文是<code>旁注标记</code>的意思，我们中文的旁注标记就是汉语拼音。可以想见，这个标准的制定者肯定是日本人，如果是我们中国人的话，那这个标签就不是<code>ruby</code>，而是<code>pinyin</code>了。还有一个<code>ruby</code>语言，发明者也是一个日本人，和<code>html</code>里这个<code>ruby</code>是两码事，不要搞混了。</p><p><code>ruby</code>的语法大致如下：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display8.webp"></p><h2 id="display-subgrid"><a href="#display-subgrid" class="headerlink" title="display: subgrid;"></a>display: subgrid;</h2><p><code>2015</code>年<code>8</code>月<code>6</code>日，<code>W3C</code>的级联样式单（<code>CSS</code>）工作组（<code>Cascading Style Sheets Working Group</code>）发布了<code>CSS网格布局模块第一级</code>（<code>CSS Grid Layout Module Level 1</code>）的工作草案。在这个草案里规定了上一节我们讲到的<code>display: grid;</code>的方案。而<code>display: subgrid;</code>是属于<code>2017</code>年<code>11</code>月<code>9</code>日发布的非正式的<a href="https://drafts.csswg.org/css-grid-2/" target="_blank" rel="noopener">CSS网格布局模块第二级</a>的内容。所以这是一个非常新的草案，并且围绕它的争议从来也没有断过。</p><p><code>subgrid</code>总的思想是说大网格里还可以套小网格，互相不影响。但如果<code>grid</code>里可以再套<code>subgrid</code>的话，那我<code>subgrid</code>里还想再套<code>subgrid</code>怎么办？<code>subsubgrid</code>吗？况且，到底是<code>grid: subgrid;</code>还是<code>display: subgrid;</code>这个也没有达成共识，关于此一系列的争议，感兴趣的同学可以看看<a href="https://www.w3cplus.com/css3/why-display-contents-is-not-css-grid-layout-subgrid.html" target="_blank" rel="noopener">这篇文章</a>，英语好的可以看<a href="https://blogs.igalia.com/mrego/2016/02/12/subgrids-thinking-out-loud/" target="_blank" rel="noopener">这篇</a>。</p><h1 id="列表值"><a href="#列表值" class="headerlink" title="列表值"></a>列表值</h1><h2 id="display-list-item"><a href="#display-list-item" class="headerlink" title="display: list-item;"></a>display: list-item;</h2><p><code>display: list-item;</code>和<code>display: table;</code>一样，也是一帮痛恨各种<code>html</code>标签，而希望只使用<code>&lt;div&gt;</code>来写遍一切<code>html</code>的家伙搞出来的鬼东西，实际使用极少，效果就是这样：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display9.webp"></p><p>看，你用<code>&lt;ul&gt;&lt;li&gt;</code>能实现的效果，他可以用<code>&lt;div&gt;</code>实现出来，就是这个作用。</p><h1 id="属性值"><a href="#属性值" class="headerlink" title="属性值"></a>属性值</h1><p>属性值一般是附属于主值的，比如主值里设置了<code>display: table;</code>，就可以在子元素里使用<code>display: table-row-group;</code>等等属性，不过并不绝对。关于它们的作用，主要参考主值就够了。</p><h2 id="display-table-row-group"><a href="#display-table-row-group" class="headerlink" title="display: table-row-group;"></a>display: table-row-group;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-table-header-group"><a href="#display-table-header-group" class="headerlink" title="display: table-header-group;"></a>display: table-header-group;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-table-footer-group"><a href="#display-table-footer-group" class="headerlink" title="display: table-footer-group;"></a>display: table-footer-group;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-table-row"><a href="#display-table-row" class="headerlink" title="display: table-row;"></a>display: table-row;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-table-cell"><a href="#display-table-cell" class="headerlink" title="display: table-cell;"></a>display: table-cell;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。这个属性有必要详细说说，因为它完全可以单独应用，用在高度不固定元素的垂直居中上，详情请见张鑫旭的<a href="http://www.zhangxinxu.com/wordpress/2010/10/我所知道的几种displaytable-cell的应用/" target="_blank" rel="noopener">这篇文章</a>。效果如下图所示：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display10.webp"></p><h2 id="display-table-column-group"><a href="#display-table-column-group" class="headerlink" title="display: table-column-group;"></a>display: table-column-group;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-table-column"><a href="#display-table-column" class="headerlink" title="display: table-column;"></a>display: table-column;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-table-caption"><a href="#display-table-caption" class="headerlink" title="display: table-caption;"></a>display: table-caption;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#table" target="_blank" rel="noopener">display: table;</a>。</p><h2 id="display-ruby-base"><a href="#display-ruby-base" class="headerlink" title="display: ruby-base;"></a>display: ruby-base;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#ruby" target="_blank" rel="noopener">display: ruby;</a>。</p><h2 id="display-ruby-text"><a href="#display-ruby-text" class="headerlink" title="display: ruby-text;"></a>display: ruby-text;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#ruby" target="_blank" rel="noopener">display: ruby;</a>。</p><h2 id="display-ruby-base-container"><a href="#display-ruby-base-container" class="headerlink" title="display: ruby-base-container;"></a>display: ruby-base-container;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#ruby" target="_blank" rel="noopener">display: ruby;</a>。</p><h2 id="display-ruby-text-container"><a href="#display-ruby-text-container" class="headerlink" title="display: ruby-text-container;"></a>display: ruby-text-container;</h2><p>详情参考<a href="https://segmentfault.com/a/1190000012833458#ruby" target="_blank" rel="noopener">display: ruby;</a>。</p><h1 id="显示值"><a href="#显示值" class="headerlink" title="显示值"></a>显示值</h1><p><code>MDN</code>里把它叫做<code>&lt;display-box&gt; values</code>（<code>盒子值</code>），我把它叫做<code>显示值</code>，主要是为了便于理解。</p><h2 id="display-contents"><a href="#display-contents" class="headerlink" title="display: contents;"></a>display: contents;</h2><p>这大概是<code>2018</code>年年初最令人喜大普达的一件大事了：<a href="https://blogs.igalia.com/mrego/2018/01/11/display-contents-is-coming/" target="_blank" rel="noopener">Chrome 65版本终于要支持display: contents;了</a>！<code>Firefox</code>早就支持了，而<code>Chrome</code>直到现在才开始支持，这么重要的特性，它到底有什么功能呢？结果恐怕会令你大失所望。原来的布局是这样的：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display11.webp"></p><p>你给中间那个<code>div</code>加上<code>display: contents;</code>之后，它就变成这样了：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display12.webp"></p><p>这就是<code>display: contents;</code>的作用，它让子元素拥有和父元素一样的布局方式，仅此而已。</p><h2 id="display-none"><a href="#display-none" class="headerlink" title="display: none;"></a>display: none;</h2><p>这么著名的值还用多说吗？</p><h1 id="混合值"><a href="#混合值" class="headerlink" title="混合值"></a>混合值</h1><h2 id="display-inline-block"><a href="#display-inline-block" class="headerlink" title="display: inline-block;"></a>display: inline-block;</h2><p>关于<code>display: inline-block;</code>的作用恐怕只要做过<code>3</code>天以上前端的工程师都应该知道。什么也不说了，上一张著名的图片作总结吧：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display13.webp"></p><h2 id="display-inline-table"><a href="#display-inline-table" class="headerlink" title="display: inline-table;"></a>display: inline-table;</h2><p>你要能理解<code>inline-block</code>，你就能理解<code>inline-table</code>。在行内显示一个表格，就像这样：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display14.webp"></p><h2 id="display-inline-flex"><a href="#display-inline-flex" class="headerlink" title="display: inline-flex;"></a>display: inline-flex;</h2><p>这个就不用多说了吧？跟上面一样，在行内进行弹性布局，参考<a href="https://segmentfault.com/a/1190000012833458#flex" target="_blank" rel="noopener">display: flex;</a>。</p><h2 id="display-inline-grid"><a href="#display-inline-grid" class="headerlink" title="display: inline-grid;"></a>display: inline-grid;</h2><p>同上，在行内进行网格布局，参考<a href="https://segmentfault.com/a/1190000012833458#grid" target="_blank" rel="noopener">display: grid;</a>。</p><h1 id="全局值"><a href="#全局值" class="headerlink" title="全局值"></a>全局值</h1><p>这些值不是<code>display</code>属性的专利，几乎其它任意属性都可以用，列在这里凑个数。</p><h2 id="display-inherit"><a href="#display-inherit" class="headerlink" title="display: inherit;"></a>display: inherit;</h2><p>继承父元素的<code>display</code>属性。</p><h2 id="display-initial"><a href="#display-initial" class="headerlink" title="display: initial;"></a>display: initial;</h2><p>不管父元素怎么设定，恢复到浏览器最初始时的<code>display</code>属性。</p><h2 id="display-unset"><a href="#display-unset" class="headerlink" title="display: unset;"></a>display: unset;</h2><p><code>unset</code>混合了<code>inherit</code>和<code>initial</code>。如果父元素设值了，就用父元素的设定，如果父元素没设值，就用浏览器的缺省设定。直接看图最明白：</p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/wangyangyangisme/CDN@latest/blog/frontend/display15.webp"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是在<code>css</code>里<code>display</code>的<code>32</code>种写法。谈了这么多，不知道你记住了多少呢？其实，单纯理解每一个<code>display</code>属性的取值都不难，难的是融会贯通，在恰当的地方运用恰当的值，毕竟我们的目的是为了把代码写短，而不是把代码写长。如果你怕记不太清的话，就请你收藏这篇小文，也许将来的某一天，你会用得着。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;转载：&lt;a href=&quot;https://segmentfault.com/a/1190000012833458&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://segmentfault.com/a/119000001
      
    
    </summary>
    
    
      <category term="frontend" scheme="http://wangyangyangisme.github.io/categories/frontend/"/>
    
    
  </entry>
  
</feed>
